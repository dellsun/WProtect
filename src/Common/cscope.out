cscope 15 $HOME/Project/WProtect/inc               0000271782
	@Analysis.h

8 
	s_CODE_INFORMATION_


10 * 
	mbuff
;

11 
	msize
;

12 
	mba£
;

13 }
	tCodeInf‹m©i⁄
,*
	tpCodeInf‹m©i⁄
;

	@CodeInfoStruct.h

	@ELFStruct.h

3 
	~<°döt.h
>

6 
uöt16_t
 
	tElf32_HÆf
;

7 
uöt16_t
 
	tElf64_HÆf
;

10 
uöt32_t
 
	tElf32_W‹d
;

11 
öt32_t
 
	tElf32_Sw‹d
;

12 
uöt32_t
 
	tElf64_W‹d
;

13 
öt32_t
 
	tElf64_Sw‹d
;

16 
uöt64_t
 
	tElf32_Xw‹d
;

17 
öt64_t
 
	tElf32_Sxw‹d
;

18 
uöt64_t
 
	tElf64_Xw‹d
;

19 
öt64_t
 
	tElf64_Sxw‹d
;

22 
uöt32_t
 
	tElf32_Addr
;

23 
uöt64_t
 
	tElf64_Addr
;

26 
uöt32_t
 
	tElf32_Off
;

27 
uöt64_t
 
	tElf64_Off
;

30 
uöt16_t
 
	tElf32_Se˘i⁄
;

31 
uöt16_t
 
	tElf64_Se˘i⁄
;

34 
Elf32_HÆf
 
	tElf32_Vîsym
;

35 
Elf64_HÆf
 
	tElf64_Vîsym
;

39 
	#EI_NIDENT
 (16)

	)

43 
	me_idít
[
EI_NIDENT
];

55 
Elf32_HÆf
 
	me_ty≥
;

56 
Elf32_HÆf
 
	me_machöe
;

57 
Elf32_W‹d
 
	me_vîsi⁄
;

58 
Elf32_Addr
 
	me_íåy
;

59 
Elf32_Off
 
	me_phoff
;

60 
Elf32_Off
 
	me_shoff
;

61 
Elf32_W‹d
 
	me_Êags
;

62 
Elf32_HÆf
 
	me_ehsize
;

63 
Elf32_HÆf
 
	me_phítsize
;

64 
Elf32_HÆf
 
	me_phnum
;

65 
Elf32_HÆf
 
	me_shítsize
;

66 
Elf32_HÆf
 
	me_shnum
;

67 
Elf32_HÆf
 
	me_sh°∫dx
;

68 } 
	tElf32_Ehdr
;

72 
	me_idít
[
EI_NIDENT
];

73 
Elf64_HÆf
 
	me_ty≥
;

74 
Elf64_HÆf
 
	me_machöe
;

75 
Elf64_W‹d
 
	me_vîsi⁄
;

76 
Elf64_Addr
 
	me_íåy
;

77 
Elf64_Off
 
	me_phoff
;

78 
Elf64_Off
 
	me_shoff
;

79 
Elf64_W‹d
 
	me_Êags
;

80 
Elf64_HÆf
 
	me_ehsize
;

81 
Elf64_HÆf
 
	me_phítsize
;

82 
Elf64_HÆf
 
	me_phnum
;

83 
Elf64_HÆf
 
	me_shítsize
;

84 
Elf64_HÆf
 
	me_shnum
;

85 
Elf64_HÆf
 
	me_sh°∫dx
;

86 } 
	tElf64_Ehdr
;

92 
	#EI_MAG0
 0

	)

93 
	#ELFMAG0
 0x7‡

	)

95 
	#EI_MAG1
 1

	)

96 
	#ELFMAG1
 'E'

	)

98 
	#EI_MAG2
 2

	)

99 
	#ELFMAG2
 'L'

	)

101 
	#EI_MAG3
 3

	)

102 
	#ELFMAG3
 'F'

	)

105 
	#ELFMAG
 "\177ELF"

	)

106 
	#SELFMAG
 4

	)

108 
	#EI_CLASS
 4

	)

109 
	#ELFCLASSNONE
 0

	)

110 
	#ELFCLASS32
 1

	)

111 
	#ELFCLASS64
 2

	)

112 
	#ELFCLASSNUM
 3

	)

114 
	#EI_DATA
 5

	)

115 
	#ELFDATANONE
 0

	)

116 
	#ELFDATA2LSB
 1

	)

117 
	#ELFDATA2MSB
 2

	)

118 
	#ELFDATANUM
 3

	)

120 
	#EI_VERSION
 6

	)

123 
	#EI_OSABI
 7

	)

124 
	#ELFOSABI_NONE
 0

	)

125 
	#ELFOSABI_SYSV
 0

	)

126 
	#ELFOSABI_HPUX
 1

	)

127 
	#ELFOSABI_NETBSD
 2

	)

128 
	#ELFOSABI_LINUX
 3

	)

129 
	#ELFOSABI_SOLARIS
 6

	)

130 
	#ELFOSABI_AIX
 7

	)

131 
	#ELFOSABI_IRIX
 8

	)

132 
	#ELFOSABI_FREEBSD
 9

	)

133 
	#ELFOSABI_TRU64
 10

	)

134 
	#ELFOSABI_MODESTO
 11

	)

135 
	#ELFOSABI_OPENBSD
 12

	)

136 
	#ELFOSABI_ARM_AEABI
 64

	)

137 
	#ELFOSABI_ARM
 97

	)

138 
	#ELFOSABI_STANDALONE
 255

	)

140 
	#EI_ABIVERSION
 8

	)

142 
	#EI_PAD
 9

	)

	@Exeformat.h

	@MyString.cpp

1 
	~"MySåög.h
"

2 
	~<WPrŸe˘C⁄fig.h
>

4 #i‚de‡
WINDOWS


6 * 
	$memc˝y
–*
d°
, c⁄° *
§c
, 
c
, 
size_t
 
n
 )

8  
	`memc˝y
–
d°
, 
§c
, 
c
, 
n
 );

9 
	}
}

12 
	$°ricmp
–
LPCSTR
 
°r1
, LPCSTR 
°r2
 )

14  
	`°rˇ£cmp
–
°r1
, 
°r2
 );

15 
	}
}

17 
INT
 
	$memicmp
–
LPCSTR
 
s1
, LPCSTR 
s2
, 
DWORD
 
Àn
 )

19 
ªt
 = 0;

20 
Àn
--)

22 i‡((
ªt
 = 
	`tﬁowî
(*
s1
Ë-Åﬁowî(*
s2
))) ;

23 
s1
++;

24 
s2
++;

26  
ªt
;

27 
	}
}

29 
	$°∫icmp
–
LPCSTR
 
°r1
, LPCSTR 
°r2
, 
size_t
 
n
 )

31  
	`°∫ˇ£cmp
–
°r1
, 
°r2
, 
n
 );

32 
	}
}

35 
LPSTR
 
	$°ru¥
–
LPSTR
 
°r
 )

37 
LPSTR
 
ªt
 = 
°r
;

38  ; *
°r
; så++Ë*°∏
	`touµî
(*str);

39  
ªt
;

40 
	}
}

43 
LPSTR
 
	$°æwr
–
LPSTR
 
°r
 )

45 
LPSTR
 
ªt
 = 
°r
;

46  ; *
°r
; så++Ë*°∏
	`tﬁowî
(*str);

47  
ªt
;

48 
	}
}

	@MyString.h

1 
	~<WPrŸe˘C⁄fig.h
>

2 #i‚de‡
WINDOWS


3 
	~<d©©y≥.h
>

5 
	~<˘y≥.h
>

6 
	~<°rög.h
>

8 #i‚de‡
WINDOWS


9 * 
memc˝y
–*
d°
, c⁄° *
§c
, 
c
, 
size_t
 
n
 );

10 
°ricmp
–
LPCSTR
 
°r1
, LPCSTR 
°r2
 );

11 
INT
 
memicmp
–
LPCSTR
 
s1
, LPCSTR 
s2
, 
DWORD
 
Àn
 );

12 
°∫icmp
–
LPCSTR
 
°r1
, LPCSTR 
°r2
, 
size_t
 
n
 );

13 
LPSTR
 
°ru¥
–LPSTR 
°r
 );

14 
LPSTR
 
°æwr
–LPSTR 
°r
 );

	@PEStruct.h

1 #i‚de‡
DATATYPE_H


2 
	#DATATYPE_H


	)

3 
	~"d©©y≥.h
"

11 
	s_IMAGE_DOS_HEADER
 {

12 
WORD
 
	me_magic
;

13 
WORD
 
	me_cbÕ
;

14 
WORD
 
	me_˝
;

15 
WORD
 
	me_¸lc
;

16 
WORD
 
	me_˝¨hdr
;

17 
WORD
 
	me_möÆloc
;

18 
WORD
 
	me_maxÆloc
;

19 
WORD
 
	me_ss
;

20 
WORD
 
	me_•
;

21 
WORD
 
	me_csum
;

22 
WORD
 
	me_ù
;

23 
WORD
 
	me_cs
;

24 
WORD
 
	me_lÁæc
;

25 
WORD
 
	me_ovno
;

26 
WORD
 
	me_ªs
[4];

27 
WORD
 
	me_€mid
;

28 
WORD
 
	me_€möfo
;

29 
WORD
 
	me_ªs2
[10];

30 
LONG
 
	me_lÁ√w
;

31 }
	tIMAGE_DOS_HEADER
, *
	tPIMAGE_DOS_HEADER
;

36 
	s_IMAGE_FILE_HEADER
 {

37 
WORD
 
	mMachöe
;

38 
WORD
 
	mNumbîOfSe˘i⁄s
;

39 
DWORD
 
	mTimeD©eSèmp
;

40 
DWORD
 
	mPoöãrToSymbﬁTabÀ
;

41 
DWORD
 
	mNumbîOfSymbﬁs
;

42 
WORD
 
	mSizeOfO±i⁄ÆHódî
;

43 
WORD
 
	mCh¨a˘îi°ics
;

44 }
	tIMAGE_FILE_HEADER
, *
	tPIMAGE_FILE_HEADER
;

46 
	#IMAGE_SIZEOF_FILE_HEADER
 20

47 
	#IMAGE_FILE_RELOCS_STRIPPED
 0x0001

48 
	#IMAGE_FILE_EXECUTABLE_IMAGE
 0x0002

49 
	#IMAGE_FILE_LINE_NUMS_STRIPPED
 0x0004

50 
	#IMAGE_FILE_LOCAL_SYMS_STRIPPED
 0x0008

51 
	#IMAGE_FILE_AGGRESIVE_WS_TRIM
 0x0010

52 
	#IMAGE_FILE_LARGE_ADDRESS_AWARE
 0x0020

53 
	#IMAGE_FILE_BYTES_REVERSED_LO
 0x0080

54 
	#IMAGE_FILE_32BIT_MACHINE
 0x0100

55 
	#IMAGE_FILE_DEBUG_STRIPPED
 0x0200

56 
	#IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP
 0x0400

57 
	#IMAGE_FILE_NET_RUN_FROM_SWAP
 0x0800

58 
	#IMAGE_FILE_SYSTEM
 0x1000

59 
	#IMAGE_FILE_DLL
 0x2000

60 
	#IMAGE_FILE_UP_SYSTEM_ONLY
 0x4000

61 
	#IMAGE_FILE_BYTES_REVERSED_HI
 0x8000

62 
	#IMAGE_FILE_MACHINE_UNKNOWN
 0

	)

63 
	#IMAGE_FILE_MACHINE_I386
 0x014c

64 
	#IMAGE_FILE_MACHINE_R3000
 0x0162

65 
	#IMAGE_FILE_MACHINE_R4000
 0x0166

66 
	#IMAGE_FILE_MACHINE_R10000
 0x0168

67 
	#IMAGE_FILE_MACHINE_WCEMIPSV2
 0x0169

68 
	#IMAGE_FILE_MACHINE_ALPHA
 0x0184

69 
	#IMAGE_FILE_MACHINE_POWERPC
 0x01F0

70 
	#IMAGE_FILE_MACHINE_SH3
 0x01a2

71 
	#IMAGE_FILE_MACHINE_SH3E
 0x01a4

72 
	#IMAGE_FILE_MACHINE_SH4
 0x01a6

73 
	#IMAGE_FILE_MACHINE_ARM
 0x01c0

74 
	#IMAGE_FILE_MACHINE_THUMB
 0x01c2

	)

75 
	#IMAGE_FILE_MACHINE_IA64
 0x0200

76 
	#IMAGE_FILE_MACHINE_MIPS16
 0x0266

77 
	#IMAGE_FILE_MACHINE_MIPSFPU
 0x0366

78 
	#IMAGE_FILE_MACHINE_MIPSFPU16
 0x0466

79 
	#IMAGE_FILE_MACHINE_ALPHA64
 0x0284

80 
	#IMAGE_FILE_MACHINE_AXP64
 
IMAGE_FILE_MACHINE_ALPHA64


	)

85 
	#IMAGE_DIRECTORY_ENTRY_EXPORT
 0

86 
	#IMAGE_DIRECTORY_ENTRY_IMPORT
 1

87 
	#IMAGE_DIRECTORY_ENTRY_RESOURCE
 2

88 
	#IMAGE_DIRECTORY_ENTRY_EXCEPTION
 3

89 
	#IMAGE_DIRECTORY_ENTRY_SECURITY
 4

90 
	#IMAGE_DIRECTORY_ENTRY_BASERELOC
 5

91 
	#IMAGE_DIRECTORY_ENTRY_DEBUG
 6

93 
	#IMAGE_DIRECTORY_ENTRY_ARCHITECTURE
 7

94 
	#IMAGE_DIRECTORY_ENTRY_GLOBALPTR
 8

95 
	#IMAGE_DIRECTORY_ENTRY_TLS
 9

96 
	#IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG
 10

97 
	#IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT
 11

98 
	#IMAGE_DIRECTORY_ENTRY_IAT
 12

99 
	#IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT
 13

100 
	#IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR
 14

103 
	s_IMAGE_DATA_DIRECTORY
 {

	)

104 
DWORD
 
	mVútuÆAddªss
;

105 
DWORD
 
	mSize
;

106 }
	tIMAGE_DATA_DIRECTORY
, *
	tPIMAGE_DATA_DIRECTORY
;

111 
	#IMAGE_NUMBEROF_DIRECTORY_ENTRIES
 16

	)

113 
	s_IMAGE_OPTIONAL_HEADER
 {

115 
WORD
 
	mMagic
;

116 
BYTE
 
	mMaj‹LökîVîsi⁄
;

117 
BYTE
 
	mMö‹LökîVîsi⁄
;

118 
DWORD
 
	mSizeOfCode
;

119 
DWORD
 
	mSizeOfInôülizedD©a
;

120 
DWORD
 
	mSizeOfUnöôülizedD©a
;

121 
DWORD
 
	mAddªssOfE¡ryPoöt
;

122 
DWORD
 
	mBa£OfCode
;

123 
DWORD
 
	mBa£OfD©a
;

125 
DWORD
 
	mImageBa£
;

126 
DWORD
 
	mSe˘i⁄Alignmít
;

127 
DWORD
 
	mFûeAlignmít
;

128 
WORD
 
	mMaj‹O≥øtögSy°emVîsi⁄
;

129 
WORD
 
	mMö‹O≥øtögSy°emVîsi⁄
;

130 
WORD
 
	mMaj‹ImageVîsi⁄
;

131 
WORD
 
	mMö‹ImageVîsi⁄
;

132 
WORD
 
	mMaj‹Subsy°emVîsi⁄
;

133 
WORD
 
	mMö‹Subsy°emVîsi⁄
;

134 
DWORD
 
	mWö32Vîsi⁄VÆue
;

135 
DWORD
 
	mSizeOfImage
;

136 
DWORD
 
	mSizeOfHódîs
;

137 
DWORD
 
	mCheckSum
;

138 
WORD
 
	mSubsy°em
;

139 
WORD
 
	mDŒCh¨a˘îi°ics
;

140 
DWORD
 
	mSizeOfSèckRe£rve
;

141 
DWORD
 
	mSizeOfSèckCommô
;

142 
DWORD
 
	mSizeOfHópRe£rve
;

143 
DWORD
 
	mSizeOfHópCommô
;

144 
DWORD
 
	mLﬂdîFœgs
;

145 
DWORD
 
	mNumbîOfRvaAndSizes
;

147 
IMAGE_DATA_DIRECTORY
 
	mD©aDúe˘‹y
[
IMAGE_NUMBEROF_DIRECTORY_ENTRIES
];

148 } 
	tIMAGE_OPTIONAL_HEADER32
, *
	tPIMAGE_OPTIONAL_HEADER32
;

153 
	s_IMAGE_NT_HEADERS
 {

154 
DWORD
 
	mSig«tuª
;

155 
IMAGE_FILE_HEADER
 
	mFûeHódî
;

156 
IMAGE_OPTIONAL_HEADER32
 
	mO±i⁄ÆHódî
;

157 } 
	tIMAGE_NT_HEADERS32
, *
	tPIMAGE_NT_HEADERS32
;

160 
	s_IMAGE_EXPORT_DIRECTORY
 {

161 
DWORD
 
	mCh¨a˘îi°ics
;

162 
DWORD
 
	mTimeD©eSèmp
;

163 
WORD
 
	mMaj‹Vîsi⁄
;

164 
WORD
 
	mMö‹Vîsi⁄
;

165 
DWORD
 
	mName
;

166 
DWORD
 
	mBa£
;

167 
DWORD
 
	mNumbîOfFun˘i⁄s
;

168 
DWORD
 
	mNumbîOfNames
;

169 
DWORD
 
	mAddªssOfFun˘i⁄s
;

170 
DWORD
 
	mAddªssOfNames
;

171 
DWORD
 
	mAddªssOfNameOrdöÆs
;

172 } 
	tIMAGE_EXPORT_DIRECTORY
, *
	tPIMAGE_EXPORT_DIRECTORY
;

177 
	s_IMAGE_IMPORT_DESCRIPTOR
 {

179 
DWORD
 
	mCh¨a˘îi°ics
;

180 
DWORD
 
	mOrigöÆFú°Thunk
;

182 
DWORD
 
	mTimeD©eSèmp
;

183 
DWORD
 
	mF‹w¨dîChaö
;

184 
DWORD
 
	mName
;

185 
DWORD
 
	mFú°Thunk
;

186 }
	tIMAGE_IMPORT_DESCRIPTOR
,*
	tPIMAGE_IMPORT_DESCRIPTOR
;

188 
IMAGE_IMPORT_DESCRIPTOR
 
	tUNALIGNED
 ;

194 
	s_IMAGE_IMPORT_BY_NAME
 {

195 
WORD
 
	mHöt
;

196 
BYTE
 
	mName
[1];

197 } 
	tIMAGE_IMPORT_BY_NAME
, *
	tPIMAGE_IMPORT_BY_NAME
;

202 
	s_IMAGE_THUNK_DATA32
 {

203 uni⁄ { 
PBYTE
 
	mF‹w¨dîSåög
;

204 
PDWORD
 
	mFun˘i⁄
;

205 
DWORD
 
	mOrdöÆ
;

206 
PIMAGE_IMPORT_BY_NAME
 
	mAddªssOfD©a
;

207 } 
	mu1
;

208 } 
	tIMAGE_THUNK_DATA32
;

209 
IMAGE_THUNK_DATA32
 * 
	tPIMAGE_THUNK_DATA32
;

214 
	#IMAGE_SIZEOF_SHORT_NAME
 8

215 
	s_IMAGE_SECTION_HEADER
 {

	)

216 
BYTE
 
	mName
[
IMAGE_SIZEOF_SHORT_NAME
];

218 
DWORD
 
	mPhysiˇlAddªss
;

219 
DWORD
 
	mVútuÆSize
;

220 } 
	mMisc
;

221 
DWORD
 
	mVútuÆAddªss
;

222 
DWORD
 
	mSizeOfRawD©a
;

223 
DWORD
 
	mPoöãrToRawD©a
;

224 
DWORD
 
	mPoöãrToRñoˇti⁄s
;

225 
DWORD
 
	mPoöãrToLöíumbîs
;

226 
WORD
 
	mNumbîOfRñoˇti⁄s
;

227 
WORD
 
	mNumbîOfLöíumbîs
;

228 
DWORD
 
	mCh¨a˘îi°ics
;

229 } 
	tIMAGE_SECTION_HEADER
, *
	tPIMAGE_SECTION_HEADER
;

234 
	#IMAGE_SIZEOF_SECTION_HEADER
 40

	)

239 
	#IMAGE_SCN_TYPE_NO_PAD
 0x00000008

241 
	#IMAGE_SCN_CNT_CODE
 0x00000020

242 
	#IMAGE_SCN_CNT_INITIALIZED_DATA
 0x00000040

243 
	#IMAGE_SCN_CNT_UNINITIALIZED_DATA
 0x00000080

244 
	#IMAGE_SCN_LNK_OTHER
 0x00000100

245 
	#IMAGE_SCN_LNK_INFO
 0x00000200

247 
	#IMAGE_SCN_LNK_REMOVE
 0x00000800

248 
	#IMAGE_SCN_LNK_COMDAT
 0x00001000

251 
	#IMAGE_SCN_NO_DEFER_SPEC_EXC
 0x00004000

252 
	#IMAGE_SCN_GPREL
 0x00008000

253 
	#IMAGE_SCN_MEM_FARDATA
 0x00008000

	)

255 
	#IMAGE_SCN_MEM_PURGEABLE
 0x00020000

	)

256 
	#IMAGE_SCN_MEM_16BIT
 0x00020000

	)

257 
	#IMAGE_SCN_MEM_LOCKED
 0x00040000

	)

258 
	#IMAGE_SCN_MEM_PRELOAD
 0x00080000

	)

259 
	#IMAGE_SCN_ALIGN_1BYTES
 0x00100000

260 
	#IMAGE_SCN_ALIGN_2BYTES
 0x00200000

261 
	#IMAGE_SCN_ALIGN_4BYTES
 0x00300000

262 
	#IMAGE_SCN_ALIGN_8BYTES
 0x00400000

263 
	#IMAGE_SCN_ALIGN_16BYTES
 0x00500000

264 
	#IMAGE_SCN_ALIGN_32BYTES
 0x00600000

265 
	#IMAGE_SCN_ALIGN_64BYTES
 0x00700000

266 
	#IMAGE_SCN_ALIGN_128BYTES
 0x00800000

267 
	#IMAGE_SCN_ALIGN_256BYTES
 0x00900000

268 
	#IMAGE_SCN_ALIGN_512BYTES
 0x00A00000

269 
	#IMAGE_SCN_ALIGN_1024BYTES
 0x00B00000

270 
	#IMAGE_SCN_ALIGN_2048BYTES
 0x00C00000

271 
	#IMAGE_SCN_ALIGN_4096BYTES
 0x00D00000

272 
	#IMAGE_SCN_ALIGN_8192BYTES
 0x00E00000

274 
	#IMAGE_SCN_LNK_NRELOC_OVFL
 0x01000000

275 
	#IMAGE_SCN_MEM_DISCARDABLE
 0x02000000

276 
	#IMAGE_SCN_MEM_NOT_CACHED
 0x04000000

277 
	#IMAGE_SCN_MEM_NOT_PAGED
 0x08000000

278 
	#IMAGE_SCN_MEM_SHARED
 0x10000000

279 
	#IMAGE_SCN_MEM_EXECUTE
 0x20000000

280 
	#IMAGE_SCN_MEM_READ
 0x40000000

281 
	#IMAGE_SCN_MEM_WRITE
 0x80000000

284 
	s_IMAGE_SYMBOL
 {

	)

285 uni⁄ {
BYTE
 
	mSh‹tName
[8];

286 °ru˘ {
DWORD
 
	mSh‹t
;

287 
DWORD
 
	mL⁄g
;

288 }
	mName
;

289 
PBYTE
 
	mL⁄gName
[2];

290 }
	mN
;

291 
DWORD
 
	mVÆue
;

292 
SHORT
 
	mSe˘i⁄Numbî
;

293 
WORD
 
	mTy≥
;

294 
BYTE
 
	mSt‹ageCœss
;

295 
BYTE
 
	mNumbîOfAuxSymbﬁs
;

296 } 
	tIMAGE_SYMBOL
,*
	tPIMAGE_SYMBOL
;

299 
	#IMAGE_SIZEOF_SYMBOL
 18

	)

306 
	#IMAGE_SYM_UNDEFINED
 (
SHORT
)0

307 
	#IMAGE_SYM_ABSOLUTE
 (
SHORT
)-1

308 
	#IMAGE_SYM_DEBUG
 (
SHORT
)-2

309 

	)

311 
	#IMAGE_FIRST_SECTION
–
¡hódî
 ) ((
PIMAGE_SECTION_HEADER
) \

312 ((
ULONG_PTR
)(
¡hódî
) + \

313 
	`FIELD_OFFSET
–
IMAGE_NT_HEADERS32
, 
O±i⁄ÆHódî
 ) + \

314 ((
¡hódî
))->
FûeHódî
.
SizeOfO±i⁄ÆHódî
 \

315 ))

	)

317 
	#SWAPD
(
x
Ë(x)

	)

318 
	#SWAPW
(
x
Ë(x)

	)

319 
	#IMAGE_DOS_SIGNATURE
 0x5A4D

	)

320 
	#IMAGE_NT_SIGNATURE
 0x00004550

	)

	@WPStruct.h

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<udis86.h
>

5 #i‚de‡
_WP_STRUCT_


6 
	#_WP_STRUCT_


	)

7 
	s_CODE_INFORMATION_


9 * 
	mbuf
;

10 
	msize
;

11 
	mba£
;

12 }
	tCodeInf‹m©i⁄
,*
	tpCodeInf‹m©i⁄
;

14 
	s_INSTRUCTION_LIST_


16 
	mid
;

17 
ud_t
 
	mudobj
;

18 
_INSTRUCTION_LIST_
 *
	m√xt
;

19 }
	tIn°ru˘i⁄Li°
,*
	tpIn°ru˘i⁄Li°
;

21 
	s_INSTRUCTION_BLOCK_LIST_


23 
	mid
;

24 
pIn°ru˘i⁄Li°
 
	mli°
;

25 
	mﬁdaddr
;

26 
	m√waddr
;

27 
_INSTRUCTION_BLOCK_LIST_
 *
	m√xt
;

28 }
	tIn°ru˘i⁄BlockLi°
,*
	tpIn°ru˘i⁄BlockLi°
;

	@datatype.h

1 
	~<WPrŸe˘C⁄fig.h
>

2 #i‚de‡
WINDOWS


3 #ifde‡
X86


5 
	#Ár


	)

6 
	#√¨


	)

7 *
	tLPSTR
;

8 *
	tLPCSTR
;

9 
	tVOID
;

10 
	tCHAR
;

11 
	tSHORT
;

12 
	tLONG
;

13 
	tULONG
;

14 
	tULONG_PTR
;

15 
	tLONG_PTR
;

16 
	tUSHORT
;

17 
	tDWORD
;

18 
	tBOOL
;

19 
	tBYTE
;

20 
	tWORD
;

21 
	tFLOAT
;

22 
FLOAT
 *
	tPFLOAT
;

23 
BOOL
 
	t√¨
 *
	tPBOOL
;

24 
BOOL
 
	tÁr
 *
	tLPBOOL
;

25 
BYTE
 
	t√¨
 *
	tPBYTE
;

26 
BYTE
 
	tÁr
 *
	tLPBYTE
;

27 
	t√¨
 *
	tPINT
;

28 
	tÁr
 *
	tLPINT
;

29 
WORD
 
	t√¨
 *
	tPWORD
;

30 
WORD
 
	tÁr
 *
	tLPWORD
;

31 
	tÁr
 *
	tLPLONG
;

32 
DWORD
 
	t√¨
 *
	tPDWORD
;

33 
DWORD
 
	tÁr
 *
	tLPDWORD
;

34 
	tÁr
 *
	tLPVOID
;

35 c⁄° 
	tÁr
 *
	tLPCVOID
;

37 
	tINT
;

38 
	tUINT
;

39 *
	tPUINT
;

40 *
	tPVOID
;

41 *
	tLPVOID
;

42 
	#FALSE
 0

	)

43 
	#TRUE
 1

	)

44 #i‚de‡
nuŒ


45 
	#nuŒ
 0

	)

48 #i‚de‡
NULL


49 
	#NULL
 0

	)

52 
	tLONG_PTR
, *
	tPLONG_PTR
;

53 
	#FIELD_OFFSET
(
ty≥
, 
fõld
Ë((
LONG
)(
LONG_PTR
)&((—y≥ *)0)->fõld))

	)

54 
	tULONG_PTR
;

57 
	~<Wödows.h
>

	@or.h

32 #i‚de‡
__BFD_H_SEEN__


33 
	#__BFD_H_SEEN__


	)

36 #i‡!
deföed
 
PACKAGE
 && !deföed 
PACKAGE_VERSION


37 #îr‹ 
c⁄fig
.
h
 
mu°
 
be
 
ö˛uded
 
bef‹e
 
this
 
hódî


40 #ifde‡
__˝lu•lus


44 
	~"™side˛.h
"

45 
	~"symˇt.h
"

46 
	~<sys/°©.h
>

48 #i‡
deföed
 (
__STDC__
Ë|| deföed (
ALMOST_STDC
Ë|| deföed (
HAVE_STRINGIZE
)

49 #i‚de‡
SABER


55 #unde‡
CONCAT4


56 
	#CONCAT4
(
a
,
b
,
c
,
d
Ë
	`XCONCAT2
(
	`CONCAT2
◊,b),CONCAT2(c,d))

	)

64 
	#STRING_COMMA_LEN
(
STR
Ë(STR), ( (STRË- 1)

	)

74 
	#CONST_STRNEQ
(
STR1
,
STR2
Ë(
	`°∫cmp
 ((STR1), (STR2),  (STR2Ë- 1Ë=0)

	)

79 
	#LITMEMCPY
(
DEST
,
STR2
Ë
	`mem˝y
 ((DEST), (STR2),  (STR2Ë- 1)

	)

80 
	#LITSTRCPY
(
DEST
,
STR2
Ë
	`mem˝y
 ((DEST), (STR2),  (STR2))

	)

83 
	#BFD_SUPPORTS_PLUGINS
 0

	)

88 
	#BFD_ARCH_SIZE
 32

	)

91 
	#BFD_DEFAULT_TARGET_SIZE
 32

	)

93 
	#BFD_HOST_64BIT_LONG
 0

	)

94 
	#BFD_HOST_64BIT_LONG_LONG
 1

	)

96 
	#BFD_HOST_64_BIT
 

	)

97 
	#BFD_HOST_U_64_BIT
 

	)

98 
BFD_HOST_64_BIT
 
	tbfd_öt64_t
;

99 
BFD_HOST_U_64_BIT
 
	tbfd_uöt64_t
;

102 #i‡
BFD_ARCH_SIZE
 >= 64

103 
	#BFD64


	)

106 #i‚de‡
INLINE


107 #i‡
__GNUC__
 >= 2

108 
	#INLINE
 
__ölöe__


	)

110 
	#INLINE


	)

115 
	#BFD_HOSTPTR_T
 

	)

116 
BFD_HOSTPTR_T
 
	tbfd_ho°±r_t
;

119 
bfd
 
	tbfd
;

130 
	tbfd_boﬁón
;

131 #unde‡
FALSE


132 #unde‡
TRUE


133 
	#FALSE
 0

	)

134 
	#TRUE
 1

	)

136 #ifde‡
BFD64


138 #i‚de‡
BFD_HOST_64_BIT


139 #îr‹ 
No
 64 
bô
 
öãgî
 
ty≥
 
avaûabÀ


142 
BFD_HOST_U_64_BIT
 
	tbfd_vma
;

143 
BFD_HOST_64_BIT
 
	tbfd_sig√d_vma
;

144 
BFD_HOST_U_64_BIT
 
	tbfd_size_ty≥
;

145 
BFD_HOST_U_64_BIT
 
	tsymvÆue
;

147 #i‡
BFD_HOST_64BIT_LONG


148 
	#BFD_VMA_FMT
 "l"

	)

149 #ñi‡
deföed
 (
__MSVCRT__
)

150 
	#BFD_VMA_FMT
 "I64"

	)

152 
	#BFD_VMA_FMT
 "Œ"

	)

155 #i‚de‡
Ârötf_vma


156 
	#•rötf_vma
(
s
,
x
Ë
	`•rötf
 (s, "%016" 
BFD_VMA_FMT
 "x", x)

	)

157 
	#Ârötf_vma
(
f
,
x
Ë
	`Ârötf
 (f, "%016" 
BFD_VMA_FMT
 "x", x)

	)

165 
	tbfd_vma
;

171 
	tbfd_sig√d_vma
;

173 
	tsymvÆue
;

174 
	tbfd_size_ty≥
;

177 
	#BFD_VMA_FMT
 "l"

	)

178 
	#Ârötf_vma
(
s
,
x
Ë
	`Ârötf
 (s, "%08" 
BFD_VMA_FMT
 "x", x)

	)

179 
	#•rötf_vma
(
s
,
x
Ë
	`•rötf
 (s, "%08" 
BFD_VMA_FMT
 "x", x)

	)

183 
	#HALF_BFD_SIZE_TYPE
 \

184 (((
bfd_size_ty≥
Ë1Ë<< (8 *  (bfd_size_ty≥Ë/ 2))

	)

186 #i‚de‡
BFD_HOST_64_BIT


191 
bfd_sig√d_vma
 
	tbfd_öt64_t
;

192 
bfd_vma
 
	tbfd_uöt64_t
;

197 
BFD_HOST_64_BIT
 
	tfûe_±r
;

198 
	tBFD_HOST_64_BIT
 
	tufûe_±r
;

200 
bfd_•rötf_vma
 (
bfd
 *, *, 
bfd_vma
);

201 
bfd_Ârötf_vma
 (
bfd
 *, *, 
bfd_vma
);

203 
	#¥ötf_vma
(
x
Ë
	`Ârötf_vma
(
°dout
,x)

	)

204 
	#bfd_¥ötf_vma
(
abfd
,
x
Ë
	`bfd_Ârötf_vma
 (abfd,
°dout
,x)

	)

206 
	tÊagw‹d
;

207 
	tbfd_byã
;

211 
	ebfd_f‹m©


213 
	gbfd_unknown
 = 0,

214 
	gbfd_obje˘
,

215 
	gbfd_¨chive
,

216 
	gbfd_c‹e
,

217 
	gbfd_ty≥_íd


219 
	tbfd_f‹m©
;

224 
	tsymödex
;

227 c⁄° 
	tªloc_howto_°ru˘
 
	tªloc_howto_ty≥
;

229 
	#BFD_NO_MORE_SYMBOLS
 ((
symödex
Ë~0)

	)

234 
	#bfd_gë_£˘i⁄
(
x
Ë((x)->
£˘i⁄
)

	)

235 
	#bfd_gë_ouçut_£˘i⁄
(
x
Ë((x)->
£˘i⁄
->
ouçut_£˘i⁄
)

	)

236 
	#bfd_£t_£˘i⁄
(
x
,
y
Ë((x)->
£˘i⁄
Ë(y)

	)

237 
	#bfd_asymbﬁ_ba£
(
x
Ë((x)->
£˘i⁄
->
vma
)

	)

238 
	#bfd_asymbﬁ_vÆue
(
x
Ë(
	`bfd_asymbﬁ_ba£
(xË+ (x)->
vÆue
)

	)

239 
	#bfd_asymbﬁ_«me
(
x
Ë((x)->
«me
)

	)

241 
	#bfd_asymbﬁ_bfd
(
x
Ë((x)->
the_bfd
)

	)

242 
	#bfd_asymbﬁ_Êavour
(
x
) \

243 (((
x
)->
Êags
 & 
BSF_SYNTHETIC
) != 0 \

244 ? 
bfd_èrgë_unknown_Êavour
 \

245 : 
	`bfd_asymbﬁ_bfd
 (
x
)->
xvec
->
Êavour
)

	)

249 
	sˇrsym


251 *
	g«me
;

252 
fûe_±r
 
	gfûe_off£t
;

254 
	tˇrsym
;

258 
	s‹l


260 **
	g«me
;

263 
fûe_±r
 
	gpos
;

264 
bfd
 *
	gabfd
;

265 } 
	gu
;

266 
	g«midx
;

270 
	slöío_ˇche_íåy


272 
	glöe_numbî
;

275 
bfd_symbﬁ
 *
	gsym
;

276 
bfd_vma
 
	goff£t
;

277 } 
	gu
;

279 
	tÆít
;

283 
	#Æign_powî
(
addr
, 
Æign
) \

284 (((
addr
Ë+ ((
bfd_vma
Ë1 << (
Æign
)Ë- 1Ë& ((bfd_vmaË-1 << (Æign)))

	)

286 
bfd_£˘i⁄
 *
	t£c_±r
;

288 
	#bfd_gë_£˘i⁄_«me
(
bfd
, 
±r
Ë((Ëbfd, (±r)->
«me
)

	)

289 
	#bfd_gë_£˘i⁄_vma
(
bfd
, 
±r
Ë((Ëbfd, (±r)->
vma
)

	)

290 
	#bfd_gë_£˘i⁄_lma
(
bfd
, 
±r
Ë((Ëbfd, (±r)->
lma
)

	)

291 
	#bfd_gë_£˘i⁄_Æignmít
(
bfd
, 
±r
) (() bfd, \

292 (
±r
)->
Æignmít_powî
)

	)

293 
	#bfd_£˘i⁄_«me
(
bfd
, 
±r
Ë(’å)->
«me
)

	)

294 
	#bfd_£˘i⁄_size
(
bfd
, 
±r
Ë(’å)->
size
)

	)

295 
	#bfd_gë_£˘i⁄_size
(
±r
Ë(’å)->
size
)

	)

296 
	#bfd_£˘i⁄_vma
(
bfd
, 
±r
Ë(’å)->
vma
)

	)

297 
	#bfd_£˘i⁄_lma
(
bfd
, 
±r
Ë(’å)->
lma
)

	)

298 
	#bfd_£˘i⁄_Æignmít
(
bfd
, 
±r
Ë(’å)->
Æignmít_powî
)

	)

299 
	#bfd_gë_£˘i⁄_Êags
(
bfd
, 
±r
Ë((Ëbfd, (±r)->
Êags
)

	)

300 
	#bfd_gë_£˘i⁄_u£rd©a
(
bfd
, 
±r
Ë((Ëbfd, (±r)->
u£rd©a
)

	)

302 
	#bfd_is_com_£˘i⁄
(
±r
Ë((’å)->
Êags
 & 
SEC_IS_COMMON
Ë!0)

	)

304 
	#bfd_£t_£˘i⁄_vma
(
bfd
, 
±r
, 
vÆ
Ë((’å)->
vma
 = (±r)->
lma
 = (vÆ)), (’å)->
u£r_£t_vma
 = 
TRUE
), TRUE)

	)

305 
	#bfd_£t_£˘i⁄_Æignmít
(
bfd
, 
±r
, 
vÆ
Ë((’å)->
Æignmít_powî
 = (vÆ)),
TRUE
)

	)

306 
	#bfd_£t_£˘i⁄_u£rd©a
(
bfd
, 
±r
, 
vÆ
Ë((’å)->
u£rd©a
 = (vÆ)),
TRUE
)

	)

308 
	#bfd_gë_£˘i⁄_limô
(
bfd
, 
£c
) \

309 (((
bfd
)->
dúe˘i⁄
 !
wrôe_dúe˘i⁄
 && (
£c
)->
øwsize
 != 0 \

310 ? (
£c
)->
øwsize
 : (£c)->
size
Ë/ 
	`bfd_o˘ës_≥r_byã
 (
bfd
))

	)

313 
	#disˇrded_£˘i⁄
(
£c
) \

314 (!
	`bfd_is_abs_£˘i⁄
 (
£c
) \

315 && 
	`bfd_is_abs_£˘i⁄
 ((
£c
)->
ouçut_£˘i⁄
) \

316 && (
£c
)->
£c_öfo_ty≥
 !
SEC_INFO_TYPE_MERGE
 \

317 && (
£c
)->
£c_öfo_ty≥
 !
SEC_INFO_TYPE_JUST_SYMS
)

	)

319 
	ebfd_¥öt_symbﬁ


321 
	gbfd_¥öt_symbﬁ_«me
,

322 
	gbfd_¥öt_symbﬁ_m‹e
,

323 
	gbfd_¥öt_symbﬁ_Æl


324 } 
	tbfd_¥öt_symbﬁ_ty≥
;

328 
	s_symbﬁ_öfo


330 
symvÆue
 
	gvÆue
;

331 
	gty≥
;

332 c⁄° *
	g«me
;

333 
	g°ab_ty≥
;

334 
	g°ab_Ÿhî
;

335 
	g°ab_desc
;

336 c⁄° *
	g°ab_«me
;

337 } 
	tsymbﬁ_öfo
;

341 c⁄° *
bfd_gë_°ab_«me
 ();

348 
	sbfd_hash_íåy


351 
bfd_hash_íåy
 *
	g√xt
;

353 c⁄° *
	g°rög
;

356 
	ghash
;

361 
	sbfd_hash_èbÀ


364 
bfd_hash_íåy
 **
	gèbÀ
;

372 
	gbfd_hash_íåy
 *(*
	g√wfunc
)

373 (
	gbfd_hash_íåy
 *, 
	gbfd_hash_èbÀ
 *, const *);

376 *
	gmem‹y
;

378 
	gsize
;

380 
	gcou¡
;

382 
	gítsize
;

384 
	g‰ozí
:1;

388 
bfd_boﬁón
 
bfd_hash_èbÀ_öô


389 (
bfd_hash_èbÀ
 *,

390 
bfd_hash_íåy
 *(*) (bfd_hash_entry *,

391 
bfd_hash_èbÀ
 *,

396 
bfd_boﬁón
 
bfd_hash_èbÀ_öô_n


397 (
bfd_hash_èbÀ
 *,

398 
bfd_hash_íåy
 *(*) (bfd_hash_entry *,

399 
bfd_hash_èbÀ
 *,

404 
bfd_hash_èbÀ_‰ì


405 (
bfd_hash_èbÀ
 *);

411 
bfd_hash_íåy
 *
bfd_hash_lookup


412 (
bfd_hash_èbÀ
 *, c⁄° *, 
bfd_boﬁón
 
¸óã
,

413 
bfd_boﬁón
 
c›y
);

416 
bfd_hash_íåy
 *
bfd_hash_ö£π


417 (
bfd_hash_èbÀ
 *, const *, );

420 
bfd_hash_ª«me


421 (
bfd_hash_èbÀ
 *, c⁄° *, 
bfd_hash_íåy
 *);

424 
bfd_hash_ª∂a˚


425 (
bfd_hash_èbÀ
 *, 
bfd_hash_íåy
 *
ﬁd
,

426 
bfd_hash_íåy
 *
nw
);

429 
bfd_hash_íåy
 *
bfd_hash_√wfunc


430 (
bfd_hash_íåy
 *, 
bfd_hash_èbÀ
 *, const *);

433 *
bfd_hash_Æloˇã


434 (
bfd_hash_èbÀ
 *, );

439 
bfd_hash_åavî£


440 (
bfd_hash_èbÀ
 *,

441 
bfd_boﬁón
 (*Ë(
bfd_hash_íåy
 *, *),

442 *
öfo
);

447 
bfd_hash_£t_deÁu…_size
 ();

452 
	s°ab_öfo


455 
bfd_°πab_hash
 *
	g°rögs
;

457 
bfd_hash_èbÀ
 
	gö˛udes
;

459 
bfd_£˘i⁄
 *
	g°ab°r
;

462 
	#COFF_SWAP_TABLE
 (*Ë&
bfd_coff_°d_sw≠_èbÀ


	)

469 
bfd_size_ty≥
 
bfd_bªad
 (*, bfd_size_ty≥, 
bfd
 *);

470 
bfd_size_ty≥
 
bfd_bwrôe
 (c⁄° *, bfd_size_ty≥, 
bfd
 *);

471 
bfd_£ek
 (
bfd
 *, 
fûe_±r
, );

472 
fûe_±r
 
bfd_ãŒ
 (
bfd
 *);

473 
bfd_Êush
 (
bfd
 *);

474 
bfd_°©
 (
bfd
 *, 
°©
 *);

477 #i‡
__GNUC__


478 
	#bfd_ªad
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

479 (
	`w¨n_dïªˇãd
 ("bfd_ªad", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
), \

480 
	`bfd_bªad
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

481 
	#bfd_wrôe
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

482 (
	`w¨n_dïªˇãd
 ("bfd_wrôe", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
), \

483 
	`bfd_bwrôe
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

485 
	#bfd_ªad
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

486 (
	`w¨n_dïªˇãd
 ("bfd_read", (const *) 0, 0, (const *) 0), \

487 
	`bfd_bªad
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

488 
	#bfd_wrôe
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

489 (
	`w¨n_dïªˇãd
 ("bfd_write", (const *) 0, 0, (const *) 0),\

490 
	`bfd_bwrôe
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

492 
w¨n_dïªˇãd
 (const *, const *, , const *);

496 
	#bfd_gë_fûíame
(
abfd
Ë((*Ë◊bfd)->
fûíame
)

	)

497 
	#bfd_gë_ˇchóbÀ
(
abfd
Ë(◊bfd)->
ˇchóbÀ
)

	)

498 
	#bfd_gë_f‹m©
(
abfd
Ë(◊bfd)->
f‹m©
)

	)

499 
	#bfd_gë_èrgë
(
abfd
Ë(◊bfd)->
xvec
->
«me
)

	)

500 
	#bfd_gë_Êavour
(
abfd
Ë(◊bfd)->
xvec
->
Êavour
)

	)

501 
	#bfd_Ámûy_coff
(
abfd
) \

502 (
	`bfd_gë_Êavour
 (
abfd
Ë=
bfd_èrgë_coff_Êavour
 || \

503 
	`bfd_gë_Êavour
 (
abfd
Ë=
bfd_èrgë_xcoff_Êavour
)

	)

504 
	#bfd_big_ídün
(
abfd
Ë(◊bfd)->
xvec
->
byã‹dî
 =
BFD_ENDIAN_BIG
)

	)

505 
	#bfd_lôée_ídün
(
abfd
Ë(◊bfd)->
xvec
->
byã‹dî
 =
BFD_ENDIAN_LITTLE
)

	)

506 
	#bfd_hódî_big_ídün
(
abfd
) \

507 ((
abfd
)->
xvec
->
hódî_byã‹dî
 =
BFD_ENDIAN_BIG
)

	)

508 
	#bfd_hódî_lôée_ídün
(
abfd
) \

509 ((
abfd
)->
xvec
->
hódî_byã‹dî
 =
BFD_ENDIAN_LITTLE
)

	)

510 
	#bfd_gë_fûe_Êags
(
abfd
Ë(◊bfd)->
Êags
)

	)

511 
	#bfd_≠∂iˇbÀ_fûe_Êags
(
abfd
Ë(◊bfd)->
xvec
->
obje˘_Êags
)

	)

512 
	#bfd_≠∂iˇbÀ_£˘i⁄_Êags
(
abfd
Ë(◊bfd)->
xvec
->
£˘i⁄_Êags
)

	)

513 
	#bfd_my_¨chive
(
abfd
Ë(◊bfd)->
my_¨chive
)

	)

514 
	#bfd_has_m≠
(
abfd
Ë(◊bfd)->
has_¨m≠
)

	)

515 
	#bfd_is_thö_¨chive
(
abfd
Ë(◊bfd)->
is_thö_¨chive
)

	)

517 
	#bfd_vÆid_ªloc_ty≥s
(
abfd
Ë(◊bfd)->
xvec
->
vÆid_ªloc_ty≥s
)

	)

518 
	#bfd_u§d©a
(
abfd
Ë(◊bfd)->
u§d©a
)

	)

520 
	#bfd_gë_°¨t_addªss
(
abfd
Ë(◊bfd)->
°¨t_addªss
)

	)

521 
	#bfd_gë_symcou¡
(
abfd
Ë(◊bfd)->
symcou¡
)

	)

522 
	#bfd_gë_outsymbﬁs
(
abfd
Ë(◊bfd)->
outsymbﬁs
)

	)

523 
	#bfd_cou¡_£˘i⁄s
(
abfd
Ë(◊bfd)->
£˘i⁄_cou¡
)

	)

525 
	#bfd_gë_dy«mic_symcou¡
(
abfd
Ë(◊bfd)->
dynsymcou¡
)

	)

527 
	#bfd_gë_symbﬁ_Àadög_ch¨
(
abfd
Ë(◊bfd)->
xvec
->
symbﬁ_Àadög_ch¨
)

	)

529 
	#bfd_£t_ˇchóbÀ
(
abfd
,
boﬁ
Ë((◊bfd)->
ˇchóbÀ
 = boﬁ), 
TRUE
)

	)

531 
bfd_boﬁón
 
bfd_ˇche_˛o£


532 (
bfd
 *
abfd
);

535 
bfd_boﬁón
 
bfd_ˇche_˛o£_Æl
 ();

537 
bfd_boﬁón
 
bfd_ªc‹d_phdr


538 (
bfd
 *, , 
bfd_boﬁón
, 
Êagw‹d
, bfd_boﬁón, 
bfd_vma
,

539 
bfd_boﬁón
, bfd_boﬁón, , 
bfd_£˘i⁄
 **);

543 
bfd_uöt64_t
 
bfd_gëb64
 (const *);

544 
bfd_uöt64_t
 
bfd_gël64
 (const *);

545 
bfd_öt64_t
 
bfd_gëb_sig√d_64
 (const *);

546 
bfd_öt64_t
 
bfd_gël_sig√d_64
 (const *);

547 
bfd_vma
 
bfd_gëb32
 (const *);

548 
bfd_vma
 
bfd_gël32
 (const *);

549 
bfd_sig√d_vma
 
bfd_gëb_sig√d_32
 (const *);

550 
bfd_sig√d_vma
 
bfd_gël_sig√d_32
 (const *);

551 
bfd_vma
 
bfd_gëb16
 (const *);

552 
bfd_vma
 
bfd_gël16
 (const *);

553 
bfd_sig√d_vma
 
bfd_gëb_sig√d_16
 (const *);

554 
bfd_sig√d_vma
 
bfd_gël_sig√d_16
 (const *);

555 
bfd_putb64
 (
bfd_uöt64_t
, *);

556 
bfd_pué64
 (
bfd_uöt64_t
, *);

557 
bfd_putb32
 (
bfd_vma
, *);

558 
bfd_pué32
 (
bfd_vma
, *);

559 
bfd_putb16
 (
bfd_vma
, *);

560 
bfd_pué16
 (
bfd_vma
, *);

564 
bfd_uöt64_t
 
bfd_gë_bôs
 (c⁄° *, , 
bfd_boﬁón
);

565 
bfd_put_bôs
 (
bfd_uöt64_t
, *, , 
bfd_boﬁón
);

567 #i‡
deföed
(
__STDC__
Ë|| deföed(
ALMOST_STDC
)

568 
	gecoff_debug_öfo
;

569 
	gecoff_debug_sw≠
;

570 
	gecoff_exå
;

571 
	gbfd_symbﬁ
;

572 
	gbfd_lök_öfo
;

573 
	gbfd_lök_hash_íåy
;

574 
	gbfd_£˘i⁄_Æªady_löked
;

575 
	gbfd_ñf_vîsi⁄_åì
;

578 
bfd_boﬁón
 
bfd_£˘i⁄_Æªady_löked_èbÀ_öô
 ();

579 
bfd_£˘i⁄_Æªady_löked_èbÀ_‰ì
 ();

580 
bfd_boﬁón
 
_bfd_h™dÀ_Æªady_löked


581 (
bfd_£˘i⁄
 *, 
bfd_£˘i⁄_Æªady_löked
 *,

582 
bfd_lök_öfo
 *);

586 
bfd_vma
 
bfd_ecoff_gë_gp_vÆue


587 (
bfd
 * 
abfd
);

588 
bfd_boﬁón
 
bfd_ecoff_£t_gp_vÆue


589 (
bfd
 *
abfd
, 
bfd_vma
 
gp_vÆue
);

590 
bfd_boﬁón
 
bfd_ecoff_£t_ªgmasks


591 (
bfd
 *
abfd
, 
g¥mask
, 
Ârmask
,

592 *
˝rmask
);

593 *
bfd_ecoff_debug_öô


594 (
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

595 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd_lök_öfo
 *);

596 
bfd_ecoff_debug_‰ì


597 (*
h™dÀ
, 
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

598 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd_lök_öfo
 *);

599 
bfd_boﬁón
 
bfd_ecoff_debug_accumuœã


600 (*
h™dÀ
, 
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

601 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd
 *
öput_bfd
,

602 
ecoff_debug_öfo
 *
öput_debug
,

603 c⁄° 
ecoff_debug_sw≠
 *
öput_sw≠
, 
bfd_lök_öfo
 *);

604 
bfd_boﬁón
 
bfd_ecoff_debug_accumuœã_Ÿhî


605 (*
h™dÀ
, 
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

606 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd
 *
öput_bfd
,

607 
bfd_lök_öfo
 *);

608 
bfd_boﬁón
 
bfd_ecoff_debug_exã∫Æs


609 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

610 c⁄° 
ecoff_debug_sw≠
 *
sw≠
, 
bfd_boﬁón
 
ªloˇèbÀ
,

611 
bfd_boﬁón
 (*
gë_exå
Ë(
bfd_symbﬁ
 *, 
ecoff_exå
 *),

612 (*
£t_ödex
Ë(
bfd_symbﬁ
 *, 
bfd_size_ty≥
));

613 
bfd_boﬁón
 
bfd_ecoff_debug_⁄e_exã∫Æ


614 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

615 c⁄° 
ecoff_debug_sw≠
 *
sw≠
, c⁄° *
«me
,

616 
ecoff_exå
 *
esym
);

617 
bfd_size_ty≥
 
bfd_ecoff_debug_size


618 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

619 c⁄° 
ecoff_debug_sw≠
 *
sw≠
);

620 
bfd_boﬁón
 
bfd_ecoff_wrôe_debug


621 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

622 c⁄° 
ecoff_debug_sw≠
 *
sw≠
, 
fûe_±r
 
whîe
);

623 
bfd_boﬁón
 
bfd_ecoff_wrôe_accumuœãd_debug


624 (*
h™dÀ
, 
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

625 c⁄° 
ecoff_debug_sw≠
 *
sw≠
,

626 
bfd_lök_öfo
 *
öfo
, 
fûe_±r
 
whîe
);

630 
	sbfd_lök_√eded_li°


632 
bfd_lök_√eded_li°
 *
	g√xt
;

633 
bfd
 *
	gby
;

634 c⁄° *
	g«me
;

637 
	edy«mic_lib_lök_˛ass
 {

638 
	gDYN_NORMAL
 = 0,

639 
	gDYN_AS_NEEDED
 = 1,

640 
	gDYN_DT_NEEDED
 = 2,

641 
	gDYN_NO_ADD_NEEDED
 = 4,

642 
	gDYN_NO_NEEDED
 = 8

645 
	enŸi˚_a¢ìded_a˘i⁄
 {

646 
	gnŸi˚_as_√eded
,

647 
	gnŸi˚_nŸ_√eded
,

648 
	gnŸi˚_√eded


651 
bfd_boﬁón
 
bfd_ñf_ªc‹d_lök_assignmít


652 (
bfd
 *, 
bfd_lök_öfo
 *, c⁄° *, 
bfd_boﬁón
,

653 
bfd_boﬁón
);

654 
bfd_lök_√eded_li°
 *
bfd_ñf_gë_√eded_li°


655 (
bfd
 *, 
bfd_lök_öfo
 *);

656 
bfd_boﬁón
 
bfd_ñf_gë_bfd_√eded_li°


657 (
bfd
 *, 
bfd_lök_√eded_li°
 **);

658 
bfd_boﬁón
 
bfd_ñf_size_dy«mic_£˘i⁄s


659 (
bfd
 *, const *, const *, const *, const *, const *,

660 c⁄° * c⁄° *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 **);

661 
bfd_boﬁón
 
bfd_ñf_size_dynsym_hash_dyn°r


662 (
bfd
 *, 
bfd_lök_öfo
 *);

663 
bfd_ñf_£t_dt_√eded_«me


664 (
bfd
 *, const *);

665 c⁄° *
bfd_ñf_gë_dt_s⁄ame


666 (
bfd
 *);

667 
bfd_ñf_£t_dyn_lib_˛ass


668 (
bfd
 *, 
dy«mic_lib_lök_˛ass
);

669 
bfd_ñf_gë_dyn_lib_˛ass


670 (
bfd
 *);

671 
bfd_lök_√eded_li°
 *
bfd_ñf_gë_ru≈©h_li°


672 (
bfd
 *, 
bfd_lök_öfo
 *);

673 
bfd_boﬁón
 
bfd_ñf_disˇrd_öfo


674 (
bfd
 *, 
bfd_lök_öfo
 *);

675 
_bfd_ñf_deÁu…_a˘i⁄_disˇrded


676 (
bfd_£˘i⁄
 *);

681 
bfd_gë_ñf_phdr_uµî_bound


682 (
bfd
 *
abfd
);

691 
bfd_gë_ñf_phdrs


692 (
bfd
 *
abfd
, *
phdrs
);

706 
bfd
 *
bfd_ñf_bfd_‰om_ªmŸe_mem‹y


707 (
bfd
 *
ãm∂
, 
bfd_vma
 
ehdr_vma
, bfd_vm®*
lﬂdba£p
,

708 (*
èrgë_ªad_mem‹y
Ë(
bfd_vma
 
vma
, 
bfd_byã
 *
myaddr
,

709 
bfd_size_ty≥
 
Àn
));

711 
bfd_£˘i⁄
 *
_bfd_ñf_és_£tup


712 (
bfd
 *, 
bfd_lök_öfo
 *);

714 
bfd_£˘i⁄
 *

715 
_bfd_√¨by_£˘i⁄
 (
bfd
 *, 
bfd_£˘i⁄
 *, 
bfd_vma
);

717 
_bfd_fix_ex˛uded_£c_syms


718 (
bfd
 *, 
bfd_lök_öfo
 *);

720 
bfd_m68k_mach_to_„©uªs
 ();

722 
bfd_m68k_„©uªs_to_mach
 ();

724 
bfd_boﬁón
 
bfd_m68k_ñf32_¸óã_embedded_ªlocs


725 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *,

728 
bfd_ñf_m68k_£t_èrgë_›ti⁄s
 (
bfd_lök_öfo
 *, );

730 
bfd_boﬁón
 
bfd_bfö_ñf32_¸óã_embedded_ªlocs


731 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *,

734 
bfd_boﬁón
 
bfd_¸16_ñf32_¸óã_embedded_ªlocs


735 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *,

740 
bfd_lök_√eded_li°
 *
bfd_sunos_gë_√eded_li°


741 (
bfd
 *, 
bfd_lök_öfo
 *);

742 
bfd_boﬁón
 
bfd_sunos_ªc‹d_lök_assignmít


743 (
bfd
 *, 
bfd_lök_öfo
 *, const *);

744 
bfd_boﬁón
 
bfd_sunos_size_dy«mic_£˘i⁄s


745 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 **,

746 
bfd_£˘i⁄
 **, bfd_section **);

750 
bfd_boﬁón
 
bfd_i386löux_size_dy«mic_£˘i⁄s


751 (
bfd
 *, 
bfd_lök_öfo
 *);

752 
bfd_boﬁón
 
bfd_m68klöux_size_dy«mic_£˘i⁄s


753 (
bfd
 *, 
bfd_lök_öfo
 *);

754 
bfd_boﬁón
 
bfd_•¨˛öux_size_dy«mic_£˘i⁄s


755 (
bfd
 *, 
bfd_lök_öfo
 *);

759 
	g_bfd_wödow_öã∫Æ
;

760 
_bfd_wödow_öã∫Æ
 
	tbfd_wödow_öã∫Æ
;

762 
	s_bfd_wödow


765 *
	gd©a
;

766 
bfd_size_ty≥
 
	gsize
;

773 
_bfd_wödow_öã∫Æ
 *
	gi
;

775 
	tbfd_wödow
;

777 
bfd_öô_wödow


778 (
bfd_wödow
 *);

779 
bfd_‰ì_wödow


780 (
bfd_wödow
 *);

781 
bfd_boﬁón
 
bfd_gë_fûe_wödow


782 (
bfd
 *, 
fûe_±r
, 
bfd_size_ty≥
, 
bfd_wödow
 *, 
bfd_boﬁón
);

786 
bfd_boﬁón
 
bfd_xcoff_•lô_imp‹t_∑th


787 (
bfd
 *, const *, const **, const **);

788 
bfd_boﬁón
 
bfd_xcoff_£t_¨chive_imp‹t_∑th


789 (
bfd_lök_öfo
 *, 
bfd
 *, const *);

790 
bfd_boﬁón
 
bfd_xcoff_lök_ªc‹d_£t


791 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_hash_íåy
 *, 
bfd_size_ty≥
);

792 
bfd_boﬁón
 
bfd_xcoff_imp‹t_symbﬁ


793 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_hash_íåy
 *, 
bfd_vma
,

795 
bfd_boﬁón
 
bfd_xcoff_exp‹t_symbﬁ


796 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_hash_íåy
 *);

797 
bfd_boﬁón
 
bfd_xcoff_lök_cou¡_ªloc


798 (
bfd
 *, 
bfd_lök_öfo
 *, const *);

799 
bfd_boﬁón
 
bfd_xcoff_ªc‹d_lök_assignmít


800 (
bfd
 *, 
bfd_lök_öfo
 *, const *);

801 
bfd_boﬁón
 
bfd_xcoff_size_dy«mic_£˘i⁄s


802 (
bfd
 *, 
bfd_lök_öfo
 *, const *, const *,

803 , , , 
bfd_boﬁón
,

804 , 
bfd_boﬁón
, , 
bfd_£˘i⁄
 **, bfd_boolean);

805 
bfd_boﬁón
 
bfd_xcoff_lök_gíî©e_πöô


806 (
bfd
 *, c⁄° *, c⁄° *, 
bfd_boﬁón
);

809 
bfd_boﬁón
 
bfd_xcoff_¨_¨chive_£t_magic


810 (
bfd
 *, *);

814 #i‡
deföed
(
__STDC__
Ë|| deföed(
ALMOST_STDC
)

815 
	göã∫Æ_symít
;

816 
	göã∫Æ_auxít
;

819 
bfd_boﬁón
 
bfd_coff_gë_symít


820 (
bfd
 *, 
bfd_symbﬁ
 *, 
öã∫Æ_symít
 *);

822 
bfd_boﬁón
 
bfd_coff_gë_auxít


823 (
bfd
 *, 
bfd_symbﬁ
 *, , 
öã∫Æ_auxít
 *);

825 
bfd_boﬁón
 
bfd_coff_£t_symbﬁ_˛ass


826 (
bfd
 *, 
bfd_symbﬁ
 *, );

828 
bfd_boﬁón
 
bfd_m68k_coff_¸óã_embedded_ªlocs


829 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *, **);

834 
	gBFD_ARM_VFP11_FIX_DEFAULT
,

835 
	gBFD_ARM_VFP11_FIX_NONE
,

836 
	gBFD_ARM_VFP11_FIX_SCALAR
,

837 
	gBFD_ARM_VFP11_FIX_VECTOR


838 } 
	tbfd_¨m_vÂ11_fix
;

840 
bfd_ñf32_¨m_öô_m≠s


841 (
bfd
 *);

843 
bfd_ñf32_¨m_£t_vÂ11_fix


844 (
bfd
 *, 
bfd_lök_öfo
 *);

846 
bfd_ñf32_¨m_£t_c‹ãx_a8_fix


847 (
bfd
 *, 
bfd_lök_öfo
 *);

849 
bfd_boﬁón
 
bfd_ñf32_¨m_vÂ11_îøtum_sˇn


850 (
bfd
 *, 
bfd_lök_öfo
 *);

852 
bfd_ñf32_¨m_vÂ11_fix_víìr_loˇti⁄s


853 (
bfd
 *, 
bfd_lök_öfo
 *);

856 
bfd_boﬁón
 
bfd_¨m_Æloˇã_öãrw‹kög_£˘i⁄s


857 (
bfd_lök_öfo
 *);

859 
bfd_boﬁón
 
bfd_¨m_¥o˚ss_bef‹e_Æloˇti⁄


860 (
bfd
 *, 
bfd_lök_öfo
 *, );

862 
bfd_boﬁón
 
bfd_¨m_gë_bfd_f‹_öãrw‹kög


863 (
bfd
 *, 
bfd_lök_öfo
 *);

866 
bfd_boﬁón
 
bfd_¨m_≥_Æloˇã_öãrw‹kög_£˘i⁄s


867 (
bfd_lök_öfo
 *);

869 
bfd_boﬁón
 
bfd_¨m_≥_¥o˚ss_bef‹e_Æloˇti⁄


870 (
bfd
 *, 
bfd_lök_öfo
 *, );

872 
bfd_boﬁón
 
bfd_¨m_≥_gë_bfd_f‹_öãrw‹kög


873 (
bfd
 *, 
bfd_lök_öfo
 *);

876 
bfd_boﬁón
 
bfd_ñf32_¨m_Æloˇã_öãrw‹kög_£˘i⁄s


877 (
bfd_lök_öfo
 *);

879 
bfd_boﬁón
 
bfd_ñf32_¨m_¥o˚ss_bef‹e_Æloˇti⁄


880 (
bfd
 *, 
bfd_lök_öfo
 *);

882 
	gbfd_ñf32_¨m_£t_èrgë_ªlocs


883 (
	gbfd
 *, 
	gbfd_lök_öfo
 *, , *, , , 
	gbfd_¨m_vÂ11_fix
,

886 
bfd_boﬁón
 
bfd_ñf32_¨m_gë_bfd_f‹_öãrw‹kög


887 (
bfd
 *, 
bfd_lök_öfo
 *);

889 
bfd_boﬁón
 
bfd_ñf32_¨m_add_glue_£˘i⁄s_to_bfd


890 (
bfd
 *, 
bfd_lök_öfo
 *);

893 
	#BFD_ARM_SPECIAL_SYM_TYPE_MAP
 (1 << 0)

	)

894 
	#BFD_ARM_SPECIAL_SYM_TYPE_TAG
 (1 << 1)

	)

895 
	#BFD_ARM_SPECIAL_SYM_TYPE_OTHER
 (1 << 2)

	)

896 
	#BFD_ARM_SPECIAL_SYM_TYPE_ANY
 (~0)

	)

897 
bfd_boﬁón
 
bfd_is_¨m_•ecül_symbﬁ_«me


898 (c⁄° * 
«me
, 
ty≥
);

900 
bfd_ñf32_¨m_£t_byãsw≠_code
 (
bfd_lök_öfo
 *, );

903 
bfd_boﬁón
 
bfd_¨m_mîge_machöes


904 (
bfd
 *, bfd *);

906 
bfd_boﬁón
 
bfd_¨m_upd©e_nŸes


907 (
bfd
 *, const *);

909 
bfd_¨m_gë_mach_‰om_nŸes


910 (
bfd
 *, const *);

913 
ñf32_¨m_£tup_£˘i⁄_li°s


914 (
bfd
 *, 
bfd_lök_öfo
 *);

915 
ñf32_¨m_√xt_öput_£˘i⁄


916 (
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *);

917 
bfd_boﬁón
 
ñf32_¨m_size_°ubs


918 (
bfd
 *, bfd *, 
bfd_lök_öfo
 *, 
bfd_sig√d_vma
,

919 
bfd_£˘i⁄
 * (*) (const *, bfd_section *), (*) ());

920 
bfd_boﬁón
 
ñf32_¨m_buûd_°ubs


921 (
bfd_lök_öfo
 *);

924 
bfd_boﬁón
 
ñf32_¨m_fix_exidx_covîage


925 (
bfd_£˘i⁄
 **, , 
bfd_lök_öfo
 *, 
bfd_boﬁón
);

928 
bfd_boﬁón
 
ñf32_tic6x_fix_exidx_covîage


929 (
bfd_£˘i⁄
 **, , 
bfd_lök_öfo
 *, 
bfd_boﬁón
);

932 
_bfd_ñf_µc_©_és_å™sf‹m


935 
_bfd_ñf_µc_©_çªl_å™sf‹m


938 
bfd_ñf64_Ørch64_öô_m≠s


939 (
bfd
 *);

941 
	gbfd_ñf64_Ørch64_£t_›ti⁄s


942 (
	gbfd
 *, 
	gbfd_lök_öfo
 *, , , );

945 
	#BFD_AARCH64_SPECIAL_SYM_TYPE_MAP
 (1 << 0)

	)

946 
	#BFD_AARCH64_SPECIAL_SYM_TYPE_TAG
 (1 << 1)

	)

947 
	#BFD_AARCH64_SPECIAL_SYM_TYPE_OTHER
 (1 << 2)

	)

948 
	#BFD_AARCH64_SPECIAL_SYM_TYPE_ANY
 (~0)

	)

949 
bfd_boﬁón
 
bfd_is_Ørch64_•ecül_symbﬁ_«me


950 (c⁄° * 
«me
, 
ty≥
);

953 
ñf64_Ørch64_£tup_£˘i⁄_li°s


954 (
bfd
 *, 
bfd_lök_öfo
 *);

955 
ñf64_Ørch64_√xt_öput_£˘i⁄


956 (
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *);

957 
bfd_boﬁón
 
ñf64_Ørch64_size_°ubs


958 (
bfd
 *, bfd *, 
bfd_lök_öfo
 *, 
bfd_sig√d_vma
,

959 
bfd_£˘i⁄
 * (*) (const *, bfd_section *),

961 
bfd_boﬁón
 
ñf64_Ørch64_buûd_°ubs


962 (
bfd_lök_öfo
 *);

965 
bfd_ticoff_£t_£˘i⁄_lﬂd_∑ge


966 (
bfd_£˘i⁄
 *, );

968 
bfd_ticoff_gë_£˘i⁄_lﬂd_∑ge


969 (
bfd_£˘i⁄
 *);

972 
bfd_vma
 
bfd_h8300_∑d_addªss


973 (
bfd
 *, 
bfd_vma
);

976 
bfd_ñf32_ü64_a·î_∑r£


979 
bfd_ñf64_ü64_a·î_∑r£


987 
	scoff_comd©_öfo


990 c⁄° *
	g«me
;

996 
	gsymbﬁ
;

999 
coff_comd©_öfo
 *
bfd_coff_gë_comd©_£˘i⁄


1000 (
bfd
 *, 
bfd_£˘i⁄
 *);

1003 
bfd_öô
 ();

1006 
bfd_u£_ª£rved_id
;

1007 
bfd
 *
bfd_f›í
 (c⁄° *
fûíame
, c⁄° *
èrgë
,

1008 c⁄° *
mode
, 
fd
);

1010 
bfd
 *
bfd_›ír
 (c⁄° *
fûíame
, c⁄° *
èrgë
);

1012 
bfd
 *
bfd_fd›ír
 (c⁄° *
fûíame
, c⁄° *
èrgë
, 
fd
);

1014 
bfd
 *
bfd_›í°ªamr
 (const *, const *, *);

1016 
bfd
 *
bfd_›ír_iovec
 (c⁄° *
fûíame
, c⁄° *
èrgë
,

1017 *(*
›í_func
Ë(
bfd
 *
nbfd
,

1018 *
›í_˛osuª
),

1019 *
›í_˛osuª
,

1020 
fûe_±r
 (*
¥ód_func
Ë(
bfd
 *
nbfd
,

1021 *
°ªam
,

1022 *
buf
,

1023 
fûe_±r
 
nbyãs
,

1024 
fûe_±r
 
off£t
),

1025 (*
˛o£_func
Ë(
bfd
 *
nbfd
,

1026 *
°ªam
),

1027 (*
°©_func
Ë(
bfd
 *
abfd
,

1028 *
°ªam
,

1029 
°©
 *
sb
));

1031 
bfd
 *
bfd_›íw
 (c⁄° *
fûíame
, c⁄° *
èrgë
);

1033 
bfd_boﬁón
 
bfd_˛o£
 (
bfd
 *
abfd
);

1035 
bfd_boﬁón
 
bfd_˛o£_Æl_d⁄e
 (
bfd
 *);

1037 
bfd
 *
bfd_¸óã
 (c⁄° *
fûíame
, bfd *
ãm∂
);

1039 
bfd_boﬁón
 
bfd_make_wrôabÀ
 (
bfd
 *
abfd
);

1041 
bfd_boﬁón
 
bfd_make_ªadabÀ
 (
bfd
 *
abfd
);

1043 *
bfd_Æloc
 (
bfd
 *
abfd
, 
bfd_size_ty≥
 
w™ãd
);

1045 *
bfd_zÆloc
 (
bfd
 *
abfd
, 
bfd_size_ty≥
 
w™ãd
);

1047 
	gbfd_ˇlc_gnu_debuglök_¸c32


1048 (
	g¸c
, c⁄° *
	gbuf
, 
bfd_size_ty≥
 
	gÀn
);

1050 *
bfd_fﬁlow_gnu_debuglök
 (
bfd
 *
abfd
, c⁄° *
dú
);

1052 
bfd_£˘i⁄
 *
	gbfd_¸óã_gnu_debuglök_£˘i⁄


1053 (
bfd
 *
	gabfd
, c⁄° *
	gfûíame
);

1055 
bfd_boﬁón
 
	gbfd_fûl_ö_gnu_debuglök_£˘i⁄


1056 (
bfd
 *
	gabfd
, 
bfd_£˘i⁄
 *
	g£˘
, c⁄° *
	gfûíame
);

1062 
	#bfd_put_8
(
abfd
, 
vÆ
, 
±r
) \

1063 ((Ë(*((*Ë(
±r
)Ë(
vÆ
Ë& 0xff))

	)

1064 
	#bfd_put_sig√d_8
 \

1065 
bfd_put_8


	)

1066 
	#bfd_gë_8
(
abfd
, 
±r
) \

1067 (*(c⁄° *Ë(
±r
Ë& 0xff)

	)

1068 
	#bfd_gë_sig√d_8
(
abfd
, 
±r
) \

1069 (((*(c⁄° *Ë(
±r
Ë& 0xffË^ 0x80Ë- 0x80)

	)

1071 
	#bfd_put_16
(
abfd
, 
vÆ
, 
±r
) \

1072 
	`BFD_SEND
 (
abfd
, 
bfd_putx16
, ((
vÆ
),(
±r
)))

	)

1073 
	#bfd_put_sig√d_16
 \

1074 
bfd_put_16


	)

1075 
	#bfd_gë_16
(
abfd
, 
±r
) \

1076 
	`BFD_SEND
 (
abfd
, 
bfd_gëx16
, (
±r
))

	)

1077 
	#bfd_gë_sig√d_16
(
abfd
, 
±r
) \

1078 
	`BFD_SEND
 (
abfd
, 
bfd_gëx_sig√d_16
, (
±r
))

	)

1080 
	#bfd_put_32
(
abfd
, 
vÆ
, 
±r
) \

1081 
	`BFD_SEND
 (
abfd
, 
bfd_putx32
, ((
vÆ
),(
±r
)))

	)

1082 
	#bfd_put_sig√d_32
 \

1083 
bfd_put_32


	)

1084 
	#bfd_gë_32
(
abfd
, 
±r
) \

1085 
	`BFD_SEND
 (
abfd
, 
bfd_gëx32
, (
±r
))

	)

1086 
	#bfd_gë_sig√d_32
(
abfd
, 
±r
) \

1087 
	`BFD_SEND
 (
abfd
, 
bfd_gëx_sig√d_32
, (
±r
))

	)

1089 
	#bfd_put_64
(
abfd
, 
vÆ
, 
±r
) \

1090 
	`BFD_SEND
 (
abfd
, 
bfd_putx64
, ((
vÆ
), (
±r
)))

	)

1091 
	#bfd_put_sig√d_64
 \

1092 
bfd_put_64


	)

1093 
	#bfd_gë_64
(
abfd
, 
±r
) \

1094 
	`BFD_SEND
 (
abfd
, 
bfd_gëx64
, (
±r
))

	)

1095 
	#bfd_gë_sig√d_64
(
abfd
, 
±r
) \

1096 
	`BFD_SEND
 (
abfd
, 
bfd_gëx_sig√d_64
, (
±r
))

	)

1098 
	#bfd_gë
(
bôs
, 
abfd
, 
±r
) \

1099 ((
bôs
Ë=8 ? (
bfd_vma
Ë
	`bfd_gë_8
 (
abfd
, 
±r
) \

1100 : (
bôs
Ë=16 ? 
	`bfd_gë_16
 (
abfd
, 
±r
) \

1101 : (
bôs
Ë=32 ? 
	`bfd_gë_32
 (
abfd
, 
±r
) \

1102 : (
bôs
Ë=64 ? 
	`bfd_gë_64
 (
abfd
, 
±r
) \

1103 : (
	`ab‹t
 (), (
bfd_vma
Ë- 1))

	)

1105 
	#bfd_put
(
bôs
, 
abfd
, 
vÆ
, 
±r
) \

1106 ((
bôs
Ë=8 ? 
	`bfd_put_8
 (
abfd
, 
vÆ
, 
±r
) \

1107 : (
bôs
Ë=16 ? 
	`bfd_put_16
 (
abfd
, 
vÆ
, 
±r
) \

1108 : (
bôs
Ë=32 ? 
	`bfd_put_32
 (
abfd
, 
vÆ
, 
±r
) \

1109 : (
bôs
Ë=64 ? 
	`bfd_put_64
 (
abfd
, 
vÆ
, 
±r
) \

1110 : (
	`ab‹t
 (), (Ë0))

	)

1115 
	#bfd_h_put_8
(
abfd
, 
vÆ
, 
±r
) \

1116 
	`bfd_put_8
 (
abfd
, 
vÆ
, 
±r
)

	)

1117 
	#bfd_h_put_sig√d_8
(
abfd
, 
vÆ
, 
±r
) \

1118 
	`bfd_put_8
 (
abfd
, 
vÆ
, 
±r
)

	)

1119 
	#bfd_h_gë_8
(
abfd
, 
±r
) \

1120 
	`bfd_gë_8
 (
abfd
, 
±r
)

	)

1121 
	#bfd_h_gë_sig√d_8
(
abfd
, 
±r
) \

1122 
	`bfd_gë_sig√d_8
 (
abfd
, 
±r
)

	)

1124 
	#bfd_h_put_16
(
abfd
, 
vÆ
, 
±r
) \

1125 
	`BFD_SEND
 (
abfd
, 
bfd_h_putx16
, (
vÆ
, 
±r
))

	)

1126 
	#bfd_h_put_sig√d_16
 \

1127 
bfd_h_put_16


	)

1128 
	#bfd_h_gë_16
(
abfd
, 
±r
) \

1129 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx16
, (
±r
))

	)

1130 
	#bfd_h_gë_sig√d_16
(
abfd
, 
±r
) \

1131 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx_sig√d_16
, (
±r
))

	)

1133 
	#bfd_h_put_32
(
abfd
, 
vÆ
, 
±r
) \

1134 
	`BFD_SEND
 (
abfd
, 
bfd_h_putx32
, (
vÆ
, 
±r
))

	)

1135 
	#bfd_h_put_sig√d_32
 \

1136 
bfd_h_put_32


	)

1137 
	#bfd_h_gë_32
(
abfd
, 
±r
) \

1138 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx32
, (
±r
))

	)

1139 
	#bfd_h_gë_sig√d_32
(
abfd
, 
±r
) \

1140 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx_sig√d_32
, (
±r
))

	)

1142 
	#bfd_h_put_64
(
abfd
, 
vÆ
, 
±r
) \

1143 
	`BFD_SEND
 (
abfd
, 
bfd_h_putx64
, (
vÆ
, 
±r
))

	)

1144 
	#bfd_h_put_sig√d_64
 \

1145 
bfd_h_put_64


	)

1146 
	#bfd_h_gë_64
(
abfd
, 
±r
) \

1147 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx64
, (
±r
))

	)

1148 
	#bfd_h_gë_sig√d_64
(
abfd
, 
±r
) \

1149 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx_sig√d_64
, (
±r
))

	)

1153 
	#H_PUT_64
 
bfd_h_put_64


	)

1154 
	#H_PUT_32
 
bfd_h_put_32


	)

1155 
	#H_PUT_16
 
bfd_h_put_16


	)

1156 
	#H_PUT_8
 
bfd_h_put_8


	)

1157 
	#H_PUT_S64
 
bfd_h_put_sig√d_64


	)

1158 
	#H_PUT_S32
 
bfd_h_put_sig√d_32


	)

1159 
	#H_PUT_S16
 
bfd_h_put_sig√d_16


	)

1160 
	#H_PUT_S8
 
bfd_h_put_sig√d_8


	)

1161 
	#H_GET_64
 
bfd_h_gë_64


	)

1162 
	#H_GET_32
 
bfd_h_gë_32


	)

1163 
	#H_GET_16
 
bfd_h_gë_16


	)

1164 
	#H_GET_8
 
bfd_h_gë_8


	)

1165 
	#H_GET_S64
 
bfd_h_gë_sig√d_64


	)

1166 
	#H_GET_S32
 
bfd_h_gë_sig√d_32


	)

1167 
	#H_GET_S16
 
bfd_h_gë_sig√d_16


	)

1168 
	#H_GET_S8
 
bfd_h_gë_sig√d_8


	)

1172 
bfd_gë_mtime
 (
bfd
 *
abfd
);

1174 
fûe_±r
 
bfd_gë_size
 (
bfd
 *
abfd
);

1176 *
bfd_mm≠
 (
bfd
 *
abfd
, *
addr
, 
bfd_size_ty≥
 
Àn
,

1177 
¥Ÿ
, 
Êags
, 
fûe_±r
 
off£t
,

1178 **
m≠_addr
, 
bfd_size_ty≥
 *
m≠_Àn
);

1182 
	sbfd_£˘i⁄


1186 c⁄° *
	g«me
;

1189 
	gid
;

1192 
	gödex
;

1195 
bfd_£˘i⁄
 *
	g√xt
;

1198 
bfd_£˘i⁄
 *
	g¥ev
;

1203 
Êagw‹d
 
	gÊags
;

1205 
	#SEC_NO_FLAGS
 0x000

	)

1209 
	#SEC_ALLOC
 0x001

	)

1213 
	#SEC_LOAD
 0x002

	)

1217 
	#SEC_RELOC
 0x004

	)

1220 
	#SEC_READONLY
 0x008

	)

1223 
	#SEC_CODE
 0x010

	)

1226 
	#SEC_DATA
 0x020

	)

1229 
	#SEC_ROM
 0x040

	)

1241 
	#SEC_CONSTRUCTOR
 0x080

	)

1246 
	#SEC_HAS_CONTENTS
 0x100

	)

1250 
	#SEC_NEVER_LOAD
 0x200

	)

1253 
	#SEC_THREAD_LOCAL
 0x400

	)

1261 
	#SEC_HAS_GOT_REF
 0x800

	)

1268 
	#SEC_IS_COMMON
 0x1000

	)

1274 
	#SEC_DEBUGGING
 0x2000

	)

1279 
	#SEC_IN_MEMORY
 0x4000

	)

1284 
	#SEC_EXCLUDE
 0x8000

	)

1290 
	#SEC_SORT_ENTRIES
 0x10000

	)

1296 
	#SEC_LINK_ONCE
 0x20000

	)

1300 
	#SEC_LINK_DUPLICATES
 0xc0000

	)

1304 
	#SEC_LINK_DUPLICATES_DISCARD
 0x0

	)

1309 
	#SEC_LINK_DUPLICATES_ONE_ONLY
 0x40000

	)

1313 
	#SEC_LINK_DUPLICATES_SAME_SIZE
 0x80000

	)

1318 
	#SEC_LINK_DUPLICATES_SAME_CONTENTS
 \

1319 (
SEC_LINK_DUPLICATES_ONE_ONLY
 | 
SEC_LINK_DUPLICATES_SAME_SIZE
)

	)

1325 
	#SEC_LINKER_CREATED
 0x100000

	)

1330 
	#SEC_KEEP
 0x200000

	)

1334 
	#SEC_SMALL_DATA
 0x400000

	)

1338 
	#SEC_MERGE
 0x800000

	)

1343 
	#SEC_STRINGS
 0x1000000

	)

1346 
	#SEC_GROUP
 0x2000000

	)

1357 
	#SEC_COFF_SHARED_LIBRARY
 0x4000000

	)

1362 
	#SEC_ELF_REVERSE_COPY
 0x4000000

	)

1366 
	#SEC_COFF_SHARED
 0x8000000

	)

1373 
	#SEC_TIC54X_BLOCK
 0x10000000

	)

1378 
	#SEC_TIC54X_CLINK
 0x20000000

	)

1382 
	#SEC_COFF_NOREAD
 0x40000000

	)

1389 
	gu£r_£t_vma
 : 1;

1392 
	glökî_m¨k
 : 1;

1396 
	glökî_has_öput
 : 1;

1399 
	ggc_m¨k
 : 1;

1402 
	gcom¥ess_°©us
 : 2;

1403 
	#COMPRESS_SECTION_NONE
 0

	)

1404 
	#COMPRESS_SECTION_DONE
 1

	)

1405 
	#DECOMPRESS_SECTION_SIZED
 2

	)

1410 
	g£gmít_m¨k
 : 1;

1413 
	g£c_öfo_ty≥
:3;

1414 
	#SEC_INFO_TYPE_NONE
 0

	)

1415 
	#SEC_INFO_TYPE_STABS
 1

	)

1416 
	#SEC_INFO_TYPE_MERGE
 2

	)

1417 
	#SEC_INFO_TYPE_EH_FRAME
 3

	)

1418 
	#SEC_INFO_TYPE_JUST_SYMS
 4

	)

1421 
	gu£_ªœ_p
:1;

1426 
	g£c_Êg0
:1;

1427 
	g£c_Êg1
:1;

1428 
	g£c_Êg2
:1;

1429 
	g£c_Êg3
:1;

1430 
	g£c_Êg4
:1;

1431 
	g£c_Êg5
:1;

1441 
bfd_vma
 
	gvma
;

1446 
bfd_vma
 
	glma
;

1451 
bfd_size_ty≥
 
	gsize
;

1461 
bfd_size_ty≥
 
	gøwsize
;

1464 
bfd_size_ty≥
 
	gcom¥es£d_size
;

1467 
ªœx_èbÀ
 *
	gªœx
;

1470 
	gªœx_cou¡
;

1480 
bfd_vma
 
	gouçut_off£t
;

1483 
bfd_£˘i⁄
 *
	gouçut_£˘i⁄
;

1487 
	gÆignmít_powî
;

1491 
ªloc_ˇche_íåy
 *
	gªloˇti⁄
;

1495 
ªloc_ˇche_íåy
 **
	g‹ñoˇti⁄
;

1498 
	gªloc_cou¡
;

1504 
fûe_±r
 
	gfûïos
;

1507 
fûe_±r
 
	gªl_fûïos
;

1510 
fûe_±r
 
	glöe_fûïos
;

1513 *
	gu£rd©a
;

1517 *
	gc⁄ã¡s
;

1520 
Æít
 *
	glöío
;

1523 
	glöío_cou¡
;

1526 
	gítsize
;

1530 
bfd_£˘i⁄
 *
	gkït_£˘i⁄
;

1534 
fûe_±r
 
	gmovög_löe_fûïos
;

1537 
	gèrgë_ödex
;

1539 *
	gu£d_by_bfd
;

1543 
ªÀ¡_chaö
 *
	gc⁄°ru˘‹_chaö
;

1546 
bfd
 *
	gow√r
;

1549 
bfd_symbﬁ
 *
	gsymbﬁ
;

1550 
bfd_symbﬁ
 **
	gsymbﬁ_±r_±r
;

1557 
bfd_lök_‹dî
 *
	glök_‹dî
;

1558 
bfd_£˘i⁄
 *
	gs
;

1559 } 
	gm≠_hód
, 
	gm≠_èû
;

1560 } 
	ta£˘i⁄
;

1565 
	sªœx_èbÀ
 {

1567 
bfd_vma
 
	gaddr
;

1570 
	gsize
;

1576 
a£˘i⁄
 
°d_£˘i⁄
[4];

1578 
	#BFD_ABS_SECTION_NAME
 "*ABS*"

	)

1579 
	#BFD_UND_SECTION_NAME
 "*UND*"

	)

1580 
	#BFD_COM_SECTION_NAME
 "*COM*"

	)

1581 
	#BFD_IND_SECTION_NAME
 "*IND*"

	)

1584 
	#bfd_com_£˘i⁄_±r
 (&
°d_£˘i⁄
[0])

	)

1586 
	#bfd_und_£˘i⁄_±r
 (&
°d_£˘i⁄
[1])

	)

1588 
	#bfd_abs_£˘i⁄_±r
 (&
°d_£˘i⁄
[2])

	)

1590 
	#bfd_öd_£˘i⁄_±r
 (&
°d_£˘i⁄
[3])

	)

1592 
	#bfd_is_und_£˘i⁄
(
£c
Ë((£cË=
bfd_und_£˘i⁄_±r
)

	)

1593 
	#bfd_is_abs_£˘i⁄
(
£c
Ë((£cË=
bfd_abs_£˘i⁄_±r
)

	)

1594 
	#bfd_is_öd_£˘i⁄
(
£c
Ë((£cË=
bfd_öd_£˘i⁄_±r
)

	)

1596 
	#bfd_is_c⁄°_£˘i⁄
(
SEC
) \

1597 –((
SEC
Ë=
bfd_abs_£˘i⁄_±r
) \

1598 || ((
SEC
Ë=
bfd_und_£˘i⁄_±r
) \

1599 || ((
SEC
Ë=
bfd_com_£˘i⁄_±r
) \

1600 || ((
SEC
Ë=
bfd_öd_£˘i⁄_±r
))

	)

1605 
	#bfd_£˘i⁄_li°_ªmove
(
ABFD
, 
S
) \

1608 
a£˘i⁄
 *
_s
 = 
S
; \

1609 
a£˘i⁄
 *
_√xt
 = 
_s
->
√xt
; \

1610 
a£˘i⁄
 *
_¥ev
 = 
_s
->
¥ev
; \

1611 i‡(
_¥ev
) \

1612 
_¥ev
->
√xt
 = 
_√xt
; \

1614 (
ABFD
)->
£˘i⁄s
 = 
_√xt
; \

1615 i‡(
_√xt
) \

1616 
_√xt
->
¥ev
 = 
_¥ev
; \

1618 (
ABFD
)->
£˘i⁄_œ°
 = 
_¥ev
; \

1620 0)

	)

1621 
	#bfd_£˘i⁄_li°_≠≥nd
(
ABFD
, 
S
) \

1624 
a£˘i⁄
 *
_s
 = 
S
; \

1625 
bfd
 *
_abfd
 = 
ABFD
; \

1626 
_s
->
√xt
 = 
NULL
; \

1627 i‡(
_abfd
->
£˘i⁄_œ°
) \

1629 
_s
->
¥ev
 = 
_abfd
->
£˘i⁄_œ°
; \

1630 
_abfd
->
£˘i⁄_œ°
->
√xt
 = 
_s
; \

1634 
_s
->
¥ev
 = 
NULL
; \

1635 
_abfd
->
£˘i⁄s
 = 
_s
; \

1637 
_abfd
->
£˘i⁄_œ°
 = 
_s
; \

1639 0)

	)

1640 
	#bfd_£˘i⁄_li°_¥ïíd
(
ABFD
, 
S
) \

1643 
a£˘i⁄
 *
_s
 = 
S
; \

1644 
bfd
 *
_abfd
 = 
ABFD
; \

1645 
_s
->
¥ev
 = 
NULL
; \

1646 i‡(
_abfd
->
£˘i⁄s
) \

1648 
_s
->
√xt
 = 
_abfd
->
£˘i⁄s
; \

1649 
_abfd
->
£˘i⁄s
->
¥ev
 = 
_s
; \

1653 
_s
->
√xt
 = 
NULL
; \

1654 
_abfd
->
£˘i⁄_œ°
 = 
_s
; \

1656 
_abfd
->
£˘i⁄s
 = 
_s
; \

1658 0)

	)

1659 
	#bfd_£˘i⁄_li°_ö£π_a·î
(
ABFD
, 
A
, 
S
) \

1662 
a£˘i⁄
 *
_a
 = 
A
; \

1663 
a£˘i⁄
 *
_s
 = 
S
; \

1664 
a£˘i⁄
 *
_√xt
 = 
_a
->
√xt
; \

1665 
_s
->
√xt
 = 
_√xt
; \

1666 
_s
->
¥ev
 = 
_a
; \

1667 
_a
->
√xt
 = 
_s
; \

1668 i‡(
_√xt
) \

1669 
_√xt
->
¥ev
 = 
_s
; \

1671 (
ABFD
)->
£˘i⁄_œ°
 = 
_s
; \

1673 0)

	)

1674 
	#bfd_£˘i⁄_li°_ö£π_bef‹e
(
ABFD
, 
B
, 
S
) \

1677 
a£˘i⁄
 *
_b
 = 
B
; \

1678 
a£˘i⁄
 *
_s
 = 
S
; \

1679 
a£˘i⁄
 *
_¥ev
 = 
_b
->
¥ev
; \

1680 
_s
->
¥ev
 = 
_¥ev
; \

1681 
_s
->
√xt
 = 
_b
; \

1682 
_b
->
¥ev
 = 
_s
; \

1683 i‡(
_¥ev
) \

1684 
_¥ev
->
√xt
 = 
_s
; \

1686 (
ABFD
)->
£˘i⁄s
 = 
_s
; \

1688 0)

	)

1689 
	#bfd_£˘i⁄_ªmoved_‰om_li°
(
ABFD
, 
S
) \

1690 ((
S
)->
√xt
 =
NULL
 ? (
ABFD
)->
£˘i⁄_œ°
 !(SË: (S)->√xt->
¥ev
 !(S))

	)

1692 
	#BFD_FAKE_SECTION
(
SEC
, 
FLAGS
, 
SYM
, 
NAME
, 
IDX
) \

1694 { 
NAME
, 
IDX
, 0, 
NULL
, NULL, 
FLAGS
, 0, \

1709 0, &
SEC
, 0, \

1712 
NULL
, NULL, 0, 0, 0, \

1715 0, 
NULL
, NULL, NULL, 0, \

1718 0, 
NULL
, 0, \

1721 0, 
NULL
, NULL, NULL, \

1724 (
bfd_symbﬁ
 *Ë
SYM
, &
SEC
.
symbﬁ
, \

1727 { 
NULL
 }, { NULL } \

1728 }

	)

1730 
bfd_£˘i⁄_li°_˛ór
 (
bfd
 *);

1732 
a£˘i⁄
 *
bfd_gë_£˘i⁄_by_«me
 (
bfd
 *
abfd
, c⁄° *
«me
);

1734 
a£˘i⁄
 *
bfd_gë_√xt_£˘i⁄_by_«me
 (a£˘i⁄ *
£c
);

1736 
a£˘i⁄
 *
bfd_gë_lökî_£˘i⁄
 (
bfd
 *
abfd
, c⁄° *
«me
);

1738 
a£˘i⁄
 *
	gbfd_gë_£˘i⁄_by_«me_if


1739 (
bfd
 *
	gabfd
,

1740 c⁄° *
	g«me
,

1741 
bfd_boﬁón
 (*
func
Ë(
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘
, *
	gobj
),

1742 *
	gobj
);

1744 *
	gbfd_gë_unique_£˘i⁄_«me


1745 (
bfd
 *
	gabfd
, c⁄° *
	gãm∂©
, *
	gcou¡
);

1747 
a£˘i⁄
 *
bfd_make_£˘i⁄_ﬁd_way
 (
bfd
 *
abfd
, c⁄° *
«me
);

1749 
a£˘i⁄
 *
	gbfd_make_£˘i⁄_™yway_wôh_Êags


1750 (
bfd
 *
	gabfd
, c⁄° *
	g«me
, 
Êagw‹d
 
	gÊags
);

1752 
a£˘i⁄
 *
bfd_make_£˘i⁄_™yway
 (
bfd
 *
abfd
, c⁄° *
«me
);

1754 
a£˘i⁄
 *
	gbfd_make_£˘i⁄_wôh_Êags


1755 (
	gbfd
 *, c⁄° *
	g«me
, 
Êagw‹d
 
	gÊags
);

1757 
a£˘i⁄
 *
bfd_make_£˘i⁄
 (
bfd
 *, c⁄° *
«me
);

1759 
bfd_boﬁón
 
	gbfd_£t_£˘i⁄_Êags


1760 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
Êagw‹d
 
	gÊags
);

1762 
	gbfd_ª«me_£˘i⁄


1763 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, c⁄° *
	g√w«me
);

1765 
	gbfd_m≠_ovî_£˘i⁄s


1766 (
bfd
 *
	gabfd
,

1767 (*
	gfunc
Ë(
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘
, *
	gobj
),

1768 *
	gobj
);

1770 
a£˘i⁄
 *
	gbfd_£˘i⁄s_föd_if


1771 (
bfd
 *
	gabfd
,

1772 
bfd_boﬁón
 (*
›î©i⁄
Ë(
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘
, *
	gobj
),

1773 *
	gobj
);

1775 
bfd_boﬁón
 
	gbfd_£t_£˘i⁄_size


1776 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
bfd_size_ty≥
 
	gvÆ
);

1778 
bfd_boﬁón
 
	gbfd_£t_£˘i⁄_c⁄ã¡s


1779 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, c⁄° *
	gd©a
,

1780 
fûe_±r
 
	goff£t
, 
bfd_size_ty≥
 
	gcou¡
);

1782 
bfd_boﬁón
 
	gbfd_gë_£˘i⁄_c⁄ã¡s


1783 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, *
	gloˇti⁄
, 
fûe_±r
 
	goff£t
,

1784 
bfd_size_ty≥
 
	gcou¡
);

1786 
bfd_boﬁón
 
	gbfd_mÆloc_™d_gë_£˘i⁄


1787 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, 
bfd_byã
 **
	gbuf
);

1789 
bfd_boﬁón
 
	gbfd_c›y_¥iv©e_£˘i⁄_d©a


1790 (
bfd
 *
	gibfd
, 
a£˘i⁄
 *
	gi£c
, bfd *
	gobfd
,á£˘i⁄ *
	go£c
);

1792 
	#bfd_c›y_¥iv©e_£˘i⁄_d©a
(
ibfd
, 
i£˘i⁄
, 
obfd
, 
o£˘i⁄
) \

1793 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_£˘i⁄_d©a
, \

1794 (
ibfd
, 
i£˘i⁄
, 
obfd
, 
o£˘i⁄
))

	)

1795 
bfd_boﬁón
 
bfd_gíîic_is_group_£˘i⁄
 (
bfd
 *, c⁄° 
a£˘i⁄
 *
£c
);

1797 
bfd_boﬁón
 
bfd_gíîic_disˇrd_group
 (
bfd
 *
abfd
, 
a£˘i⁄
 *
group
);

1800 
	ebfd_¨chôe˘uª


1802 
	gbfd_¨ch_unknown
,

1803 
	gbfd_¨ch_obscuª
,

1804 
	gbfd_¨ch_m68k
,

1805 
	#bfd_mach_m68000
 1

	)

1806 
	#bfd_mach_m68008
 2

	)

1807 
	#bfd_mach_m68010
 3

	)

1808 
	#bfd_mach_m68020
 4

	)

1809 
	#bfd_mach_m68030
 5

	)

1810 
	#bfd_mach_m68040
 6

	)

1811 
	#bfd_mach_m68060
 7

	)

1812 
	#bfd_mach_˝u32
 8

	)

1813 
	#bfd_mach_fido
 9

	)

1814 
	#bfd_mach_mcf_iß_a_nodiv
 10

	)

1815 
	#bfd_mach_mcf_iß_a
 11

	)

1816 
	#bfd_mach_mcf_iß_a_mac
 12

	)

1817 
	#bfd_mach_mcf_iß_a_emac
 13

	)

1818 
	#bfd_mach_mcf_iß_≠lus
 14

	)

1819 
	#bfd_mach_mcf_iß_≠lus_mac
 15

	)

1820 
	#bfd_mach_mcf_iß_≠lus_emac
 16

	)

1821 
	#bfd_mach_mcf_iß_b_nou•
 17

	)

1822 
	#bfd_mach_mcf_iß_b_nou•_mac
 18

	)

1823 
	#bfd_mach_mcf_iß_b_nou•_emac
 19

	)

1824 
	#bfd_mach_mcf_iß_b
 20

	)

1825 
	#bfd_mach_mcf_iß_b_mac
 21

	)

1826 
	#bfd_mach_mcf_iß_b_emac
 22

	)

1827 
	#bfd_mach_mcf_iß_b_Êﬂt
 23

	)

1828 
	#bfd_mach_mcf_iß_b_Êﬂt_mac
 24

	)

1829 
	#bfd_mach_mcf_iß_b_Êﬂt_emac
 25

	)

1830 
	#bfd_mach_mcf_iß_c
 26

	)

1831 
	#bfd_mach_mcf_iß_c_mac
 27

	)

1832 
	#bfd_mach_mcf_iß_c_emac
 28

	)

1833 
	#bfd_mach_mcf_iß_c_nodiv
 29

	)

1834 
	#bfd_mach_mcf_iß_c_nodiv_mac
 30

	)

1835 
	#bfd_mach_mcf_iß_c_nodiv_emac
 31

	)

1836 
	gbfd_¨ch_vax
,

1837 
	gbfd_¨ch_i960
,

1846 
	#bfd_mach_i960_c‹e
 1

	)

1847 
	#bfd_mach_i960_ka_ß
 2

	)

1848 
	#bfd_mach_i960_kb_sb
 3

	)

1849 
	#bfd_mach_i960_mc
 4

	)

1850 
	#bfd_mach_i960_xa
 5

	)

1851 
	#bfd_mach_i960_ˇ
 6

	)

1852 
	#bfd_mach_i960_jx
 7

	)

1853 
	#bfd_mach_i960_hx
 8

	)

1855 
	gbfd_¨ch_‹32
,

1857 
	gbfd_¨ch_•¨c
,

1858 
	#bfd_mach_•¨c
 1

	)

1860 
	#bfd_mach_•¨c_•¨˛ë
 2

	)

1861 
	#bfd_mach_•¨c_•¨˛ôe
 3

	)

1862 
	#bfd_mach_•¨c_v8∂us
 4

	)

1863 
	#bfd_mach_•¨c_v8∂uß
 5

	)

1864 
	#bfd_mach_•¨c_•¨˛ôe_À
 6

	)

1865 
	#bfd_mach_•¨c_v9
 7

	)

1866 
	#bfd_mach_•¨c_v9a
 8

	)

1867 
	#bfd_mach_•¨c_v8∂usb
 9

	)

1868 
	#bfd_mach_•¨c_v9b
 10

	)

1870 
	#bfd_mach_•¨c_v9_p
(
mach
) \

1871 ((
mach
Ë>
bfd_mach_•¨c_v8∂us
 && (machË<
bfd_mach_•¨c_v9b
 \

1872 && (
mach
Ë!
bfd_mach_•¨c_•¨˛ôe_À
)

	)

1874 
	#bfd_mach_•¨c_64bô_p
(
mach
) \

1875 ((
mach
Ë>
bfd_mach_•¨c_v9
 && (machË!
bfd_mach_•¨c_v8∂usb
)

	)

1876 
	gbfd_¨ch_•u
,

1877 
	#bfd_mach_•u
 256

	)

1878 
	gbfd_¨ch_mùs
,

1879 
	#bfd_mach_mùs3000
 3000

	)

1880 
	#bfd_mach_mùs3900
 3900

	)

1881 
	#bfd_mach_mùs4000
 4000

	)

1882 
	#bfd_mach_mùs4010
 4010

	)

1883 
	#bfd_mach_mùs4100
 4100

	)

1884 
	#bfd_mach_mùs4111
 4111

	)

1885 
	#bfd_mach_mùs4120
 4120

	)

1886 
	#bfd_mach_mùs4300
 4300

	)

1887 
	#bfd_mach_mùs4400
 4400

	)

1888 
	#bfd_mach_mùs4600
 4600

	)

1889 
	#bfd_mach_mùs4650
 4650

	)

1890 
	#bfd_mach_mùs5000
 5000

	)

1891 
	#bfd_mach_mùs5400
 5400

	)

1892 
	#bfd_mach_mùs5500
 5500

	)

1893 
	#bfd_mach_mùs6000
 6000

	)

1894 
	#bfd_mach_mùs7000
 7000

	)

1895 
	#bfd_mach_mùs8000
 8000

	)

1896 
	#bfd_mach_mùs9000
 9000

	)

1897 
	#bfd_mach_mùs10000
 10000

	)

1898 
	#bfd_mach_mùs12000
 12000

	)

1899 
	#bfd_mach_mùs14000
 14000

	)

1900 
	#bfd_mach_mùs16000
 16000

	)

1901 
	#bfd_mach_mùs16
 16

	)

1902 
	#bfd_mach_mùs5
 5

	)

1903 
	#bfd_mach_mùs_lo⁄gs⁄_2e
 3001

	)

1904 
	#bfd_mach_mùs_lo⁄gs⁄_2f
 3002

	)

1905 
	#bfd_mach_mùs_lo⁄gs⁄_3a
 3003

	)

1906 
	#bfd_mach_mùs_sb1
 12310201

	)

1907 
	#bfd_mach_mùs_o˘e⁄
 6501

	)

1908 
	#bfd_mach_mùs_o˘e⁄p
 6601

	)

1909 
	#bfd_mach_mùs_o˘e⁄2
 6502

	)

1910 
	#bfd_mach_mùs_xÃ
 887682

	)

1911 
	#bfd_mach_mùsiß32
 32

	)

1912 
	#bfd_mach_mùsiß32r2
 33

	)

1913 
	#bfd_mach_mùsiß64
 64

	)

1914 
	#bfd_mach_mùsiß64r2
 65

	)

1915 
	#bfd_mach_mùs_mi¸omùs
 96

	)

1916 
	gbfd_¨ch_i386
,

1917 
	#bfd_mach_i386_öãl_sy¡ax
 (1 << 0)

	)

1918 
	#bfd_mach_i386_i8086
 (1 << 1)

	)

1919 
	#bfd_mach_i386_i386
 (1 << 2)

	)

1920 
	#bfd_mach_x86_64
 (1 << 3)

	)

1921 
	#bfd_mach_x64_32
 (1 << 4)

	)

1922 
	#bfd_mach_i386_i386_öãl_sy¡ax
 (
bfd_mach_i386_i386
 | 
bfd_mach_i386_öãl_sy¡ax
)

	)

1923 
	#bfd_mach_x86_64_öãl_sy¡ax
 (
bfd_mach_x86_64
 | 
bfd_mach_i386_öãl_sy¡ax
)

	)

1924 
	#bfd_mach_x64_32_öãl_sy¡ax
 (
bfd_mach_x64_32
 | 
bfd_mach_i386_öãl_sy¡ax
)

	)

1925 
	gbfd_¨ch_l1om
,

1926 
	#bfd_mach_l1om
 (1 << 5)

	)

1927 
	#bfd_mach_l1om_öãl_sy¡ax
 (
bfd_mach_l1om
 | 
bfd_mach_i386_öãl_sy¡ax
)

	)

1928 
	gbfd_¨ch_k1om
,

1929 
	#bfd_mach_k1om
 (1 << 6)

	)

1930 
	#bfd_mach_k1om_öãl_sy¡ax
 (
bfd_mach_k1om
 | 
bfd_mach_i386_öãl_sy¡ax
)

	)

1931 
	gbfd_¨ch_we32k
,

1932 
	gbfd_¨ch_èh€
,

1933 
	gbfd_¨ch_i860
,

1934 
	gbfd_¨ch_i370
,

1935 
	gbfd_¨ch_romp
,

1936 
	gbfd_¨ch_c⁄vex
,

1937 
	gbfd_¨ch_m88k
,

1938 
	gbfd_¨ch_m98k
,

1939 
	gbfd_¨ch_pyømid
,

1940 
	gbfd_¨ch_h8300
,

1941 
	#bfd_mach_h8300
 1

	)

1942 
	#bfd_mach_h8300h
 2

	)

1943 
	#bfd_mach_h8300s
 3

	)

1944 
	#bfd_mach_h8300hn
 4

	)

1945 
	#bfd_mach_h8300¢
 5

	)

1946 
	#bfd_mach_h8300sx
 6

	)

1947 
	#bfd_mach_h8300sxn
 7

	)

1948 
	gbfd_¨ch_pdp11
,

1949 
	gbfd_¨ch_∂ugö
,

1950 
	gbfd_¨ch_powîpc
,

1951 
	#bfd_mach_µc
 32

	)

1952 
	#bfd_mach_µc64
 64

	)

1953 
	#bfd_mach_µc_403
 403

	)

1954 
	#bfd_mach_µc_403gc
 4030

	)

1955 
	#bfd_mach_µc_405
 405

	)

1956 
	#bfd_mach_µc_505
 505

	)

1957 
	#bfd_mach_µc_601
 601

	)

1958 
	#bfd_mach_µc_602
 602

	)

1959 
	#bfd_mach_µc_603
 603

	)

1960 
	#bfd_mach_µc_ec603e
 6031

	)

1961 
	#bfd_mach_µc_604
 604

	)

1962 
	#bfd_mach_µc_620
 620

	)

1963 
	#bfd_mach_µc_630
 630

	)

1964 
	#bfd_mach_µc_750
 750

	)

1965 
	#bfd_mach_µc_860
 860

	)

1966 
	#bfd_mach_µc_a35
 35

	)

1967 
	#bfd_mach_µc_rs64ii
 642

	)

1968 
	#bfd_mach_µc_rs64iii
 643

	)

1969 
	#bfd_mach_µc_7400
 7400

	)

1970 
	#bfd_mach_µc_e500
 500

	)

1971 
	#bfd_mach_µc_e500mc
 5001

	)

1972 
	#bfd_mach_µc_e500mc64
 5005

	)

1973 
	#bfd_mach_µc_e5500
 5006

	)

1974 
	#bfd_mach_µc_e6500
 5007

	)

1975 
	#bfd_mach_µc_tô™
 83

	)

1976 
	#bfd_mach_µc_vÀ
 84

	)

1977 
	gbfd_¨ch_rs6000
,

1978 
	#bfd_mach_rs6k
 6000

	)

1979 
	#bfd_mach_rs6k_rs1
 6001

	)

1980 
	#bfd_mach_rs6k_rsc
 6003

	)

1981 
	#bfd_mach_rs6k_rs2
 6002

	)

1982 
	gbfd_¨ch_hµa
,

1983 
	#bfd_mach_hµa10
 10

	)

1984 
	#bfd_mach_hµa11
 11

	)

1985 
	#bfd_mach_hµa20
 20

	)

1986 
	#bfd_mach_hµa20w
 25

	)

1987 
	gbfd_¨ch_d10v
,

1988 
	#bfd_mach_d10v
 1

	)

1989 
	#bfd_mach_d10v_ts2
 2

	)

1990 
	#bfd_mach_d10v_ts3
 3

	)

1991 
	gbfd_¨ch_d30v
,

1992 
	gbfd_¨ch_dlx
,

1993 
	gbfd_¨ch_m68hc11
,

1994 
	gbfd_¨ch_m68hc12
,

1995 
	#bfd_mach_m6812_deÁu…
 0

	)

1996 
	#bfd_mach_m6812
 1

	)

1997 
	#bfd_mach_m6812s
 2

	)

1998 
	gbfd_¨ch_m9s12x
,

1999 
	gbfd_¨ch_m9s12xg
,

2000 
	gbfd_¨ch_z8k
,

2001 
	#bfd_mach_z8001
 1

	)

2002 
	#bfd_mach_z8002
 2

	)

2003 
	gbfd_¨ch_h8500
,

2004 
	gbfd_¨ch_sh
,

2005 
	#bfd_mach_sh
 1

	)

2006 
	#bfd_mach_sh2
 0x20

	)

2007 
	#bfd_mach_sh_d•
 0x2d

	)

2008 
	#bfd_mach_sh2a
 0x2a

	)

2009 
	#bfd_mach_sh2a_noÂu
 0x2b

	)

2010 
	#bfd_mach_sh2a_noÂu_‹_sh4_nommu_noÂu
 0x2a1

	)

2011 
	#bfd_mach_sh2a_noÂu_‹_sh3_nommu
 0x2a2

	)

2012 
	#bfd_mach_sh2a_‹_sh4
 0x2a3

	)

2013 
	#bfd_mach_sh2a_‹_sh3e
 0x2a4

	)

2014 
	#bfd_mach_sh2e
 0x2e

	)

2015 
	#bfd_mach_sh3
 0x30

	)

2016 
	#bfd_mach_sh3_nommu
 0x31

	)

2017 
	#bfd_mach_sh3_d•
 0x3d

	)

2018 
	#bfd_mach_sh3e
 0x3e

	)

2019 
	#bfd_mach_sh4
 0x40

	)

2020 
	#bfd_mach_sh4_noÂu
 0x41

	)

2021 
	#bfd_mach_sh4_nommu_noÂu
 0x42

	)

2022 
	#bfd_mach_sh4a
 0x4a

	)

2023 
	#bfd_mach_sh4a_noÂu
 0x4b

	)

2024 
	#bfd_mach_sh4Æ_d•
 0x4d

	)

2025 
	#bfd_mach_sh5
 0x50

	)

2026 
	gbfd_¨ch_Æpha
,

2027 
	#bfd_mach_Æpha_ev4
 0x10

	)

2028 
	#bfd_mach_Æpha_ev5
 0x20

	)

2029 
	#bfd_mach_Æpha_ev6
 0x30

	)

2030 
	gbfd_¨ch_¨m
,

2031 
	#bfd_mach_¨m_unknown
 0

	)

2032 
	#bfd_mach_¨m_2
 1

	)

2033 
	#bfd_mach_¨m_2a
 2

	)

2034 
	#bfd_mach_¨m_3
 3

	)

2035 
	#bfd_mach_¨m_3M
 4

	)

2036 
	#bfd_mach_¨m_4
 5

	)

2037 
	#bfd_mach_¨m_4T
 6

	)

2038 
	#bfd_mach_¨m_5
 7

	)

2039 
	#bfd_mach_¨m_5T
 8

	)

2040 
	#bfd_mach_¨m_5TE
 9

	)

2041 
	#bfd_mach_¨m_XSˇÀ
 10

	)

2042 
	#bfd_mach_¨m_ï9312
 11

	)

2043 
	#bfd_mach_¨m_iWMMXt
 12

	)

2044 
	#bfd_mach_¨m_iWMMXt2
 13

	)

2045 
	gbfd_¨ch_ns32k
,

2046 
	gbfd_¨ch_w65
,

2047 
	gbfd_¨ch_tic30
,

2048 
	gbfd_¨ch_tic4x
,

2049 
	#bfd_mach_tic3x
 30

	)

2050 
	#bfd_mach_tic4x
 40

	)

2051 
	gbfd_¨ch_tic54x
,

2052 
	gbfd_¨ch_tic6x
,

2053 
	gbfd_¨ch_tic80
,

2054 
	gbfd_¨ch_v850
,

2055 
	#bfd_mach_v850
 1

	)

2056 
	#bfd_mach_v850e
 'E'

	)

2057 
	#bfd_mach_v850e1
 '1'

	)

2058 
	#bfd_mach_v850e2
 0x4532

	)

2059 
	#bfd_mach_v850e2v3
 0x45325633

	)

2060 
	gbfd_¨ch_¨c
,

2061 
	#bfd_mach_¨c_5
 5

	)

2062 
	#bfd_mach_¨c_6
 6

	)

2063 
	#bfd_mach_¨c_7
 7

	)

2064 
	#bfd_mach_¨c_8
 8

	)

2065 
	gbfd_¨ch_m32c
,

2066 
	#bfd_mach_m16c
 0x75

	)

2067 
	#bfd_mach_m32c
 0x78

	)

2068 
	gbfd_¨ch_m32r
,

2069 
	#bfd_mach_m32r
 1

	)

2070 
	#bfd_mach_m32rx
 'x'

	)

2071 
	#bfd_mach_m32r2
 '2'

	)

2072 
	gbfd_¨ch_mn10200
,

2073 
	gbfd_¨ch_mn10300
,

2074 
	#bfd_mach_mn10300
 300

	)

2075 
	#bfd_mach_am33
 330

	)

2076 
	#bfd_mach_am33_2
 332

	)

2077 
	gbfd_¨ch_‰30
,

2078 
	#bfd_mach_‰30
 0x46523330

	)

2079 
	gbfd_¨ch_‰v
,

2080 
	#bfd_mach_‰v
 1

	)

2081 
	#bfd_mach_‰vsim∂e
 2

	)

2082 
	#bfd_mach_‰300
 300

	)

2083 
	#bfd_mach_‰400
 400

	)

2084 
	#bfd_mach_‰450
 450

	)

2085 
	#bfd_mach_‰vtomˇt
 499

	)

2086 
	#bfd_mach_‰500
 500

	)

2087 
	#bfd_mach_‰550
 550

	)

2088 
	gbfd_¨ch_moxõ
,

2089 
	#bfd_mach_moxõ
 1

	)

2090 
	gbfd_¨ch_mc‹e
,

2091 
	gbfd_¨ch_mï
,

2092 
	#bfd_mach_mï
 1

	)

2093 
	#bfd_mach_mï_h1
 0x6831

	)

2094 
	#bfd_mach_mï_c5
 0x6335

	)

2095 
	gbfd_¨ch_ü64
,

2096 
	#bfd_mach_ü64_ñf64
 64

	)

2097 
	#bfd_mach_ü64_ñf32
 32

	)

2098 
	gbfd_¨ch_ù2k
,

2099 
	#bfd_mach_ù2022
 1

	)

2100 
	#bfd_mach_ù2022ext
 2

	)

2101 
	gbfd_¨ch_iq2000
,

2102 
	#bfd_mach_iq2000
 1

	)

2103 
	#bfd_mach_iq10
 2

	)

2104 
	gbfd_¨ch_ïùh™y
,

2105 
	#bfd_mach_ïùh™y16
 1

	)

2106 
	#bfd_mach_ïùh™y32
 2

	)

2107 
	gbfd_¨ch_mt
,

2108 
	#bfd_mach_ms1
 1

	)

2109 
	#bfd_mach_mrisc2
 2

	)

2110 
	#bfd_mach_ms2
 3

	)

2111 
	gbfd_¨ch_pj
,

2112 
	gbfd_¨ch_avr
,

2113 
	#bfd_mach_avr1
 1

	)

2114 
	#bfd_mach_avr2
 2

	)

2115 
	#bfd_mach_avr25
 25

	)

2116 
	#bfd_mach_avr3
 3

	)

2117 
	#bfd_mach_avr31
 31

	)

2118 
	#bfd_mach_avr35
 35

	)

2119 
	#bfd_mach_avr4
 4

	)

2120 
	#bfd_mach_avr5
 5

	)

2121 
	#bfd_mach_avr51
 51

	)

2122 
	#bfd_mach_avr6
 6

	)

2123 
	#bfd_mach_avrxmega1
 101

	)

2124 
	#bfd_mach_avrxmega2
 102

	)

2125 
	#bfd_mach_avrxmega3
 103

	)

2126 
	#bfd_mach_avrxmega4
 104

	)

2127 
	#bfd_mach_avrxmega5
 105

	)

2128 
	#bfd_mach_avrxmega6
 106

	)

2129 
	#bfd_mach_avrxmega7
 107

	)

2130 
	gbfd_¨ch_bfö
,

2131 
	#bfd_mach_bfö
 1

	)

2132 
	gbfd_¨ch_¸16
,

2133 
	#bfd_mach_¸16
 1

	)

2134 
	gbfd_¨ch_¸16c
,

2135 
	#bfd_mach_¸16c
 1

	)

2136 
	gbfd_¨ch_¸x
,

2137 
	#bfd_mach_¸x
 1

	)

2138 
	gbfd_¨ch_¸is
,

2139 
	#bfd_mach_¸is_v0_v10
 255

	)

2140 
	#bfd_mach_¸is_v32
 32

	)

2141 
	#bfd_mach_¸is_v10_v32
 1032

	)

2142 
	gbfd_¨ch_æ78
,

2143 
	#bfd_mach_æ78
 0x75

	)

2144 
	gbfd_¨ch_rx
,

2145 
	#bfd_mach_rx
 0x75

	)

2146 
	gbfd_¨ch_s390
,

2147 
	#bfd_mach_s390_31
 31

	)

2148 
	#bfd_mach_s390_64
 64

	)

2149 
	gbfd_¨ch_sc‹e
,

2150 
	#bfd_mach_sc‹e3
 3

	)

2151 
	#bfd_mach_sc‹e7
 7

	)

2152 
	gbfd_¨ch_›írisc
,

2153 
	gbfd_¨ch_mmix
,

2154 
	gbfd_¨ch_x°‹my16
,

2155 
	#bfd_mach_x°‹my16
 1

	)

2156 
	gbfd_¨ch_m•430
,

2157 
	#bfd_mach_m•11
 11

	)

2158 
	#bfd_mach_m•110
 110

	)

2159 
	#bfd_mach_m•12
 12

	)

2160 
	#bfd_mach_m•13
 13

	)

2161 
	#bfd_mach_m•14
 14

	)

2162 
	#bfd_mach_m•15
 15

	)

2163 
	#bfd_mach_m•16
 16

	)

2164 
	#bfd_mach_m•21
 21

	)

2165 
	#bfd_mach_m•31
 31

	)

2166 
	#bfd_mach_m•32
 32

	)

2167 
	#bfd_mach_m•33
 33

	)

2168 
	#bfd_mach_m•41
 41

	)

2169 
	#bfd_mach_m•42
 42

	)

2170 
	#bfd_mach_m•43
 43

	)

2171 
	#bfd_mach_m•44
 44

	)

2172 
	gbfd_¨ch_xc16x
,

2173 
	#bfd_mach_xc16x
 1

	)

2174 
	#bfd_mach_xc16xl
 2

	)

2175 
	#bfd_mach_xc16xs
 3

	)

2176 
	gbfd_¨ch_xg©e
,

2177 
	#bfd_mach_xg©e
 1

	)

2178 
	gbfd_¨ch_xãnß
,

2179 
	#bfd_mach_xãnß
 1

	)

2180 
	gbfd_¨ch_z80
,

2181 
	#bfd_mach_z80°ri˘
 1

	)

2182 
	#bfd_mach_z80
 3

	)

2183 
	#bfd_mach_z80fuŒ
 7

	)

2184 
	#bfd_mach_r800
 11

	)

2185 
	gbfd_¨ch_lm32
,

2186 
	#bfd_mach_lm32
 1

	)

2187 
	gbfd_¨ch_mi¸obœze
,

2188 
	gbfd_¨ch_tûïro
,

2189 
	gbfd_¨ch_tûegx
,

2190 
	#bfd_mach_tûïro
 1

	)

2191 
	#bfd_mach_tûegx
 1

	)

2192 
	#bfd_mach_tûegx32
 2

	)

2193 
	gbfd_¨ch_Ørch64
,

2194 
	#bfd_mach_Ørch64
 0

	)

2195 
	gbfd_¨ch_œ°


2198 
	sbfd_¨ch_öfo


2200 
	gbôs_≥r_w‹d
;

2201 
	gbôs_≥r_addªss
;

2202 
	gbôs_≥r_byã
;

2203 
bfd_¨chôe˘uª
 
	g¨ch
;

2204 
	gmach
;

2205 c⁄° *
	g¨ch_«me
;

2206 c⁄° *
	g¥öèbÀ_«me
;

2207 
	g£˘i⁄_Æign_powî
;

2211 
bfd_boﬁón
 
	gthe_deÁu…
;

2212 c⁄° 
	gbfd_¨ch_öfo
 * (*
	gcom∑tibÀ
)

2213 (c⁄° 
bfd_¨ch_öfo
 *
	ga
, c⁄° bfd_¨ch_öfÿ*
	gb
);

2215 
bfd_boﬁón
 (*
sˇn
Ë(c⁄° 
	gbfd_¨ch_öfo
 *, const *);

2220 *(*
	gfûl
Ë(
bfd_size_ty≥
 
	gcou¡
, 
bfd_boﬁón
 
	gis_bigídün
,

2221 
bfd_boﬁón
 
	gcode
);

2223 c⁄° 
bfd_¨ch_öfo
 *
	g√xt
;

2225 
	tbfd_¨ch_öfo_ty≥
;

2227 c⁄° *
bfd_¥öèbÀ_«me
 (
bfd
 *
abfd
);

2229 c⁄° 
bfd_¨ch_öfo_ty≥
 *
bfd_sˇn_¨ch
 (c⁄° *
°rög
);

2231 c⁄° **
bfd_¨ch_li°
 ();

2233 c⁄° 
bfd_¨ch_öfo_ty≥
 *
	gbfd_¨ch_gë_com∑tibÀ


2234 (c⁄° 
bfd
 *
	gabfd
, c⁄° bfd *
	gbbfd
, 
bfd_boﬁón
 
	gac˚±_unknowns
);

2236 
bfd_£t_¨ch_öfo
 (
bfd
 *
abfd
, c⁄° 
bfd_¨ch_öfo_ty≥
 *
¨g
);

2238 
bfd_¨chôe˘uª
 
bfd_gë_¨ch
 (
bfd
 *
abfd
);

2240 
bfd_gë_mach
 (
bfd
 *
abfd
);

2242 
bfd_¨ch_bôs_≥r_byã
 (
bfd
 *
abfd
);

2244 
bfd_¨ch_bôs_≥r_addªss
 (
bfd
 *
abfd
);

2246 c⁄° 
bfd_¨ch_öfo_ty≥
 *
bfd_gë_¨ch_öfo
 (
bfd
 *
abfd
);

2248 c⁄° 
bfd_¨ch_öfo_ty≥
 *
	gbfd_lookup_¨ch


2249 (
bfd_¨chôe˘uª
 
	g¨ch
, 
	gmachöe
);

2251 c⁄° *
	gbfd_¥öèbÀ_¨ch_mach


2252 (
bfd_¨chôe˘uª
 
	g¨ch
, 
	gmachöe
);

2254 
bfd_o˘ës_≥r_byã
 (
bfd
 *
abfd
);

2256 
	gbfd_¨ch_mach_o˘ës_≥r_byã


2257 (
bfd_¨chôe˘uª
 
	g¨ch
, 
	gmachöe
);

2260 
	ebfd_ªloc_°©us


2263 
	gbfd_ªloc_ok
,

2266 
	gbfd_ªloc_ovîÊow
,

2269 
	gbfd_ªloc_outo‰™ge
,

2272 
	gbfd_ªloc_c⁄töue
,

2275 
	gbfd_ªloc_nŸsuµ‹ãd
,

2278 
	gbfd_ªloc_Ÿhî
,

2281 
	gbfd_ªloc_undeföed
,

2287 
	gbfd_ªloc_d™gîous


2289 
	tbfd_ªloc_°©us_ty≥
;

2292 
	sªloc_ˇche_íåy


2295 
bfd_symbﬁ
 **
	gsym_±r_±r
;

2298 
bfd_size_ty≥
 
	gaddªss
;

2301 
bfd_vma
 
	gaddíd
;

2304 
ªloc_howto_ty≥
 *
	ghowto
;

2307 
	t¨ñít
;

2309 
	ecom∂aö_ovîÊow


2312 
	gcom∂aö_ovîÊow_d⁄t
,

2317 
	gcom∂aö_ovîÊow_bôfõld
,

2321 
	gcom∂aö_ovîÊow_sig√d
,

2325 
	gcom∂aö_ovîÊow_unsig√d


2328 
	sªloc_howto_°ru˘


2336 
	gty≥
;

2340 
	grightshi·
;

2345 
	gsize
;

2349 
	gbôsize
;

2352 
bfd_boﬁón
 
	gpc_ªœtive
;

2356 
	gbôpos
;

2360 
com∂aö_ovîÊow
 
	gcom∂aö_⁄_ovîÊow
;

2366 
bfd_ªloc_°©us_ty≥
 (*
•ecül_fun˘i⁄
)

2367 (
	gbfd
 *, 
	g¨ñít
 *, 
	gbfd_symbﬁ
 *, *, 
	ga£˘i⁄
 *,

2368 
	gbfd
 *, **);

2371 *
	g«me
;

2388 
bfd_boﬁón
 
	g∑πül_ö∂a˚
;

2398 
bfd_vma
 
	g§c_mask
;

2402 
bfd_vma
 
	gd°_mask
;

2410 
bfd_boﬁón
 
	gp¸ñ_off£t
;

2413 
	#HOWTO
(
C
, 
R
, 
S
, 
B
, 
P
, 
BI
, 
O
, 
SF
, 
NAME
, 
INPLACE
, 
MASKSRC
, 
MASKDST
, 
PC
) \

2414 { (Ë
C
, 
R
, 
S
, 
B
, 
P
, 
BI
, 
O
, 
SF
, 
NAME
, 
INPLACE
, 
MASKSRC
, 
MASKDST
, 
PC
 }

	)

2415 
	#NEWHOWTO
(
FUNCTION
, 
NAME
, 
SIZE
, 
REL
, 
IN
) \

2416 
	`HOWTO
 (0, 0, 
SIZE
, 0, 
REL
, 0, 
com∂aö_ovîÊow_d⁄t
, 
FUNCTION
, \

2417 
NAME
, 
FALSE
, 0, 0, 
IN
)

	)

2419 
	#EMPTY_HOWTO
(
C
) \

2420 
	`HOWTO
 ((
C
), 0, 0, 0, 
FALSE
, 0, 
com∂aö_ovîÊow_d⁄t
, 
NULL
, \

2421 
NULL
, 
FALSE
, 0, 0, FALSE)

	)

2423 
	#HOWTO_PREPARE
(
ªloˇti⁄
, 
symbﬁ
) \

2425 i‡(
symbﬁ
 !
NULL
) \

2427 i‡(
	`bfd_is_com_£˘i⁄
 (
symbﬁ
->
£˘i⁄
)) \

2429 
ªloˇti⁄
 = 0; \

2433 
ªloˇti⁄
 = 
symbﬁ
->
vÆue
; \

2436 }

	)

2438 
bfd_gë_ªloc_size
 (
ªloc_howto_ty≥
 *);

2440 
	sªÀ¡_chaö


2442 
¨ñít
 
	gªÀ¡
;

2443 
ªÀ¡_chaö
 *
	g√xt
;

2445 
	t¨ñít_chaö
;

2447 
bfd_ªloc_°©us_ty≥
 
	gbfd_check_ovîÊow


2448 (
com∂aö_ovîÊow
 
	ghow
,

2449 
	gbôsize
,

2450 
	grightshi·
,

2451 
	gaddrsize
,

2452 
bfd_vma
 
	gªloˇti⁄
);

2454 
bfd_ªloc_°©us_ty≥
 
	gbfd_≥rf‹m_ªloˇti⁄


2455 (
bfd
 *
	gabfd
,

2456 
¨ñít
 *
	gªloc_íåy
,

2457 *
	gd©a
,

2458 
a£˘i⁄
 *
	göput_£˘i⁄
,

2459 
bfd
 *
	gouçut_bfd
,

2460 **
	gîr‹_mesßge
);

2462 
bfd_ªloc_°©us_ty≥
 
	gbfd_ö°Æl_ªloˇti⁄


2463 (
bfd
 *
	gabfd
,

2464 
¨ñít
 *
	gªloc_íåy
,

2465 *
	gd©a
, 
bfd_vma
 
	gd©a_°¨t
,

2466 
a£˘i⁄
 *
	göput_£˘i⁄
,

2467 **
	gîr‹_mesßge
);

2469 
	ebfd_ªloc_code_ªÆ
 {

2470 
	g_dummy_fú°_bfd_ªloc_code_ªÆ
,

2474 
	gBFD_RELOC_64
,

2475 
	gBFD_RELOC_32
,

2476 
	gBFD_RELOC_26
,

2477 
	gBFD_RELOC_24
,

2478 
	gBFD_RELOC_16
,

2479 
	gBFD_RELOC_14
,

2480 
	gBFD_RELOC_8
,

2487 
	gBFD_RELOC_64_PCREL
,

2488 
	gBFD_RELOC_32_PCREL
,

2489 
	gBFD_RELOC_24_PCREL
,

2490 
	gBFD_RELOC_16_PCREL
,

2491 
	gBFD_RELOC_12_PCREL
,

2492 
	gBFD_RELOC_8_PCREL
,

2495 
	gBFD_RELOC_32_SECREL
,

2498 
	gBFD_RELOC_32_GOT_PCREL
,

2499 
	gBFD_RELOC_16_GOT_PCREL
,

2500 
	gBFD_RELOC_8_GOT_PCREL
,

2501 
	gBFD_RELOC_32_GOTOFF
,

2502 
	gBFD_RELOC_16_GOTOFF
,

2503 
	gBFD_RELOC_LO16_GOTOFF
,

2504 
	gBFD_RELOC_HI16_GOTOFF
,

2505 
	gBFD_RELOC_HI16_S_GOTOFF
,

2506 
	gBFD_RELOC_8_GOTOFF
,

2507 
	gBFD_RELOC_64_PLT_PCREL
,

2508 
	gBFD_RELOC_32_PLT_PCREL
,

2509 
	gBFD_RELOC_24_PLT_PCREL
,

2510 
	gBFD_RELOC_16_PLT_PCREL
,

2511 
	gBFD_RELOC_8_PLT_PCREL
,

2512 
	gBFD_RELOC_64_PLTOFF
,

2513 
	gBFD_RELOC_32_PLTOFF
,

2514 
	gBFD_RELOC_16_PLTOFF
,

2515 
	gBFD_RELOC_LO16_PLTOFF
,

2516 
	gBFD_RELOC_HI16_PLTOFF
,

2517 
	gBFD_RELOC_HI16_S_PLTOFF
,

2518 
	gBFD_RELOC_8_PLTOFF
,

2521 
	gBFD_RELOC_68K_GLOB_DAT
,

2522 
	gBFD_RELOC_68K_JMP_SLOT
,

2523 
	gBFD_RELOC_68K_RELATIVE
,

2524 
	gBFD_RELOC_68K_TLS_GD32
,

2525 
	gBFD_RELOC_68K_TLS_GD16
,

2526 
	gBFD_RELOC_68K_TLS_GD8
,

2527 
	gBFD_RELOC_68K_TLS_LDM32
,

2528 
	gBFD_RELOC_68K_TLS_LDM16
,

2529 
	gBFD_RELOC_68K_TLS_LDM8
,

2530 
	gBFD_RELOC_68K_TLS_LDO32
,

2531 
	gBFD_RELOC_68K_TLS_LDO16
,

2532 
	gBFD_RELOC_68K_TLS_LDO8
,

2533 
	gBFD_RELOC_68K_TLS_IE32
,

2534 
	gBFD_RELOC_68K_TLS_IE16
,

2535 
	gBFD_RELOC_68K_TLS_IE8
,

2536 
	gBFD_RELOC_68K_TLS_LE32
,

2537 
	gBFD_RELOC_68K_TLS_LE16
,

2538 
	gBFD_RELOC_68K_TLS_LE8
,

2541 
	gBFD_RELOC_32_BASEREL
,

2542 
	gBFD_RELOC_16_BASEREL
,

2543 
	gBFD_RELOC_LO16_BASEREL
,

2544 
	gBFD_RELOC_HI16_BASEREL
,

2545 
	gBFD_RELOC_HI16_S_BASEREL
,

2546 
	gBFD_RELOC_8_BASEREL
,

2547 
	gBFD_RELOC_RVA
,

2550 
	gBFD_RELOC_8_FF¬
,

2558 
	gBFD_RELOC_32_PCREL_S2
,

2559 
	gBFD_RELOC_16_PCREL_S2
,

2560 
	gBFD_RELOC_23_PCREL_S2
,

2564 
	gBFD_RELOC_HI22
,

2565 
	gBFD_RELOC_LO10
,

2571 
	gBFD_RELOC_GPREL16
,

2572 
	gBFD_RELOC_GPREL32
,

2575 
	gBFD_RELOC_I960_CALLJ
,

2579 
	gBFD_RELOC_NONE
,

2580 
	gBFD_RELOC_SPARC_WDISP22
,

2581 
	gBFD_RELOC_SPARC22
,

2582 
	gBFD_RELOC_SPARC13
,

2583 
	gBFD_RELOC_SPARC_GOT10
,

2584 
	gBFD_RELOC_SPARC_GOT13
,

2585 
	gBFD_RELOC_SPARC_GOT22
,

2586 
	gBFD_RELOC_SPARC_PC10
,

2587 
	gBFD_RELOC_SPARC_PC22
,

2588 
	gBFD_RELOC_SPARC_WPLT30
,

2589 
	gBFD_RELOC_SPARC_COPY
,

2590 
	gBFD_RELOC_SPARC_GLOB_DAT
,

2591 
	gBFD_RELOC_SPARC_JMP_SLOT
,

2592 
	gBFD_RELOC_SPARC_RELATIVE
,

2593 
	gBFD_RELOC_SPARC_UA16
,

2594 
	gBFD_RELOC_SPARC_UA32
,

2595 
	gBFD_RELOC_SPARC_UA64
,

2596 
	gBFD_RELOC_SPARC_GOTDATA_HIX22
,

2597 
	gBFD_RELOC_SPARC_GOTDATA_LOX10
,

2598 
	gBFD_RELOC_SPARC_GOTDATA_OP_HIX22
,

2599 
	gBFD_RELOC_SPARC_GOTDATA_OP_LOX10
,

2600 
	gBFD_RELOC_SPARC_GOTDATA_OP
,

2601 
	gBFD_RELOC_SPARC_JMP_IREL
,

2602 
	gBFD_RELOC_SPARC_IRELATIVE
,

2605 
	gBFD_RELOC_SPARC_BASE13
,

2606 
	gBFD_RELOC_SPARC_BASE22
,

2609 
	#BFD_RELOC_SPARC_64
 
BFD_RELOC_64


	)

2610 
	gBFD_RELOC_SPARC_10
,

2611 
	gBFD_RELOC_SPARC_11
,

2612 
	gBFD_RELOC_SPARC_OLO10
,

2613 
	gBFD_RELOC_SPARC_HH22
,

2614 
	gBFD_RELOC_SPARC_HM10
,

2615 
	gBFD_RELOC_SPARC_LM22
,

2616 
	gBFD_RELOC_SPARC_PC_HH22
,

2617 
	gBFD_RELOC_SPARC_PC_HM10
,

2618 
	gBFD_RELOC_SPARC_PC_LM22
,

2619 
	gBFD_RELOC_SPARC_WDISP16
,

2620 
	gBFD_RELOC_SPARC_WDISP19
,

2621 
	gBFD_RELOC_SPARC_7
,

2622 
	gBFD_RELOC_SPARC_6
,

2623 
	gBFD_RELOC_SPARC_5
,

2624 
	#BFD_RELOC_SPARC_DISP64
 
BFD_RELOC_64_PCREL


	)

2625 
	gBFD_RELOC_SPARC_PLT32
,

2626 
	gBFD_RELOC_SPARC_PLT64
,

2627 
	gBFD_RELOC_SPARC_HIX22
,

2628 
	gBFD_RELOC_SPARC_LOX10
,

2629 
	gBFD_RELOC_SPARC_H44
,

2630 
	gBFD_RELOC_SPARC_M44
,

2631 
	gBFD_RELOC_SPARC_L44
,

2632 
	gBFD_RELOC_SPARC_REGISTER
,

2633 
	gBFD_RELOC_SPARC_H34
,

2634 
	gBFD_RELOC_SPARC_SIZE32
,

2635 
	gBFD_RELOC_SPARC_SIZE64
,

2636 
	gBFD_RELOC_SPARC_WDISP10
,

2639 
	gBFD_RELOC_SPARC_REV32
,

2642 
	gBFD_RELOC_SPARC_TLS_GD_HI22
,

2643 
	gBFD_RELOC_SPARC_TLS_GD_LO10
,

2644 
	gBFD_RELOC_SPARC_TLS_GD_ADD
,

2645 
	gBFD_RELOC_SPARC_TLS_GD_CALL
,

2646 
	gBFD_RELOC_SPARC_TLS_LDM_HI22
,

2647 
	gBFD_RELOC_SPARC_TLS_LDM_LO10
,

2648 
	gBFD_RELOC_SPARC_TLS_LDM_ADD
,

2649 
	gBFD_RELOC_SPARC_TLS_LDM_CALL
,

2650 
	gBFD_RELOC_SPARC_TLS_LDO_HIX22
,

2651 
	gBFD_RELOC_SPARC_TLS_LDO_LOX10
,

2652 
	gBFD_RELOC_SPARC_TLS_LDO_ADD
,

2653 
	gBFD_RELOC_SPARC_TLS_IE_HI22
,

2654 
	gBFD_RELOC_SPARC_TLS_IE_LO10
,

2655 
	gBFD_RELOC_SPARC_TLS_IE_LD
,

2656 
	gBFD_RELOC_SPARC_TLS_IE_LDX
,

2657 
	gBFD_RELOC_SPARC_TLS_IE_ADD
,

2658 
	gBFD_RELOC_SPARC_TLS_LE_HIX22
,

2659 
	gBFD_RELOC_SPARC_TLS_LE_LOX10
,

2660 
	gBFD_RELOC_SPARC_TLS_DTPMOD32
,

2661 
	gBFD_RELOC_SPARC_TLS_DTPMOD64
,

2662 
	gBFD_RELOC_SPARC_TLS_DTPOFF32
,

2663 
	gBFD_RELOC_SPARC_TLS_DTPOFF64
,

2664 
	gBFD_RELOC_SPARC_TLS_TPOFF32
,

2665 
	gBFD_RELOC_SPARC_TLS_TPOFF64
,

2668 
	gBFD_RELOC_SPU_IMM7
,

2669 
	gBFD_RELOC_SPU_IMM8
,

2670 
	gBFD_RELOC_SPU_IMM10
,

2671 
	gBFD_RELOC_SPU_IMM10W
,

2672 
	gBFD_RELOC_SPU_IMM16
,

2673 
	gBFD_RELOC_SPU_IMM16W
,

2674 
	gBFD_RELOC_SPU_IMM18
,

2675 
	gBFD_RELOC_SPU_PCREL9a
,

2676 
	gBFD_RELOC_SPU_PCREL9b
,

2677 
	gBFD_RELOC_SPU_PCREL16
,

2678 
	gBFD_RELOC_SPU_LO16
,

2679 
	gBFD_RELOC_SPU_HI16
,

2680 
	gBFD_RELOC_SPU_PPU32
,

2681 
	gBFD_RELOC_SPU_PPU64
,

2682 
	gBFD_RELOC_SPU_ADD_PIC
,

2690 
	gBFD_RELOC_ALPHA_GPDISP_HI16
,

2696 
	gBFD_RELOC_ALPHA_GPDISP_LO16
,

2701 
	gBFD_RELOC_ALPHA_GPDISP
,

2726 
	gBFD_RELOC_ALPHA_LITERAL
,

2727 
	gBFD_RELOC_ALPHA_ELF_LITERAL
,

2728 
	gBFD_RELOC_ALPHA_LITUSE
,

2733 
	gBFD_RELOC_ALPHA_HINT
,

2737 
	gBFD_RELOC_ALPHA_LINKAGE
,

2741 
	gBFD_RELOC_ALPHA_CODEADDR
,

2745 
	gBFD_RELOC_ALPHA_GPREL_HI16
,

2746 
	gBFD_RELOC_ALPHA_GPREL_LO16
,

2751 
	gBFD_RELOC_ALPHA_BRSGP
,

2755 
	gBFD_RELOC_ALPHA_NOP
,

2759 
	gBFD_RELOC_ALPHA_BSR
,

2763 
	gBFD_RELOC_ALPHA_LDA
,

2767 
	gBFD_RELOC_ALPHA_BOH
,

2770 
	gBFD_RELOC_ALPHA_TLSGD
,

2771 
	gBFD_RELOC_ALPHA_TLSLDM
,

2772 
	gBFD_RELOC_ALPHA_DTPMOD64
,

2773 
	gBFD_RELOC_ALPHA_GOTDTPREL16
,

2774 
	gBFD_RELOC_ALPHA_DTPREL64
,

2775 
	gBFD_RELOC_ALPHA_DTPREL_HI16
,

2776 
	gBFD_RELOC_ALPHA_DTPREL_LO16
,

2777 
	gBFD_RELOC_ALPHA_DTPREL16
,

2778 
	gBFD_RELOC_ALPHA_GOTTPREL16
,

2779 
	gBFD_RELOC_ALPHA_TPREL64
,

2780 
	gBFD_RELOC_ALPHA_TPREL_HI16
,

2781 
	gBFD_RELOC_ALPHA_TPREL_LO16
,

2782 
	gBFD_RELOC_ALPHA_TPREL16
,

2785 
	gBFD_RELOC_MIPS_JMP
,

2786 
	gBFD_RELOC_MICROMIPS_JMP
,

2789 
	gBFD_RELOC_MIPS16_JMP
,

2792 
	gBFD_RELOC_MIPS16_GPREL
,

2795 
	gBFD_RELOC_HI16
,

2801 
	gBFD_RELOC_HI16_S
,

2804 
	gBFD_RELOC_LO16
,

2807 
	gBFD_RELOC_HI16_PCREL
,

2810 
	gBFD_RELOC_HI16_S_PCREL
,

2813 
	gBFD_RELOC_LO16_PCREL
,

2817 
	gBFD_RELOC_MIPS16_GOT16
,

2818 
	gBFD_RELOC_MIPS16_CALL16
,

2821 
	gBFD_RELOC_MIPS16_HI16
,

2827 
	gBFD_RELOC_MIPS16_HI16_S
,

2830 
	gBFD_RELOC_MIPS16_LO16
,

2833 
	gBFD_RELOC_MIPS16_TLS_GD
,

2834 
	gBFD_RELOC_MIPS16_TLS_LDM
,

2835 
	gBFD_RELOC_MIPS16_TLS_DTPREL_HI16
,

2836 
	gBFD_RELOC_MIPS16_TLS_DTPREL_LO16
,

2837 
	gBFD_RELOC_MIPS16_TLS_GOTTPREL
,

2838 
	gBFD_RELOC_MIPS16_TLS_TPREL_HI16
,

2839 
	gBFD_RELOC_MIPS16_TLS_TPREL_LO16
,

2842 
	gBFD_RELOC_MIPS_LITERAL
,

2843 
	gBFD_RELOC_MICROMIPS_LITERAL
,

2846 
	gBFD_RELOC_MICROMIPS_7_PCREL_S1
,

2847 
	gBFD_RELOC_MICROMIPS_10_PCREL_S1
,

2848 
	gBFD_RELOC_MICROMIPS_16_PCREL_S1
,

2851 
	gBFD_RELOC_MICROMIPS_GPREL16
,

2852 
	gBFD_RELOC_MICROMIPS_HI16
,

2853 
	gBFD_RELOC_MICROMIPS_HI16_S
,

2854 
	gBFD_RELOC_MICROMIPS_LO16
,

2857 
	gBFD_RELOC_MIPS_GOT16
,

2858 
	gBFD_RELOC_MICROMIPS_GOT16
,

2859 
	gBFD_RELOC_MIPS_CALL16
,

2860 
	gBFD_RELOC_MICROMIPS_CALL16
,

2861 
	gBFD_RELOC_MIPS_GOT_HI16
,

2862 
	gBFD_RELOC_MICROMIPS_GOT_HI16
,

2863 
	gBFD_RELOC_MIPS_GOT_LO16
,

2864 
	gBFD_RELOC_MICROMIPS_GOT_LO16
,

2865 
	gBFD_RELOC_MIPS_CALL_HI16
,

2866 
	gBFD_RELOC_MICROMIPS_CALL_HI16
,

2867 
	gBFD_RELOC_MIPS_CALL_LO16
,

2868 
	gBFD_RELOC_MICROMIPS_CALL_LO16
,

2869 
	gBFD_RELOC_MIPS_SUB
,

2870 
	gBFD_RELOC_MICROMIPS_SUB
,

2871 
	gBFD_RELOC_MIPS_GOT_PAGE
,

2872 
	gBFD_RELOC_MICROMIPS_GOT_PAGE
,

2873 
	gBFD_RELOC_MIPS_GOT_OFST
,

2874 
	gBFD_RELOC_MICROMIPS_GOT_OFST
,

2875 
	gBFD_RELOC_MIPS_GOT_DISP
,

2876 
	gBFD_RELOC_MICROMIPS_GOT_DISP
,

2877 
	gBFD_RELOC_MIPS_SHIFT5
,

2878 
	gBFD_RELOC_MIPS_SHIFT6
,

2879 
	gBFD_RELOC_MIPS_INSERT_A
,

2880 
	gBFD_RELOC_MIPS_INSERT_B
,

2881 
	gBFD_RELOC_MIPS_DELETE
,

2882 
	gBFD_RELOC_MIPS_HIGHEST
,

2883 
	gBFD_RELOC_MICROMIPS_HIGHEST
,

2884 
	gBFD_RELOC_MIPS_HIGHER
,

2885 
	gBFD_RELOC_MICROMIPS_HIGHER
,

2886 
	gBFD_RELOC_MIPS_SCN_DISP
,

2887 
	gBFD_RELOC_MICROMIPS_SCN_DISP
,

2888 
	gBFD_RELOC_MIPS_REL16
,

2889 
	gBFD_RELOC_MIPS_RELGOT
,

2890 
	gBFD_RELOC_MIPS_JALR
,

2891 
	gBFD_RELOC_MICROMIPS_JALR
,

2892 
	gBFD_RELOC_MIPS_TLS_DTPMOD32
,

2893 
	gBFD_RELOC_MIPS_TLS_DTPREL32
,

2894 
	gBFD_RELOC_MIPS_TLS_DTPMOD64
,

2895 
	gBFD_RELOC_MIPS_TLS_DTPREL64
,

2896 
	gBFD_RELOC_MIPS_TLS_GD
,

2897 
	gBFD_RELOC_MICROMIPS_TLS_GD
,

2898 
	gBFD_RELOC_MIPS_TLS_LDM
,

2899 
	gBFD_RELOC_MICROMIPS_TLS_LDM
,

2900 
	gBFD_RELOC_MIPS_TLS_DTPREL_HI16
,

2901 
	gBFD_RELOC_MICROMIPS_TLS_DTPREL_HI16
,

2902 
	gBFD_RELOC_MIPS_TLS_DTPREL_LO16
,

2903 
	gBFD_RELOC_MICROMIPS_TLS_DTPREL_LO16
,

2904 
	gBFD_RELOC_MIPS_TLS_GOTTPREL
,

2905 
	gBFD_RELOC_MICROMIPS_TLS_GOTTPREL
,

2906 
	gBFD_RELOC_MIPS_TLS_TPREL32
,

2907 
	gBFD_RELOC_MIPS_TLS_TPREL64
,

2908 
	gBFD_RELOC_MIPS_TLS_TPREL_HI16
,

2909 
	gBFD_RELOC_MICROMIPS_TLS_TPREL_HI16
,

2910 
	gBFD_RELOC_MIPS_TLS_TPREL_LO16
,

2911 
	gBFD_RELOC_MICROMIPS_TLS_TPREL_LO16
,

2915 
	gBFD_RELOC_MIPS_COPY
,

2916 
	gBFD_RELOC_MIPS_JUMP_SLOT
,

2920 
	gBFD_RELOC_MOXIE_10_PCREL
,

2924 
	gBFD_RELOC_FRV_LABEL16
,

2925 
	gBFD_RELOC_FRV_LABEL24
,

2926 
	gBFD_RELOC_FRV_LO16
,

2927 
	gBFD_RELOC_FRV_HI16
,

2928 
	gBFD_RELOC_FRV_GPREL12
,

2929 
	gBFD_RELOC_FRV_GPRELU12
,

2930 
	gBFD_RELOC_FRV_GPREL32
,

2931 
	gBFD_RELOC_FRV_GPRELHI
,

2932 
	gBFD_RELOC_FRV_GPRELLO
,

2933 
	gBFD_RELOC_FRV_GOT12
,

2934 
	gBFD_RELOC_FRV_GOTHI
,

2935 
	gBFD_RELOC_FRV_GOTLO
,

2936 
	gBFD_RELOC_FRV_FUNCDESC
,

2937 
	gBFD_RELOC_FRV_FUNCDESC_GOT12
,

2938 
	gBFD_RELOC_FRV_FUNCDESC_GOTHI
,

2939 
	gBFD_RELOC_FRV_FUNCDESC_GOTLO
,

2940 
	gBFD_RELOC_FRV_FUNCDESC_VALUE
,

2941 
	gBFD_RELOC_FRV_FUNCDESC_GOTOFF12
,

2942 
	gBFD_RELOC_FRV_FUNCDESC_GOTOFFHI
,

2943 
	gBFD_RELOC_FRV_FUNCDESC_GOTOFFLO
,

2944 
	gBFD_RELOC_FRV_GOTOFF12
,

2945 
	gBFD_RELOC_FRV_GOTOFFHI
,

2946 
	gBFD_RELOC_FRV_GOTOFFLO
,

2947 
	gBFD_RELOC_FRV_GETTLSOFF
,

2948 
	gBFD_RELOC_FRV_TLSDESC_VALUE
,

2949 
	gBFD_RELOC_FRV_GOTTLSDESC12
,

2950 
	gBFD_RELOC_FRV_GOTTLSDESCHI
,

2951 
	gBFD_RELOC_FRV_GOTTLSDESCLO
,

2952 
	gBFD_RELOC_FRV_TLSMOFF12
,

2953 
	gBFD_RELOC_FRV_TLSMOFFHI
,

2954 
	gBFD_RELOC_FRV_TLSMOFFLO
,

2955 
	gBFD_RELOC_FRV_GOTTLSOFF12
,

2956 
	gBFD_RELOC_FRV_GOTTLSOFFHI
,

2957 
	gBFD_RELOC_FRV_GOTTLSOFFLO
,

2958 
	gBFD_RELOC_FRV_TLSOFF
,

2959 
	gBFD_RELOC_FRV_TLSDESC_RELAX
,

2960 
	gBFD_RELOC_FRV_GETTLSOFF_RELAX
,

2961 
	gBFD_RELOC_FRV_TLSOFF_RELAX
,

2962 
	gBFD_RELOC_FRV_TLSMOFF
,

2966 
	gBFD_RELOC_MN10300_GOTOFF24
,

2970 
	gBFD_RELOC_MN10300_GOT32
,

2974 
	gBFD_RELOC_MN10300_GOT24
,

2978 
	gBFD_RELOC_MN10300_GOT16
,

2981 
	gBFD_RELOC_MN10300_COPY
,

2984 
	gBFD_RELOC_MN10300_GLOB_DAT
,

2987 
	gBFD_RELOC_MN10300_JMP_SLOT
,

2990 
	gBFD_RELOC_MN10300_RELATIVE
,

2995 
	gBFD_RELOC_MN10300_SYM_DIFF
,

3000 
	gBFD_RELOC_MN10300_ALIGN
,

3003 
	gBFD_RELOC_MN10300_TLS_GD
,

3004 
	gBFD_RELOC_MN10300_TLS_LD
,

3005 
	gBFD_RELOC_MN10300_TLS_LDO
,

3006 
	gBFD_RELOC_MN10300_TLS_GOTIE
,

3007 
	gBFD_RELOC_MN10300_TLS_IE
,

3008 
	gBFD_RELOC_MN10300_TLS_LE
,

3009 
	gBFD_RELOC_MN10300_TLS_DTPMOD
,

3010 
	gBFD_RELOC_MN10300_TLS_DTPOFF
,

3011 
	gBFD_RELOC_MN10300_TLS_TPOFF
,

3015 
	gBFD_RELOC_MN10300_32_PCREL
,

3019 
	gBFD_RELOC_MN10300_16_PCREL
,

3023 
	gBFD_RELOC_386_GOT32
,

3024 
	gBFD_RELOC_386_PLT32
,

3025 
	gBFD_RELOC_386_COPY
,

3026 
	gBFD_RELOC_386_GLOB_DAT
,

3027 
	gBFD_RELOC_386_JUMP_SLOT
,

3028 
	gBFD_RELOC_386_RELATIVE
,

3029 
	gBFD_RELOC_386_GOTOFF
,

3030 
	gBFD_RELOC_386_GOTPC
,

3031 
	gBFD_RELOC_386_TLS_TPOFF
,

3032 
	gBFD_RELOC_386_TLS_IE
,

3033 
	gBFD_RELOC_386_TLS_GOTIE
,

3034 
	gBFD_RELOC_386_TLS_LE
,

3035 
	gBFD_RELOC_386_TLS_GD
,

3036 
	gBFD_RELOC_386_TLS_LDM
,

3037 
	gBFD_RELOC_386_TLS_LDO_32
,

3038 
	gBFD_RELOC_386_TLS_IE_32
,

3039 
	gBFD_RELOC_386_TLS_LE_32
,

3040 
	gBFD_RELOC_386_TLS_DTPMOD32
,

3041 
	gBFD_RELOC_386_TLS_DTPOFF32
,

3042 
	gBFD_RELOC_386_TLS_TPOFF32
,

3043 
	gBFD_RELOC_386_TLS_GOTDESC
,

3044 
	gBFD_RELOC_386_TLS_DESC_CALL
,

3045 
	gBFD_RELOC_386_TLS_DESC
,

3046 
	gBFD_RELOC_386_IRELATIVE
,

3049 
	gBFD_RELOC_X86_64_GOT32
,

3050 
	gBFD_RELOC_X86_64_PLT32
,

3051 
	gBFD_RELOC_X86_64_COPY
,

3052 
	gBFD_RELOC_X86_64_GLOB_DAT
,

3053 
	gBFD_RELOC_X86_64_JUMP_SLOT
,

3054 
	gBFD_RELOC_X86_64_RELATIVE
,

3055 
	gBFD_RELOC_X86_64_GOTPCREL
,

3056 
	gBFD_RELOC_X86_64_32S
,

3057 
	gBFD_RELOC_X86_64_DTPMOD64
,

3058 
	gBFD_RELOC_X86_64_DTPOFF64
,

3059 
	gBFD_RELOC_X86_64_TPOFF64
,

3060 
	gBFD_RELOC_X86_64_TLSGD
,

3061 
	gBFD_RELOC_X86_64_TLSLD
,

3062 
	gBFD_RELOC_X86_64_DTPOFF32
,

3063 
	gBFD_RELOC_X86_64_GOTTPOFF
,

3064 
	gBFD_RELOC_X86_64_TPOFF32
,

3065 
	gBFD_RELOC_X86_64_GOTOFF64
,

3066 
	gBFD_RELOC_X86_64_GOTPC32
,

3067 
	gBFD_RELOC_X86_64_GOT64
,

3068 
	gBFD_RELOC_X86_64_GOTPCREL64
,

3069 
	gBFD_RELOC_X86_64_GOTPC64
,

3070 
	gBFD_RELOC_X86_64_GOTPLT64
,

3071 
	gBFD_RELOC_X86_64_PLTOFF64
,

3072 
	gBFD_RELOC_X86_64_GOTPC32_TLSDESC
,

3073 
	gBFD_RELOC_X86_64_TLSDESC_CALL
,

3074 
	gBFD_RELOC_X86_64_TLSDESC
,

3075 
	gBFD_RELOC_X86_64_IRELATIVE
,

3078 
	gBFD_RELOC_NS32K_IMM_8
,

3079 
	gBFD_RELOC_NS32K_IMM_16
,

3080 
	gBFD_RELOC_NS32K_IMM_32
,

3081 
	gBFD_RELOC_NS32K_IMM_8_PCREL
,

3082 
	gBFD_RELOC_NS32K_IMM_16_PCREL
,

3083 
	gBFD_RELOC_NS32K_IMM_32_PCREL
,

3084 
	gBFD_RELOC_NS32K_DISP_8
,

3085 
	gBFD_RELOC_NS32K_DISP_16
,

3086 
	gBFD_RELOC_NS32K_DISP_32
,

3087 
	gBFD_RELOC_NS32K_DISP_8_PCREL
,

3088 
	gBFD_RELOC_NS32K_DISP_16_PCREL
,

3089 
	gBFD_RELOC_NS32K_DISP_32_PCREL
,

3092 
	gBFD_RELOC_PDP11_DISP_8_PCREL
,

3093 
	gBFD_RELOC_PDP11_DISP_6_PCREL
,

3096 
	gBFD_RELOC_PJ_CODE_HI16
,

3097 
	gBFD_RELOC_PJ_CODE_LO16
,

3098 
	gBFD_RELOC_PJ_CODE_DIR16
,

3099 
	gBFD_RELOC_PJ_CODE_DIR32
,

3100 
	gBFD_RELOC_PJ_CODE_REL16
,

3101 
	gBFD_RELOC_PJ_CODE_REL32
,

3104 
	gBFD_RELOC_PPC_B26
,

3105 
	gBFD_RELOC_PPC_BA26
,

3106 
	gBFD_RELOC_PPC_TOC16
,

3107 
	gBFD_RELOC_PPC_B16
,

3108 
	gBFD_RELOC_PPC_B16_BRTAKEN
,

3109 
	gBFD_RELOC_PPC_B16_BRNTAKEN
,

3110 
	gBFD_RELOC_PPC_BA16
,

3111 
	gBFD_RELOC_PPC_BA16_BRTAKEN
,

3112 
	gBFD_RELOC_PPC_BA16_BRNTAKEN
,

3113 
	gBFD_RELOC_PPC_COPY
,

3114 
	gBFD_RELOC_PPC_GLOB_DAT
,

3115 
	gBFD_RELOC_PPC_JMP_SLOT
,

3116 
	gBFD_RELOC_PPC_RELATIVE
,

3117 
	gBFD_RELOC_PPC_LOCAL24PC
,

3118 
	gBFD_RELOC_PPC_EMB_NADDR32
,

3119 
	gBFD_RELOC_PPC_EMB_NADDR16
,

3120 
	gBFD_RELOC_PPC_EMB_NADDR16_LO
,

3121 
	gBFD_RELOC_PPC_EMB_NADDR16_HI
,

3122 
	gBFD_RELOC_PPC_EMB_NADDR16_HA
,

3123 
	gBFD_RELOC_PPC_EMB_SDAI16
,

3124 
	gBFD_RELOC_PPC_EMB_SDA2I16
,

3125 
	gBFD_RELOC_PPC_EMB_SDA2REL
,

3126 
	gBFD_RELOC_PPC_EMB_SDA21
,

3127 
	gBFD_RELOC_PPC_EMB_MRKREF
,

3128 
	gBFD_RELOC_PPC_EMB_RELSEC16
,

3129 
	gBFD_RELOC_PPC_EMB_RELST_LO
,

3130 
	gBFD_RELOC_PPC_EMB_RELST_HI
,

3131 
	gBFD_RELOC_PPC_EMB_RELST_HA
,

3132 
	gBFD_RELOC_PPC_EMB_BIT_FLD
,

3133 
	gBFD_RELOC_PPC_EMB_RELSDA
,

3134 
	gBFD_RELOC_PPC_VLE_REL8
,

3135 
	gBFD_RELOC_PPC_VLE_REL15
,

3136 
	gBFD_RELOC_PPC_VLE_REL24
,

3137 
	gBFD_RELOC_PPC_VLE_LO16A
,

3138 
	gBFD_RELOC_PPC_VLE_LO16D
,

3139 
	gBFD_RELOC_PPC_VLE_HI16A
,

3140 
	gBFD_RELOC_PPC_VLE_HI16D
,

3141 
	gBFD_RELOC_PPC_VLE_HA16A
,

3142 
	gBFD_RELOC_PPC_VLE_HA16D
,

3143 
	gBFD_RELOC_PPC_VLE_SDA21
,

3144 
	gBFD_RELOC_PPC_VLE_SDA21_LO
,

3145 
	gBFD_RELOC_PPC_VLE_SDAREL_LO16A
,

3146 
	gBFD_RELOC_PPC_VLE_SDAREL_LO16D
,

3147 
	gBFD_RELOC_PPC_VLE_SDAREL_HI16A
,

3148 
	gBFD_RELOC_PPC_VLE_SDAREL_HI16D
,

3149 
	gBFD_RELOC_PPC_VLE_SDAREL_HA16A
,

3150 
	gBFD_RELOC_PPC_VLE_SDAREL_HA16D
,

3151 
	gBFD_RELOC_PPC64_HIGHER
,

3152 
	gBFD_RELOC_PPC64_HIGHER_S
,

3153 
	gBFD_RELOC_PPC64_HIGHEST
,

3154 
	gBFD_RELOC_PPC64_HIGHEST_S
,

3155 
	gBFD_RELOC_PPC64_TOC16_LO
,

3156 
	gBFD_RELOC_PPC64_TOC16_HI
,

3157 
	gBFD_RELOC_PPC64_TOC16_HA
,

3158 
	gBFD_RELOC_PPC64_TOC
,

3159 
	gBFD_RELOC_PPC64_PLTGOT16
,

3160 
	gBFD_RELOC_PPC64_PLTGOT16_LO
,

3161 
	gBFD_RELOC_PPC64_PLTGOT16_HI
,

3162 
	gBFD_RELOC_PPC64_PLTGOT16_HA
,

3163 
	gBFD_RELOC_PPC64_ADDR16_DS
,

3164 
	gBFD_RELOC_PPC64_ADDR16_LO_DS
,

3165 
	gBFD_RELOC_PPC64_GOT16_DS
,

3166 
	gBFD_RELOC_PPC64_GOT16_LO_DS
,

3167 
	gBFD_RELOC_PPC64_PLT16_LO_DS
,

3168 
	gBFD_RELOC_PPC64_SECTOFF_DS
,

3169 
	gBFD_RELOC_PPC64_SECTOFF_LO_DS
,

3170 
	gBFD_RELOC_PPC64_TOC16_DS
,

3171 
	gBFD_RELOC_PPC64_TOC16_LO_DS
,

3172 
	gBFD_RELOC_PPC64_PLTGOT16_DS
,

3173 
	gBFD_RELOC_PPC64_PLTGOT16_LO_DS
,

3176 
	gBFD_RELOC_PPC_TLS
,

3177 
	gBFD_RELOC_PPC_TLSGD
,

3178 
	gBFD_RELOC_PPC_TLSLD
,

3179 
	gBFD_RELOC_PPC_DTPMOD
,

3180 
	gBFD_RELOC_PPC_TPREL16
,

3181 
	gBFD_RELOC_PPC_TPREL16_LO
,

3182 
	gBFD_RELOC_PPC_TPREL16_HI
,

3183 
	gBFD_RELOC_PPC_TPREL16_HA
,

3184 
	gBFD_RELOC_PPC_TPREL
,

3185 
	gBFD_RELOC_PPC_DTPREL16
,

3186 
	gBFD_RELOC_PPC_DTPREL16_LO
,

3187 
	gBFD_RELOC_PPC_DTPREL16_HI
,

3188 
	gBFD_RELOC_PPC_DTPREL16_HA
,

3189 
	gBFD_RELOC_PPC_DTPREL
,

3190 
	gBFD_RELOC_PPC_GOT_TLSGD16
,

3191 
	gBFD_RELOC_PPC_GOT_TLSGD16_LO
,

3192 
	gBFD_RELOC_PPC_GOT_TLSGD16_HI
,

3193 
	gBFD_RELOC_PPC_GOT_TLSGD16_HA
,

3194 
	gBFD_RELOC_PPC_GOT_TLSLD16
,

3195 
	gBFD_RELOC_PPC_GOT_TLSLD16_LO
,

3196 
	gBFD_RELOC_PPC_GOT_TLSLD16_HI
,

3197 
	gBFD_RELOC_PPC_GOT_TLSLD16_HA
,

3198 
	gBFD_RELOC_PPC_GOT_TPREL16
,

3199 
	gBFD_RELOC_PPC_GOT_TPREL16_LO
,

3200 
	gBFD_RELOC_PPC_GOT_TPREL16_HI
,

3201 
	gBFD_RELOC_PPC_GOT_TPREL16_HA
,

3202 
	gBFD_RELOC_PPC_GOT_DTPREL16
,

3203 
	gBFD_RELOC_PPC_GOT_DTPREL16_LO
,

3204 
	gBFD_RELOC_PPC_GOT_DTPREL16_HI
,

3205 
	gBFD_RELOC_PPC_GOT_DTPREL16_HA
,

3206 
	gBFD_RELOC_PPC64_TPREL16_DS
,

3207 
	gBFD_RELOC_PPC64_TPREL16_LO_DS
,

3208 
	gBFD_RELOC_PPC64_TPREL16_HIGHER
,

3209 
	gBFD_RELOC_PPC64_TPREL16_HIGHERA
,

3210 
	gBFD_RELOC_PPC64_TPREL16_HIGHEST
,

3211 
	gBFD_RELOC_PPC64_TPREL16_HIGHESTA
,

3212 
	gBFD_RELOC_PPC64_DTPREL16_DS
,

3213 
	gBFD_RELOC_PPC64_DTPREL16_LO_DS
,

3214 
	gBFD_RELOC_PPC64_DTPREL16_HIGHER
,

3215 
	gBFD_RELOC_PPC64_DTPREL16_HIGHERA
,

3216 
	gBFD_RELOC_PPC64_DTPREL16_HIGHEST
,

3217 
	gBFD_RELOC_PPC64_DTPREL16_HIGHESTA
,

3220 
	gBFD_RELOC_I370_D12
,

3225 
	gBFD_RELOC_CTOR
,

3229 
	gBFD_RELOC_ARM_PCREL_BRANCH
,

3234 
	gBFD_RELOC_ARM_PCREL_BLX
,

3239 
	gBFD_RELOC_THUMB_PCREL_BLX
,

3242 
	gBFD_RELOC_ARM_PCREL_CALL
,

3245 
	gBFD_RELOC_ARM_PCREL_JUMP
,

3252 
	gBFD_RELOC_THUMB_PCREL_BRANCH7
,

3253 
	gBFD_RELOC_THUMB_PCREL_BRANCH9
,

3254 
	gBFD_RELOC_THUMB_PCREL_BRANCH12
,

3255 
	gBFD_RELOC_THUMB_PCREL_BRANCH20
,

3256 
	gBFD_RELOC_THUMB_PCREL_BRANCH23
,

3257 
	gBFD_RELOC_THUMB_PCREL_BRANCH25
,

3260 
	gBFD_RELOC_ARM_OFFSET_IMM
,

3263 
	gBFD_RELOC_ARM_THUMB_OFFSET
,

3267 
	gBFD_RELOC_ARM_TARGET1
,

3270 
	gBFD_RELOC_ARM_ROSEGREL32
,

3273 
	gBFD_RELOC_ARM_SBREL32
,

3278 
	gBFD_RELOC_ARM_TARGET2
,

3281 
	gBFD_RELOC_ARM_PREL31
,

3284 
	gBFD_RELOC_ARM_MOVW
,

3285 
	gBFD_RELOC_ARM_MOVT
,

3286 
	gBFD_RELOC_ARM_MOVW_PCREL
,

3287 
	gBFD_RELOC_ARM_MOVT_PCREL
,

3288 
	gBFD_RELOC_ARM_THUMB_MOVW
,

3289 
	gBFD_RELOC_ARM_THUMB_MOVT
,

3290 
	gBFD_RELOC_ARM_THUMB_MOVW_PCREL
,

3291 
	gBFD_RELOC_ARM_THUMB_MOVT_PCREL
,

3294 
	gBFD_RELOC_ARM_JUMP_SLOT
,

3295 
	gBFD_RELOC_ARM_GLOB_DAT
,

3296 
	gBFD_RELOC_ARM_GOT32
,

3297 
	gBFD_RELOC_ARM_PLT32
,

3298 
	gBFD_RELOC_ARM_RELATIVE
,

3299 
	gBFD_RELOC_ARM_GOTOFF
,

3300 
	gBFD_RELOC_ARM_GOTPC
,

3301 
	gBFD_RELOC_ARM_GOT_PREL
,

3304 
	gBFD_RELOC_ARM_TLS_GD32
,

3305 
	gBFD_RELOC_ARM_TLS_LDO32
,

3306 
	gBFD_RELOC_ARM_TLS_LDM32
,

3307 
	gBFD_RELOC_ARM_TLS_DTPOFF32
,

3308 
	gBFD_RELOC_ARM_TLS_DTPMOD32
,

3309 
	gBFD_RELOC_ARM_TLS_TPOFF32
,

3310 
	gBFD_RELOC_ARM_TLS_IE32
,

3311 
	gBFD_RELOC_ARM_TLS_LE32
,

3312 
	gBFD_RELOC_ARM_TLS_GOTDESC
,

3313 
	gBFD_RELOC_ARM_TLS_CALL
,

3314 
	gBFD_RELOC_ARM_THM_TLS_CALL
,

3315 
	gBFD_RELOC_ARM_TLS_DESCSEQ
,

3316 
	gBFD_RELOC_ARM_THM_TLS_DESCSEQ
,

3317 
	gBFD_RELOC_ARM_TLS_DESC
,

3320 
	gBFD_RELOC_ARM_ALU_PC_G0_NC
,

3321 
	gBFD_RELOC_ARM_ALU_PC_G0
,

3322 
	gBFD_RELOC_ARM_ALU_PC_G1_NC
,

3323 
	gBFD_RELOC_ARM_ALU_PC_G1
,

3324 
	gBFD_RELOC_ARM_ALU_PC_G2
,

3325 
	gBFD_RELOC_ARM_LDR_PC_G0
,

3326 
	gBFD_RELOC_ARM_LDR_PC_G1
,

3327 
	gBFD_RELOC_ARM_LDR_PC_G2
,

3328 
	gBFD_RELOC_ARM_LDRS_PC_G0
,

3329 
	gBFD_RELOC_ARM_LDRS_PC_G1
,

3330 
	gBFD_RELOC_ARM_LDRS_PC_G2
,

3331 
	gBFD_RELOC_ARM_LDC_PC_G0
,

3332 
	gBFD_RELOC_ARM_LDC_PC_G1
,

3333 
	gBFD_RELOC_ARM_LDC_PC_G2
,

3334 
	gBFD_RELOC_ARM_ALU_SB_G0_NC
,

3335 
	gBFD_RELOC_ARM_ALU_SB_G0
,

3336 
	gBFD_RELOC_ARM_ALU_SB_G1_NC
,

3337 
	gBFD_RELOC_ARM_ALU_SB_G1
,

3338 
	gBFD_RELOC_ARM_ALU_SB_G2
,

3339 
	gBFD_RELOC_ARM_LDR_SB_G0
,

3340 
	gBFD_RELOC_ARM_LDR_SB_G1
,

3341 
	gBFD_RELOC_ARM_LDR_SB_G2
,

3342 
	gBFD_RELOC_ARM_LDRS_SB_G0
,

3343 
	gBFD_RELOC_ARM_LDRS_SB_G1
,

3344 
	gBFD_RELOC_ARM_LDRS_SB_G2
,

3345 
	gBFD_RELOC_ARM_LDC_SB_G0
,

3346 
	gBFD_RELOC_ARM_LDC_SB_G1
,

3347 
	gBFD_RELOC_ARM_LDC_SB_G2
,

3350 
	gBFD_RELOC_ARM_V4BX
,

3353 
	gBFD_RELOC_ARM_IRELATIVE
,

3357 
	gBFD_RELOC_ARM_IMMEDIATE
,

3358 
	gBFD_RELOC_ARM_ADRL_IMMEDIATE
,

3359 
	gBFD_RELOC_ARM_T32_IMMEDIATE
,

3360 
	gBFD_RELOC_ARM_T32_ADD_IMM
,

3361 
	gBFD_RELOC_ARM_T32_IMM12
,

3362 
	gBFD_RELOC_ARM_T32_ADD_PC12
,

3363 
	gBFD_RELOC_ARM_SHIFT_IMM
,

3364 
	gBFD_RELOC_ARM_SMC
,

3365 
	gBFD_RELOC_ARM_HVC
,

3366 
	gBFD_RELOC_ARM_SWI
,

3367 
	gBFD_RELOC_ARM_MULTI
,

3368 
	gBFD_RELOC_ARM_CP_OFF_IMM
,

3369 
	gBFD_RELOC_ARM_CP_OFF_IMM_S2
,

3370 
	gBFD_RELOC_ARM_T32_CP_OFF_IMM
,

3371 
	gBFD_RELOC_ARM_T32_CP_OFF_IMM_S2
,

3372 
	gBFD_RELOC_ARM_ADR_IMM
,

3373 
	gBFD_RELOC_ARM_LDR_IMM
,

3374 
	gBFD_RELOC_ARM_LITERAL
,

3375 
	gBFD_RELOC_ARM_IN_POOL
,

3376 
	gBFD_RELOC_ARM_OFFSET_IMM8
,

3377 
	gBFD_RELOC_ARM_T32_OFFSET_U8
,

3378 
	gBFD_RELOC_ARM_T32_OFFSET_IMM
,

3379 
	gBFD_RELOC_ARM_HWLITERAL
,

3380 
	gBFD_RELOC_ARM_THUMB_ADD
,

3381 
	gBFD_RELOC_ARM_THUMB_IMM
,

3382 
	gBFD_RELOC_ARM_THUMB_SHIFT
,

3385 
	gBFD_RELOC_SH_PCDISP8BY2
,

3386 
	gBFD_RELOC_SH_PCDISP12BY2
,

3387 
	gBFD_RELOC_SH_IMM3
,

3388 
	gBFD_RELOC_SH_IMM3U
,

3389 
	gBFD_RELOC_SH_DISP12
,

3390 
	gBFD_RELOC_SH_DISP12BY2
,

3391 
	gBFD_RELOC_SH_DISP12BY4
,

3392 
	gBFD_RELOC_SH_DISP12BY8
,

3393 
	gBFD_RELOC_SH_DISP20
,

3394 
	gBFD_RELOC_SH_DISP20BY8
,

3395 
	gBFD_RELOC_SH_IMM4
,

3396 
	gBFD_RELOC_SH_IMM4BY2
,

3397 
	gBFD_RELOC_SH_IMM4BY4
,

3398 
	gBFD_RELOC_SH_IMM8
,

3399 
	gBFD_RELOC_SH_IMM8BY2
,

3400 
	gBFD_RELOC_SH_IMM8BY4
,

3401 
	gBFD_RELOC_SH_PCRELIMM8BY2
,

3402 
	gBFD_RELOC_SH_PCRELIMM8BY4
,

3403 
	gBFD_RELOC_SH_SWITCH16
,

3404 
	gBFD_RELOC_SH_SWITCH32
,

3405 
	gBFD_RELOC_SH_USES
,

3406 
	gBFD_RELOC_SH_COUNT
,

3407 
	gBFD_RELOC_SH_ALIGN
,

3408 
	gBFD_RELOC_SH_CODE
,

3409 
	gBFD_RELOC_SH_DATA
,

3410 
	gBFD_RELOC_SH_LABEL
,

3411 
	gBFD_RELOC_SH_LOOP_START
,

3412 
	gBFD_RELOC_SH_LOOP_END
,

3413 
	gBFD_RELOC_SH_COPY
,

3414 
	gBFD_RELOC_SH_GLOB_DAT
,

3415 
	gBFD_RELOC_SH_JMP_SLOT
,

3416 
	gBFD_RELOC_SH_RELATIVE
,

3417 
	gBFD_RELOC_SH_GOTPC
,

3418 
	gBFD_RELOC_SH_GOT_LOW16
,

3419 
	gBFD_RELOC_SH_GOT_MEDLOW16
,

3420 
	gBFD_RELOC_SH_GOT_MEDHI16
,

3421 
	gBFD_RELOC_SH_GOT_HI16
,

3422 
	gBFD_RELOC_SH_GOTPLT_LOW16
,

3423 
	gBFD_RELOC_SH_GOTPLT_MEDLOW16
,

3424 
	gBFD_RELOC_SH_GOTPLT_MEDHI16
,

3425 
	gBFD_RELOC_SH_GOTPLT_HI16
,

3426 
	gBFD_RELOC_SH_PLT_LOW16
,

3427 
	gBFD_RELOC_SH_PLT_MEDLOW16
,

3428 
	gBFD_RELOC_SH_PLT_MEDHI16
,

3429 
	gBFD_RELOC_SH_PLT_HI16
,

3430 
	gBFD_RELOC_SH_GOTOFF_LOW16
,

3431 
	gBFD_RELOC_SH_GOTOFF_MEDLOW16
,

3432 
	gBFD_RELOC_SH_GOTOFF_MEDHI16
,

3433 
	gBFD_RELOC_SH_GOTOFF_HI16
,

3434 
	gBFD_RELOC_SH_GOTPC_LOW16
,

3435 
	gBFD_RELOC_SH_GOTPC_MEDLOW16
,

3436 
	gBFD_RELOC_SH_GOTPC_MEDHI16
,

3437 
	gBFD_RELOC_SH_GOTPC_HI16
,

3438 
	gBFD_RELOC_SH_COPY64
,

3439 
	gBFD_RELOC_SH_GLOB_DAT64
,

3440 
	gBFD_RELOC_SH_JMP_SLOT64
,

3441 
	gBFD_RELOC_SH_RELATIVE64
,

3442 
	gBFD_RELOC_SH_GOT10BY4
,

3443 
	gBFD_RELOC_SH_GOT10BY8
,

3444 
	gBFD_RELOC_SH_GOTPLT10BY4
,

3445 
	gBFD_RELOC_SH_GOTPLT10BY8
,

3446 
	gBFD_RELOC_SH_GOTPLT32
,

3447 
	gBFD_RELOC_SH_SHMEDIA_CODE
,

3448 
	gBFD_RELOC_SH_IMMU5
,

3449 
	gBFD_RELOC_SH_IMMS6
,

3450 
	gBFD_RELOC_SH_IMMS6BY32
,

3451 
	gBFD_RELOC_SH_IMMU6
,

3452 
	gBFD_RELOC_SH_IMMS10
,

3453 
	gBFD_RELOC_SH_IMMS10BY2
,

3454 
	gBFD_RELOC_SH_IMMS10BY4
,

3455 
	gBFD_RELOC_SH_IMMS10BY8
,

3456 
	gBFD_RELOC_SH_IMMS16
,

3457 
	gBFD_RELOC_SH_IMMU16
,

3458 
	gBFD_RELOC_SH_IMM_LOW16
,

3459 
	gBFD_RELOC_SH_IMM_LOW16_PCREL
,

3460 
	gBFD_RELOC_SH_IMM_MEDLOW16
,

3461 
	gBFD_RELOC_SH_IMM_MEDLOW16_PCREL
,

3462 
	gBFD_RELOC_SH_IMM_MEDHI16
,

3463 
	gBFD_RELOC_SH_IMM_MEDHI16_PCREL
,

3464 
	gBFD_RELOC_SH_IMM_HI16
,

3465 
	gBFD_RELOC_SH_IMM_HI16_PCREL
,

3466 
	gBFD_RELOC_SH_PT_16
,

3467 
	gBFD_RELOC_SH_TLS_GD_32
,

3468 
	gBFD_RELOC_SH_TLS_LD_32
,

3469 
	gBFD_RELOC_SH_TLS_LDO_32
,

3470 
	gBFD_RELOC_SH_TLS_IE_32
,

3471 
	gBFD_RELOC_SH_TLS_LE_32
,

3472 
	gBFD_RELOC_SH_TLS_DTPMOD32
,

3473 
	gBFD_RELOC_SH_TLS_DTPOFF32
,

3474 
	gBFD_RELOC_SH_TLS_TPOFF32
,

3475 
	gBFD_RELOC_SH_GOT20
,

3476 
	gBFD_RELOC_SH_GOTOFF20
,

3477 
	gBFD_RELOC_SH_GOTFUNCDESC
,

3478 
	gBFD_RELOC_SH_GOTFUNCDESC20
,

3479 
	gBFD_RELOC_SH_GOTOFFFUNCDESC
,

3480 
	gBFD_RELOC_SH_GOTOFFFUNCDESC20
,

3481 
	gBFD_RELOC_SH_FUNCDESC
,

3487 
	gBFD_RELOC_ARC_B22_PCREL
,

3492 
	gBFD_RELOC_ARC_B26
,

3495 
	gBFD_RELOC_BFIN_16_IMM
,

3498 
	gBFD_RELOC_BFIN_16_HIGH
,

3501 
	gBFD_RELOC_BFIN_4_PCREL
,

3504 
	gBFD_RELOC_BFIN_5_PCREL
,

3507 
	gBFD_RELOC_BFIN_16_LOW
,

3510 
	gBFD_RELOC_BFIN_10_PCREL
,

3513 
	gBFD_RELOC_BFIN_11_PCREL
,

3516 
	gBFD_RELOC_BFIN_12_PCREL_JUMP
,

3519 
	gBFD_RELOC_BFIN_12_PCREL_JUMP_S
,

3522 
	gBFD_RELOC_BFIN_24_PCREL_CALL_X
,

3525 
	gBFD_RELOC_BFIN_24_PCREL_JUMP_L
,

3528 
	gBFD_RELOC_BFIN_GOT17M4
,

3529 
	gBFD_RELOC_BFIN_GOTHI
,

3530 
	gBFD_RELOC_BFIN_GOTLO
,

3531 
	gBFD_RELOC_BFIN_FUNCDESC
,

3532 
	gBFD_RELOC_BFIN_FUNCDESC_GOT17M4
,

3533 
	gBFD_RELOC_BFIN_FUNCDESC_GOTHI
,

3534 
	gBFD_RELOC_BFIN_FUNCDESC_GOTLO
,

3535 
	gBFD_RELOC_BFIN_FUNCDESC_VALUE
,

3536 
	gBFD_RELOC_BFIN_FUNCDESC_GOTOFF17M4
,

3537 
	gBFD_RELOC_BFIN_FUNCDESC_GOTOFFHI
,

3538 
	gBFD_RELOC_BFIN_FUNCDESC_GOTOFFLO
,

3539 
	gBFD_RELOC_BFIN_GOTOFF17M4
,

3540 
	gBFD_RELOC_BFIN_GOTOFFHI
,

3541 
	gBFD_RELOC_BFIN_GOTOFFLO
,

3544 
	gBFD_RELOC_BFIN_GOT
,

3547 
	gBFD_RELOC_BFIN_PLTPC
,

3550 
	gBFD_ARELOC_BFIN_PUSH
,

3553 
	gBFD_ARELOC_BFIN_CONST
,

3556 
	gBFD_ARELOC_BFIN_ADD
,

3559 
	gBFD_ARELOC_BFIN_SUB
,

3562 
	gBFD_ARELOC_BFIN_MULT
,

3565 
	gBFD_ARELOC_BFIN_DIV
,

3568 
	gBFD_ARELOC_BFIN_MOD
,

3571 
	gBFD_ARELOC_BFIN_LSHIFT
,

3574 
	gBFD_ARELOC_BFIN_RSHIFT
,

3577 
	gBFD_ARELOC_BFIN_AND
,

3580 
	gBFD_ARELOC_BFIN_OR
,

3583 
	gBFD_ARELOC_BFIN_XOR
,

3586 
	gBFD_ARELOC_BFIN_LAND
,

3589 
	gBFD_ARELOC_BFIN_LOR
,

3592 
	gBFD_ARELOC_BFIN_LEN
,

3595 
	gBFD_ARELOC_BFIN_NEG
,

3598 
	gBFD_ARELOC_BFIN_COMP
,

3601 
	gBFD_ARELOC_BFIN_PAGE
,

3604 
	gBFD_ARELOC_BFIN_HWPAGE
,

3607 
	gBFD_ARELOC_BFIN_ADDR
,

3612 
	gBFD_RELOC_D10V_10_PCREL_R
,

3619 
	gBFD_RELOC_D10V_10_PCREL_L
,

3623 
	gBFD_RELOC_D10V_18
,

3627 
	gBFD_RELOC_D10V_18_PCREL
,

3631 
	gBFD_RELOC_D30V_6
,

3635 
	gBFD_RELOC_D30V_9_PCREL
,

3641 
	gBFD_RELOC_D30V_9_PCREL_R
,

3645 
	gBFD_RELOC_D30V_15
,

3649 
	gBFD_RELOC_D30V_15_PCREL
,

3655 
	gBFD_RELOC_D30V_15_PCREL_R
,

3659 
	gBFD_RELOC_D30V_21
,

3663 
	gBFD_RELOC_D30V_21_PCREL
,

3669 
	gBFD_RELOC_D30V_21_PCREL_R
,

3672 
	gBFD_RELOC_D30V_32
,

3675 
	gBFD_RELOC_D30V_32_PCREL
,

3678 
	gBFD_RELOC_DLX_HI16_S
,

3681 
	gBFD_RELOC_DLX_LO16
,

3684 
	gBFD_RELOC_DLX_JMP26
,

3687 
	gBFD_RELOC_M32C_HI8
,

3688 
	gBFD_RELOC_M32C_RL_JUMP
,

3689 
	gBFD_RELOC_M32C_RL_1ADDR
,

3690 
	gBFD_RELOC_M32C_RL_2ADDR
,

3694 
	gBFD_RELOC_M32R_24
,

3697 
	gBFD_RELOC_M32R_10_PCREL
,

3700 
	gBFD_RELOC_M32R_18_PCREL
,

3703 
	gBFD_RELOC_M32R_26_PCREL
,

3707 
	gBFD_RELOC_M32R_HI16_ULO
,

3711 
	gBFD_RELOC_M32R_HI16_SLO
,

3714 
	gBFD_RELOC_M32R_LO16
,

3718 
	gBFD_RELOC_M32R_SDA16
,

3721 
	gBFD_RELOC_M32R_GOT24
,

3722 
	gBFD_RELOC_M32R_26_PLTREL
,

3723 
	gBFD_RELOC_M32R_COPY
,

3724 
	gBFD_RELOC_M32R_GLOB_DAT
,

3725 
	gBFD_RELOC_M32R_JMP_SLOT
,

3726 
	gBFD_RELOC_M32R_RELATIVE
,

3727 
	gBFD_RELOC_M32R_GOTOFF
,

3728 
	gBFD_RELOC_M32R_GOTOFF_HI_ULO
,

3729 
	gBFD_RELOC_M32R_GOTOFF_HI_SLO
,

3730 
	gBFD_RELOC_M32R_GOTOFF_LO
,

3731 
	gBFD_RELOC_M32R_GOTPC24
,

3732 
	gBFD_RELOC_M32R_GOT16_HI_ULO
,

3733 
	gBFD_RELOC_M32R_GOT16_HI_SLO
,

3734 
	gBFD_RELOC_M32R_GOT16_LO
,

3735 
	gBFD_RELOC_M32R_GOTPC_HI_ULO
,

3736 
	gBFD_RELOC_M32R_GOTPC_HI_SLO
,

3737 
	gBFD_RELOC_M32R_GOTPC_LO
,

3740 
	gBFD_RELOC_V850_9_PCREL
,

3743 
	gBFD_RELOC_V850_22_PCREL
,

3746 
	gBFD_RELOC_V850_SDA_16_16_OFFSET
,

3750 
	gBFD_RELOC_V850_SDA_15_16_OFFSET
,

3753 
	gBFD_RELOC_V850_ZDA_16_16_OFFSET
,

3757 
	gBFD_RELOC_V850_ZDA_15_16_OFFSET
,

3761 
	gBFD_RELOC_V850_TDA_6_8_OFFSET
,

3765 
	gBFD_RELOC_V850_TDA_7_8_OFFSET
,

3768 
	gBFD_RELOC_V850_TDA_7_7_OFFSET
,

3771 
	gBFD_RELOC_V850_TDA_16_16_OFFSET
,

3775 
	gBFD_RELOC_V850_TDA_4_5_OFFSET
,

3778 
	gBFD_RELOC_V850_TDA_4_4_OFFSET
,

3782 
	gBFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET
,

3786 
	gBFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET
,

3789 
	gBFD_RELOC_V850_CALLT_6_7_OFFSET
,

3792 
	gBFD_RELOC_V850_CALLT_16_16_OFFSET
,

3795 
	gBFD_RELOC_V850_LONGCALL
,

3798 
	gBFD_RELOC_V850_LONGJUMP
,

3801 
	gBFD_RELOC_V850_ALIGN
,

3805 
	gBFD_RELOC_V850_LO16_SPLIT_OFFSET
,

3808 
	gBFD_RELOC_V850_16_PCREL
,

3811 
	gBFD_RELOC_V850_17_PCREL
,

3814 
	gBFD_RELOC_V850_23
,

3817 
	gBFD_RELOC_V850_32_PCREL
,

3820 
	gBFD_RELOC_V850_32_ABS
,

3823 
	gBFD_RELOC_V850_16_SPLIT_OFFSET
,

3826 
	gBFD_RELOC_V850_16_S1
,

3829 
	gBFD_RELOC_V850_LO16_S1
,

3832 
	gBFD_RELOC_V850_CALLT_15_16_OFFSET
,

3835 
	gBFD_RELOC_V850_32_GOTPCREL
,

3838 
	gBFD_RELOC_V850_16_GOT
,

3841 
	gBFD_RELOC_V850_32_GOT
,

3844 
	gBFD_RELOC_V850_22_PLT_PCREL
,

3847 
	gBFD_RELOC_V850_32_PLT_PCREL
,

3850 
	gBFD_RELOC_V850_COPY
,

3853 
	gBFD_RELOC_V850_GLOB_DAT
,

3856 
	gBFD_RELOC_V850_JMP_SLOT
,

3859 
	gBFD_RELOC_V850_RELATIVE
,

3862 
	gBFD_RELOC_V850_16_GOTOFF
,

3865 
	gBFD_RELOC_V850_32_GOTOFF
,

3868 
	gBFD_RELOC_V850_CODE
,

3871 
	gBFD_RELOC_V850_DATA
,

3876 
	gBFD_RELOC_TIC30_LDP
,

3881 
	gBFD_RELOC_TIC54X_PARTLS7
,

3886 
	gBFD_RELOC_TIC54X_PARTMS9
,

3889 
	gBFD_RELOC_TIC54X_23
,

3894 
	gBFD_RELOC_TIC54X_16_OF_23
,

3899 
	gBFD_RELOC_TIC54X_MS7_OF_23
,

3902 
	gBFD_RELOC_C6000_PCR_S21
,

3903 
	gBFD_RELOC_C6000_PCR_S12
,

3904 
	gBFD_RELOC_C6000_PCR_S10
,

3905 
	gBFD_RELOC_C6000_PCR_S7
,

3906 
	gBFD_RELOC_C6000_ABS_S16
,

3907 
	gBFD_RELOC_C6000_ABS_L16
,

3908 
	gBFD_RELOC_C6000_ABS_H16
,

3909 
	gBFD_RELOC_C6000_SBR_U15_B
,

3910 
	gBFD_RELOC_C6000_SBR_U15_H
,

3911 
	gBFD_RELOC_C6000_SBR_U15_W
,

3912 
	gBFD_RELOC_C6000_SBR_S16
,

3913 
	gBFD_RELOC_C6000_SBR_L16_B
,

3914 
	gBFD_RELOC_C6000_SBR_L16_H
,

3915 
	gBFD_RELOC_C6000_SBR_L16_W
,

3916 
	gBFD_RELOC_C6000_SBR_H16_B
,

3917 
	gBFD_RELOC_C6000_SBR_H16_H
,

3918 
	gBFD_RELOC_C6000_SBR_H16_W
,

3919 
	gBFD_RELOC_C6000_SBR_GOT_U15_W
,

3920 
	gBFD_RELOC_C6000_SBR_GOT_L16_W
,

3921 
	gBFD_RELOC_C6000_SBR_GOT_H16_W
,

3922 
	gBFD_RELOC_C6000_DSBT_INDEX
,

3923 
	gBFD_RELOC_C6000_PREL31
,

3924 
	gBFD_RELOC_C6000_COPY
,

3925 
	gBFD_RELOC_C6000_JUMP_SLOT
,

3926 
	gBFD_RELOC_C6000_EHTYPE
,

3927 
	gBFD_RELOC_C6000_PCR_H16
,

3928 
	gBFD_RELOC_C6000_PCR_L16
,

3929 
	gBFD_RELOC_C6000_ALIGN
,

3930 
	gBFD_RELOC_C6000_FPHEAD
,

3931 
	gBFD_RELOC_C6000_NOCMP
,

3934 
	gBFD_RELOC_FR30_48
,

3938 
	gBFD_RELOC_FR30_20
,

3942 
	gBFD_RELOC_FR30_6_IN_4
,

3946 
	gBFD_RELOC_FR30_8_IN_8
,

3950 
	gBFD_RELOC_FR30_9_IN_8
,

3954 
	gBFD_RELOC_FR30_10_IN_8
,

3958 
	gBFD_RELOC_FR30_9_PCREL
,

3962 
	gBFD_RELOC_FR30_12_PCREL
,

3965 
	gBFD_RELOC_MCORE_PCREL_IMM8BY4
,

3966 
	gBFD_RELOC_MCORE_PCREL_IMM11BY2
,

3967 
	gBFD_RELOC_MCORE_PCREL_IMM4BY2
,

3968 
	gBFD_RELOC_MCORE_PCREL_32
,

3969 
	gBFD_RELOC_MCORE_PCREL_JSR_IMM11BY2
,

3970 
	gBFD_RELOC_MCORE_RVA
,

3973 
	gBFD_RELOC_MEP_8
,

3974 
	gBFD_RELOC_MEP_16
,

3975 
	gBFD_RELOC_MEP_32
,

3976 
	gBFD_RELOC_MEP_PCREL8A2
,

3977 
	gBFD_RELOC_MEP_PCREL12A2
,

3978 
	gBFD_RELOC_MEP_PCREL17A2
,

3979 
	gBFD_RELOC_MEP_PCREL24A2
,

3980 
	gBFD_RELOC_MEP_PCABS24A2
,

3981 
	gBFD_RELOC_MEP_LOW16
,

3982 
	gBFD_RELOC_MEP_HI16U
,

3983 
	gBFD_RELOC_MEP_HI16S
,

3984 
	gBFD_RELOC_MEP_GPREL
,

3985 
	gBFD_RELOC_MEP_TPREL
,

3986 
	gBFD_RELOC_MEP_TPREL7
,

3987 
	gBFD_RELOC_MEP_TPREL7A2
,

3988 
	gBFD_RELOC_MEP_TPREL7A4
,

3989 
	gBFD_RELOC_MEP_UIMM24
,

3990 
	gBFD_RELOC_MEP_ADDR24A4
,

3991 
	gBFD_RELOC_MEP_GNU_VTINHERIT
,

3992 
	gBFD_RELOC_MEP_GNU_VTENTRY
,

3996 
	gBFD_RELOC_MMIX_GETA
,

3997 
	gBFD_RELOC_MMIX_GETA_1
,

3998 
	gBFD_RELOC_MMIX_GETA_2
,

3999 
	gBFD_RELOC_MMIX_GETA_3
,

4002 
	gBFD_RELOC_MMIX_CBRANCH
,

4003 
	gBFD_RELOC_MMIX_CBRANCH_J
,

4004 
	gBFD_RELOC_MMIX_CBRANCH_1
,

4005 
	gBFD_RELOC_MMIX_CBRANCH_2
,

4006 
	gBFD_RELOC_MMIX_CBRANCH_3
,

4009 
	gBFD_RELOC_MMIX_PUSHJ
,

4010 
	gBFD_RELOC_MMIX_PUSHJ_1
,

4011 
	gBFD_RELOC_MMIX_PUSHJ_2
,

4012 
	gBFD_RELOC_MMIX_PUSHJ_3
,

4013 
	gBFD_RELOC_MMIX_PUSHJ_STUBBABLE
,

4016 
	gBFD_RELOC_MMIX_JMP
,

4017 
	gBFD_RELOC_MMIX_JMP_1
,

4018 
	gBFD_RELOC_MMIX_JMP_2
,

4019 
	gBFD_RELOC_MMIX_JMP_3
,

4023 
	gBFD_RELOC_MMIX_ADDR19
,

4026 
	gBFD_RELOC_MMIX_ADDR27
,

4030 
	gBFD_RELOC_MMIX_REG_OR_BYTE
,

4034 
	gBFD_RELOC_MMIX_REG
,

4038 
	gBFD_RELOC_MMIX_BASE_PLUS_OFFSET
,

4042 
	gBFD_RELOC_MMIX_LOCAL
,

4046 
	gBFD_RELOC_AVR_7_PCREL
,

4050 
	gBFD_RELOC_AVR_13_PCREL
,

4054 
	gBFD_RELOC_AVR_16_PM
,

4058 
	gBFD_RELOC_AVR_LO8_LDI
,

4062 
	gBFD_RELOC_AVR_HI8_LDI
,

4066 
	gBFD_RELOC_AVR_HH8_LDI
,

4070 
	gBFD_RELOC_AVR_MS8_LDI
,

4074 
	gBFD_RELOC_AVR_LO8_LDI_NEG
,

4079 
	gBFD_RELOC_AVR_HI8_LDI_NEG
,

4084 
	gBFD_RELOC_AVR_HH8_LDI_NEG
,

4088 
	gBFD_RELOC_AVR_MS8_LDI_NEG
,

4092 
	gBFD_RELOC_AVR_LO8_LDI_PM
,

4098 
	gBFD_RELOC_AVR_LO8_LDI_GS
,

4102 
	gBFD_RELOC_AVR_HI8_LDI_PM
,

4108 
	gBFD_RELOC_AVR_HI8_LDI_GS
,

4112 
	gBFD_RELOC_AVR_HH8_LDI_PM
,

4116 
	gBFD_RELOC_AVR_LO8_LDI_PM_NEG
,

4121 
	gBFD_RELOC_AVR_HI8_LDI_PM_NEG
,

4126 
	gBFD_RELOC_AVR_HH8_LDI_PM_NEG
,

4130 
	gBFD_RELOC_AVR_CALL
,

4134 
	gBFD_RELOC_AVR_LDI
,

4138 
	gBFD_RELOC_AVR_6
,

4142 
	gBFD_RELOC_AVR_6_ADIW
,

4146 
	gBFD_RELOC_AVR_8_LO
,

4150 
	gBFD_RELOC_AVR_8_HI
,

4154 
	gBFD_RELOC_AVR_8_HLO
,

4157 
	gBFD_RELOC_RL78_NEG8
,

4158 
	gBFD_RELOC_RL78_NEG16
,

4159 
	gBFD_RELOC_RL78_NEG24
,

4160 
	gBFD_RELOC_RL78_NEG32
,

4161 
	gBFD_RELOC_RL78_16_OP
,

4162 
	gBFD_RELOC_RL78_24_OP
,

4163 
	gBFD_RELOC_RL78_32_OP
,

4164 
	gBFD_RELOC_RL78_8U
,

4165 
	gBFD_RELOC_RL78_16U
,

4166 
	gBFD_RELOC_RL78_24U
,

4167 
	gBFD_RELOC_RL78_DIR3U_PCREL
,

4168 
	gBFD_RELOC_RL78_DIFF
,

4169 
	gBFD_RELOC_RL78_GPRELB
,

4170 
	gBFD_RELOC_RL78_GPRELW
,

4171 
	gBFD_RELOC_RL78_GPRELL
,

4172 
	gBFD_RELOC_RL78_SYM
,

4173 
	gBFD_RELOC_RL78_OP_SUBTRACT
,

4174 
	gBFD_RELOC_RL78_OP_NEG
,

4175 
	gBFD_RELOC_RL78_OP_AND
,

4176 
	gBFD_RELOC_RL78_OP_SHRA
,

4177 
	gBFD_RELOC_RL78_ABS8
,

4178 
	gBFD_RELOC_RL78_ABS16
,

4179 
	gBFD_RELOC_RL78_ABS16_REV
,

4180 
	gBFD_RELOC_RL78_ABS32
,

4181 
	gBFD_RELOC_RL78_ABS32_REV
,

4182 
	gBFD_RELOC_RL78_ABS16U
,

4183 
	gBFD_RELOC_RL78_ABS16UW
,

4184 
	gBFD_RELOC_RL78_ABS16UL
,

4185 
	gBFD_RELOC_RL78_RELAX
,

4186 
	gBFD_RELOC_RL78_HI16
,

4187 
	gBFD_RELOC_RL78_HI8
,

4188 
	gBFD_RELOC_RL78_LO16
,

4191 
	gBFD_RELOC_RX_NEG8
,

4192 
	gBFD_RELOC_RX_NEG16
,

4193 
	gBFD_RELOC_RX_NEG24
,

4194 
	gBFD_RELOC_RX_NEG32
,

4195 
	gBFD_RELOC_RX_16_OP
,

4196 
	gBFD_RELOC_RX_24_OP
,

4197 
	gBFD_RELOC_RX_32_OP
,

4198 
	gBFD_RELOC_RX_8U
,

4199 
	gBFD_RELOC_RX_16U
,

4200 
	gBFD_RELOC_RX_24U
,

4201 
	gBFD_RELOC_RX_DIR3U_PCREL
,

4202 
	gBFD_RELOC_RX_DIFF
,

4203 
	gBFD_RELOC_RX_GPRELB
,

4204 
	gBFD_RELOC_RX_GPRELW
,

4205 
	gBFD_RELOC_RX_GPRELL
,

4206 
	gBFD_RELOC_RX_SYM
,

4207 
	gBFD_RELOC_RX_OP_SUBTRACT
,

4208 
	gBFD_RELOC_RX_OP_NEG
,

4209 
	gBFD_RELOC_RX_ABS8
,

4210 
	gBFD_RELOC_RX_ABS16
,

4211 
	gBFD_RELOC_RX_ABS16_REV
,

4212 
	gBFD_RELOC_RX_ABS32
,

4213 
	gBFD_RELOC_RX_ABS32_REV
,

4214 
	gBFD_RELOC_RX_ABS16U
,

4215 
	gBFD_RELOC_RX_ABS16UW
,

4216 
	gBFD_RELOC_RX_ABS16UL
,

4217 
	gBFD_RELOC_RX_RELAX
,

4220 
	gBFD_RELOC_390_12
,

4223 
	gBFD_RELOC_390_GOT12
,

4226 
	gBFD_RELOC_390_PLT32
,

4229 
	gBFD_RELOC_390_COPY
,

4232 
	gBFD_RELOC_390_GLOB_DAT
,

4235 
	gBFD_RELOC_390_JMP_SLOT
,

4238 
	gBFD_RELOC_390_RELATIVE
,

4241 
	gBFD_RELOC_390_GOTPC
,

4244 
	gBFD_RELOC_390_GOT16
,

4247 
	gBFD_RELOC_390_PC16DBL
,

4250 
	gBFD_RELOC_390_PLT16DBL
,

4253 
	gBFD_RELOC_390_PC32DBL
,

4256 
	gBFD_RELOC_390_PLT32DBL
,

4259 
	gBFD_RELOC_390_GOTPCDBL
,

4262 
	gBFD_RELOC_390_GOT64
,

4265 
	gBFD_RELOC_390_PLT64
,

4268 
	gBFD_RELOC_390_GOTENT
,

4271 
	gBFD_RELOC_390_GOTOFF64
,

4274 
	gBFD_RELOC_390_GOTPLT12
,

4277 
	gBFD_RELOC_390_GOTPLT16
,

4280 
	gBFD_RELOC_390_GOTPLT32
,

4283 
	gBFD_RELOC_390_GOTPLT64
,

4286 
	gBFD_RELOC_390_GOTPLTENT
,

4289 
	gBFD_RELOC_390_PLTOFF16
,

4292 
	gBFD_RELOC_390_PLTOFF32
,

4295 
	gBFD_RELOC_390_PLTOFF64
,

4298 
	gBFD_RELOC_390_TLS_LOAD
,

4299 
	gBFD_RELOC_390_TLS_GDCALL
,

4300 
	gBFD_RELOC_390_TLS_LDCALL
,

4301 
	gBFD_RELOC_390_TLS_GD32
,

4302 
	gBFD_RELOC_390_TLS_GD64
,

4303 
	gBFD_RELOC_390_TLS_GOTIE12
,

4304 
	gBFD_RELOC_390_TLS_GOTIE32
,

4305 
	gBFD_RELOC_390_TLS_GOTIE64
,

4306 
	gBFD_RELOC_390_TLS_LDM32
,

4307 
	gBFD_RELOC_390_TLS_LDM64
,

4308 
	gBFD_RELOC_390_TLS_IE32
,

4309 
	gBFD_RELOC_390_TLS_IE64
,

4310 
	gBFD_RELOC_390_TLS_IEENT
,

4311 
	gBFD_RELOC_390_TLS_LE32
,

4312 
	gBFD_RELOC_390_TLS_LE64
,

4313 
	gBFD_RELOC_390_TLS_LDO32
,

4314 
	gBFD_RELOC_390_TLS_LDO64
,

4315 
	gBFD_RELOC_390_TLS_DTPMOD
,

4316 
	gBFD_RELOC_390_TLS_DTPOFF
,

4317 
	gBFD_RELOC_390_TLS_TPOFF
,

4320 
	gBFD_RELOC_390_20
,

4321 
	gBFD_RELOC_390_GOT20
,

4322 
	gBFD_RELOC_390_GOTPLT20
,

4323 
	gBFD_RELOC_390_TLS_GOTIE20
,

4326 
	gBFD_RELOC_390_IRELATIVE
,

4330 
	gBFD_RELOC_SCORE_GPREL15
,

4333 
	gBFD_RELOC_SCORE_DUMMY2
,

4334 
	gBFD_RELOC_SCORE_JMP
,

4337 
	gBFD_RELOC_SCORE_BRANCH
,

4340 
	gBFD_RELOC_SCORE_IMM30
,

4343 
	gBFD_RELOC_SCORE_IMM32
,

4346 
	gBFD_RELOC_SCORE16_JMP
,

4349 
	gBFD_RELOC_SCORE16_BRANCH
,

4352 
	gBFD_RELOC_SCORE_BCMP
,

4355 
	gBFD_RELOC_SCORE_GOT15
,

4356 
	gBFD_RELOC_SCORE_GOT_LO16
,

4357 
	gBFD_RELOC_SCORE_CALL15
,

4358 
	gBFD_RELOC_SCORE_DUMMY_HI16
,

4361 
	gBFD_RELOC_IP2K_FR9
,

4364 
	gBFD_RELOC_IP2K_BANK
,

4367 
	gBFD_RELOC_IP2K_ADDR16CJP
,

4370 
	gBFD_RELOC_IP2K_PAGE3
,

4373 
	gBFD_RELOC_IP2K_LO8DATA
,

4374 
	gBFD_RELOC_IP2K_HI8DATA
,

4375 
	gBFD_RELOC_IP2K_EX8DATA
,

4378 
	gBFD_RELOC_IP2K_LO8INSN
,

4379 
	gBFD_RELOC_IP2K_HI8INSN
,

4382 
	gBFD_RELOC_IP2K_PC_SKIP
,

4385 
	gBFD_RELOC_IP2K_TEXT
,

4388 
	gBFD_RELOC_IP2K_FR_OFFSET
,

4391 
	gBFD_RELOC_VPE4KMATH_DATA
,

4392 
	gBFD_RELOC_VPE4KMATH_INSN
,

4411 
	gBFD_RELOC_VTABLE_INHERIT
,

4412 
	gBFD_RELOC_VTABLE_ENTRY
,

4415 
	gBFD_RELOC_IA64_IMM14
,

4416 
	gBFD_RELOC_IA64_IMM22
,

4417 
	gBFD_RELOC_IA64_IMM64
,

4418 
	gBFD_RELOC_IA64_DIR32MSB
,

4419 
	gBFD_RELOC_IA64_DIR32LSB
,

4420 
	gBFD_RELOC_IA64_DIR64MSB
,

4421 
	gBFD_RELOC_IA64_DIR64LSB
,

4422 
	gBFD_RELOC_IA64_GPREL22
,

4423 
	gBFD_RELOC_IA64_GPREL64I
,

4424 
	gBFD_RELOC_IA64_GPREL32MSB
,

4425 
	gBFD_RELOC_IA64_GPREL32LSB
,

4426 
	gBFD_RELOC_IA64_GPREL64MSB
,

4427 
	gBFD_RELOC_IA64_GPREL64LSB
,

4428 
	gBFD_RELOC_IA64_LTOFF22
,

4429 
	gBFD_RELOC_IA64_LTOFF64I
,

4430 
	gBFD_RELOC_IA64_PLTOFF22
,

4431 
	gBFD_RELOC_IA64_PLTOFF64I
,

4432 
	gBFD_RELOC_IA64_PLTOFF64MSB
,

4433 
	gBFD_RELOC_IA64_PLTOFF64LSB
,

4434 
	gBFD_RELOC_IA64_FPTR64I
,

4435 
	gBFD_RELOC_IA64_FPTR32MSB
,

4436 
	gBFD_RELOC_IA64_FPTR32LSB
,

4437 
	gBFD_RELOC_IA64_FPTR64MSB
,

4438 
	gBFD_RELOC_IA64_FPTR64LSB
,

4439 
	gBFD_RELOC_IA64_PCREL21B
,

4440 
	gBFD_RELOC_IA64_PCREL21BI
,

4441 
	gBFD_RELOC_IA64_PCREL21M
,

4442 
	gBFD_RELOC_IA64_PCREL21F
,

4443 
	gBFD_RELOC_IA64_PCREL22
,

4444 
	gBFD_RELOC_IA64_PCREL60B
,

4445 
	gBFD_RELOC_IA64_PCREL64I
,

4446 
	gBFD_RELOC_IA64_PCREL32MSB
,

4447 
	gBFD_RELOC_IA64_PCREL32LSB
,

4448 
	gBFD_RELOC_IA64_PCREL64MSB
,

4449 
	gBFD_RELOC_IA64_PCREL64LSB
,

4450 
	gBFD_RELOC_IA64_LTOFF_FPTR22
,

4451 
	gBFD_RELOC_IA64_LTOFF_FPTR64I
,

4452 
	gBFD_RELOC_IA64_LTOFF_FPTR32MSB
,

4453 
	gBFD_RELOC_IA64_LTOFF_FPTR32LSB
,

4454 
	gBFD_RELOC_IA64_LTOFF_FPTR64MSB
,

4455 
	gBFD_RELOC_IA64_LTOFF_FPTR64LSB
,

4456 
	gBFD_RELOC_IA64_SEGREL32MSB
,

4457 
	gBFD_RELOC_IA64_SEGREL32LSB
,

4458 
	gBFD_RELOC_IA64_SEGREL64MSB
,

4459 
	gBFD_RELOC_IA64_SEGREL64LSB
,

4460 
	gBFD_RELOC_IA64_SECREL32MSB
,

4461 
	gBFD_RELOC_IA64_SECREL32LSB
,

4462 
	gBFD_RELOC_IA64_SECREL64MSB
,

4463 
	gBFD_RELOC_IA64_SECREL64LSB
,

4464 
	gBFD_RELOC_IA64_REL32MSB
,

4465 
	gBFD_RELOC_IA64_REL32LSB
,

4466 
	gBFD_RELOC_IA64_REL64MSB
,

4467 
	gBFD_RELOC_IA64_REL64LSB
,

4468 
	gBFD_RELOC_IA64_LTV32MSB
,

4469 
	gBFD_RELOC_IA64_LTV32LSB
,

4470 
	gBFD_RELOC_IA64_LTV64MSB
,

4471 
	gBFD_RELOC_IA64_LTV64LSB
,

4472 
	gBFD_RELOC_IA64_IPLTMSB
,

4473 
	gBFD_RELOC_IA64_IPLTLSB
,

4474 
	gBFD_RELOC_IA64_COPY
,

4475 
	gBFD_RELOC_IA64_LTOFF22X
,

4476 
	gBFD_RELOC_IA64_LDXMOV
,

4477 
	gBFD_RELOC_IA64_TPREL14
,

4478 
	gBFD_RELOC_IA64_TPREL22
,

4479 
	gBFD_RELOC_IA64_TPREL64I
,

4480 
	gBFD_RELOC_IA64_TPREL64MSB
,

4481 
	gBFD_RELOC_IA64_TPREL64LSB
,

4482 
	gBFD_RELOC_IA64_LTOFF_TPREL22
,

4483 
	gBFD_RELOC_IA64_DTPMOD64MSB
,

4484 
	gBFD_RELOC_IA64_DTPMOD64LSB
,

4485 
	gBFD_RELOC_IA64_LTOFF_DTPMOD22
,

4486 
	gBFD_RELOC_IA64_DTPREL14
,

4487 
	gBFD_RELOC_IA64_DTPREL22
,

4488 
	gBFD_RELOC_IA64_DTPREL64I
,

4489 
	gBFD_RELOC_IA64_DTPREL32MSB
,

4490 
	gBFD_RELOC_IA64_DTPREL32LSB
,

4491 
	gBFD_RELOC_IA64_DTPREL64MSB
,

4492 
	gBFD_RELOC_IA64_DTPREL64LSB
,

4493 
	gBFD_RELOC_IA64_LTOFF_DTPREL22
,

4497 
	gBFD_RELOC_M68HC11_HI8
,

4501 
	gBFD_RELOC_M68HC11_LO8
,

4505 
	gBFD_RELOC_M68HC11_3B
,

4512 
	gBFD_RELOC_M68HC11_RL_JUMP
,

4518 
	gBFD_RELOC_M68HC11_RL_GROUP
,

4524 
	gBFD_RELOC_M68HC11_LO16
,

4530 
	gBFD_RELOC_M68HC11_PAGE
,

4536 
	gBFD_RELOC_M68HC11_24
,

4540 
	gBFD_RELOC_M68HC12_5B
,

4544 
	gBFD_RELOC_XGATE_RL_JUMP
,

4550 
	gBFD_RELOC_XGATE_RL_GROUP
,

4555 
	gBFD_RELOC_XGATE_LO16
,

4558 
	gBFD_RELOC_XGATE_GPAGE
,

4561 
	gBFD_RELOC_XGATE_24
,

4565 
	gBFD_RELOC_XGATE_PCREL_9
,

4569 
	gBFD_RELOC_XGATE_PCREL_10
,

4574 
	gBFD_RELOC_XGATE_IMM8_LO
,

4579 
	gBFD_RELOC_XGATE_IMM8_HI
,

4583 
	gBFD_RELOC_XGATE_IMM3
,

4587 
	gBFD_RELOC_XGATE_IMM4
,

4591 
	gBFD_RELOC_XGATE_IMM5
,

4595 
	gBFD_RELOC_M68HC12_9B
,

4599 
	gBFD_RELOC_M68HC12_16B
,

4603 
	gBFD_RELOC_M68HC12_9_PCREL
,

4607 
	gBFD_RELOC_M68HC12_10_PCREL
,

4612 
	gBFD_RELOC_M68HC12_LO8XG
,

4617 
	gBFD_RELOC_M68HC12_HI8XG
,

4620 
	gBFD_RELOC_16C_NUM08
,

4621 
	gBFD_RELOC_16C_NUM08_C
,

4622 
	gBFD_RELOC_16C_NUM16
,

4623 
	gBFD_RELOC_16C_NUM16_C
,

4624 
	gBFD_RELOC_16C_NUM32
,

4625 
	gBFD_RELOC_16C_NUM32_C
,

4626 
	gBFD_RELOC_16C_DISP04
,

4627 
	gBFD_RELOC_16C_DISP04_C
,

4628 
	gBFD_RELOC_16C_DISP08
,

4629 
	gBFD_RELOC_16C_DISP08_C
,

4630 
	gBFD_RELOC_16C_DISP16
,

4631 
	gBFD_RELOC_16C_DISP16_C
,

4632 
	gBFD_RELOC_16C_DISP24
,

4633 
	gBFD_RELOC_16C_DISP24_C
,

4634 
	gBFD_RELOC_16C_DISP24a
,

4635 
	gBFD_RELOC_16C_DISP24a_C
,

4636 
	gBFD_RELOC_16C_REG04
,

4637 
	gBFD_RELOC_16C_REG04_C
,

4638 
	gBFD_RELOC_16C_REG04a
,

4639 
	gBFD_RELOC_16C_REG04a_C
,

4640 
	gBFD_RELOC_16C_REG14
,

4641 
	gBFD_RELOC_16C_REG14_C
,

4642 
	gBFD_RELOC_16C_REG16
,

4643 
	gBFD_RELOC_16C_REG16_C
,

4644 
	gBFD_RELOC_16C_REG20
,

4645 
	gBFD_RELOC_16C_REG20_C
,

4646 
	gBFD_RELOC_16C_ABS20
,

4647 
	gBFD_RELOC_16C_ABS20_C
,

4648 
	gBFD_RELOC_16C_ABS24
,

4649 
	gBFD_RELOC_16C_ABS24_C
,

4650 
	gBFD_RELOC_16C_IMM04
,

4651 
	gBFD_RELOC_16C_IMM04_C
,

4652 
	gBFD_RELOC_16C_IMM16
,

4653 
	gBFD_RELOC_16C_IMM16_C
,

4654 
	gBFD_RELOC_16C_IMM20
,

4655 
	gBFD_RELOC_16C_IMM20_C
,

4656 
	gBFD_RELOC_16C_IMM24
,

4657 
	gBFD_RELOC_16C_IMM24_C
,

4658 
	gBFD_RELOC_16C_IMM32
,

4659 
	gBFD_RELOC_16C_IMM32_C
,

4662 
	gBFD_RELOC_CR16_NUM8
,

4663 
	gBFD_RELOC_CR16_NUM16
,

4664 
	gBFD_RELOC_CR16_NUM32
,

4665 
	gBFD_RELOC_CR16_NUM32a
,

4666 
	gBFD_RELOC_CR16_REGREL0
,

4667 
	gBFD_RELOC_CR16_REGREL4
,

4668 
	gBFD_RELOC_CR16_REGREL4a
,

4669 
	gBFD_RELOC_CR16_REGREL14
,

4670 
	gBFD_RELOC_CR16_REGREL14a
,

4671 
	gBFD_RELOC_CR16_REGREL16
,

4672 
	gBFD_RELOC_CR16_REGREL20
,

4673 
	gBFD_RELOC_CR16_REGREL20a
,

4674 
	gBFD_RELOC_CR16_ABS20
,

4675 
	gBFD_RELOC_CR16_ABS24
,

4676 
	gBFD_RELOC_CR16_IMM4
,

4677 
	gBFD_RELOC_CR16_IMM8
,

4678 
	gBFD_RELOC_CR16_IMM16
,

4679 
	gBFD_RELOC_CR16_IMM20
,

4680 
	gBFD_RELOC_CR16_IMM24
,

4681 
	gBFD_RELOC_CR16_IMM32
,

4682 
	gBFD_RELOC_CR16_IMM32a
,

4683 
	gBFD_RELOC_CR16_DISP4
,

4684 
	gBFD_RELOC_CR16_DISP8
,

4685 
	gBFD_RELOC_CR16_DISP16
,

4686 
	gBFD_RELOC_CR16_DISP20
,

4687 
	gBFD_RELOC_CR16_DISP24
,

4688 
	gBFD_RELOC_CR16_DISP24a
,

4689 
	gBFD_RELOC_CR16_SWITCH8
,

4690 
	gBFD_RELOC_CR16_SWITCH16
,

4691 
	gBFD_RELOC_CR16_SWITCH32
,

4692 
	gBFD_RELOC_CR16_GOT_REGREL20
,

4693 
	gBFD_RELOC_CR16_GOTC_REGREL20
,

4694 
	gBFD_RELOC_CR16_GLOB_DAT
,

4697 
	gBFD_RELOC_CRX_REL4
,

4698 
	gBFD_RELOC_CRX_REL8
,

4699 
	gBFD_RELOC_CRX_REL8_CMP
,

4700 
	gBFD_RELOC_CRX_REL16
,

4701 
	gBFD_RELOC_CRX_REL24
,

4702 
	gBFD_RELOC_CRX_REL32
,

4703 
	gBFD_RELOC_CRX_REGREL12
,

4704 
	gBFD_RELOC_CRX_REGREL22
,

4705 
	gBFD_RELOC_CRX_REGREL28
,

4706 
	gBFD_RELOC_CRX_REGREL32
,

4707 
	gBFD_RELOC_CRX_ABS16
,

4708 
	gBFD_RELOC_CRX_ABS32
,

4709 
	gBFD_RELOC_CRX_NUM8
,

4710 
	gBFD_RELOC_CRX_NUM16
,

4711 
	gBFD_RELOC_CRX_NUM32
,

4712 
	gBFD_RELOC_CRX_IMM16
,

4713 
	gBFD_RELOC_CRX_IMM32
,

4714 
	gBFD_RELOC_CRX_SWITCH8
,

4715 
	gBFD_RELOC_CRX_SWITCH16
,

4716 
	gBFD_RELOC_CRX_SWITCH32
,

4720 
	gBFD_RELOC_CRIS_BDISP8
,

4721 
	gBFD_RELOC_CRIS_UNSIGNED_5
,

4722 
	gBFD_RELOC_CRIS_SIGNED_6
,

4723 
	gBFD_RELOC_CRIS_UNSIGNED_6
,

4724 
	gBFD_RELOC_CRIS_SIGNED_8
,

4725 
	gBFD_RELOC_CRIS_UNSIGNED_8
,

4726 
	gBFD_RELOC_CRIS_SIGNED_16
,

4727 
	gBFD_RELOC_CRIS_UNSIGNED_16
,

4728 
	gBFD_RELOC_CRIS_LAPCQ_OFFSET
,

4729 
	gBFD_RELOC_CRIS_UNSIGNED_4
,

4732 
	gBFD_RELOC_CRIS_COPY
,

4733 
	gBFD_RELOC_CRIS_GLOB_DAT
,

4734 
	gBFD_RELOC_CRIS_JUMP_SLOT
,

4735 
	gBFD_RELOC_CRIS_RELATIVE
,

4738 
	gBFD_RELOC_CRIS_32_GOT
,

4741 
	gBFD_RELOC_CRIS_16_GOT
,

4744 
	gBFD_RELOC_CRIS_32_GOTPLT
,

4747 
	gBFD_RELOC_CRIS_16_GOTPLT
,

4750 
	gBFD_RELOC_CRIS_32_GOTREL
,

4753 
	gBFD_RELOC_CRIS_32_PLT_GOTREL
,

4756 
	gBFD_RELOC_CRIS_32_PLT_PCREL
,

4759 
	gBFD_RELOC_CRIS_32_GOT_GD
,

4760 
	gBFD_RELOC_CRIS_16_GOT_GD
,

4761 
	gBFD_RELOC_CRIS_32_GD
,

4762 
	gBFD_RELOC_CRIS_DTP
,

4763 
	gBFD_RELOC_CRIS_32_DTPREL
,

4764 
	gBFD_RELOC_CRIS_16_DTPREL
,

4765 
	gBFD_RELOC_CRIS_32_GOT_TPREL
,

4766 
	gBFD_RELOC_CRIS_16_GOT_TPREL
,

4767 
	gBFD_RELOC_CRIS_32_TPREL
,

4768 
	gBFD_RELOC_CRIS_16_TPREL
,

4769 
	gBFD_RELOC_CRIS_DTPMOD
,

4770 
	gBFD_RELOC_CRIS_32_IE
,

4773 
	gBFD_RELOC_860_COPY
,

4774 
	gBFD_RELOC_860_GLOB_DAT
,

4775 
	gBFD_RELOC_860_JUMP_SLOT
,

4776 
	gBFD_RELOC_860_RELATIVE
,

4777 
	gBFD_RELOC_860_PC26
,

4778 
	gBFD_RELOC_860_PLT26
,

4779 
	gBFD_RELOC_860_PC16
,

4780 
	gBFD_RELOC_860_LOW0
,

4781 
	gBFD_RELOC_860_SPLIT0
,

4782 
	gBFD_RELOC_860_LOW1
,

4783 
	gBFD_RELOC_860_SPLIT1
,

4784 
	gBFD_RELOC_860_LOW2
,

4785 
	gBFD_RELOC_860_SPLIT2
,

4786 
	gBFD_RELOC_860_LOW3
,

4787 
	gBFD_RELOC_860_LOGOT0
,

4788 
	gBFD_RELOC_860_SPGOT0
,

4789 
	gBFD_RELOC_860_LOGOT1
,

4790 
	gBFD_RELOC_860_SPGOT1
,

4791 
	gBFD_RELOC_860_LOGOTOFF0
,

4792 
	gBFD_RELOC_860_SPGOTOFF0
,

4793 
	gBFD_RELOC_860_LOGOTOFF1
,

4794 
	gBFD_RELOC_860_SPGOTOFF1
,

4795 
	gBFD_RELOC_860_LOGOTOFF2
,

4796 
	gBFD_RELOC_860_LOGOTOFF3
,

4797 
	gBFD_RELOC_860_LOPC
,

4798 
	gBFD_RELOC_860_HIGHADJ
,

4799 
	gBFD_RELOC_860_HAGOT
,

4800 
	gBFD_RELOC_860_HAGOTOFF
,

4801 
	gBFD_RELOC_860_HAPC
,

4802 
	gBFD_RELOC_860_HIGH
,

4803 
	gBFD_RELOC_860_HIGOT
,

4804 
	gBFD_RELOC_860_HIGOTOFF
,

4807 
	gBFD_RELOC_OPENRISC_ABS_26
,

4808 
	gBFD_RELOC_OPENRISC_REL_26
,

4811 
	gBFD_RELOC_H8_DIR16A8
,

4812 
	gBFD_RELOC_H8_DIR16R8
,

4813 
	gBFD_RELOC_H8_DIR24A8
,

4814 
	gBFD_RELOC_H8_DIR24R8
,

4815 
	gBFD_RELOC_H8_DIR32A16
,

4818 
	gBFD_RELOC_XSTORMY16_REL_12
,

4819 
	gBFD_RELOC_XSTORMY16_12
,

4820 
	gBFD_RELOC_XSTORMY16_24
,

4821 
	gBFD_RELOC_XSTORMY16_FPTR16
,

4824 
	gBFD_RELOC_RELC
,

4828 
	gBFD_RELOC_XC16X_PAG
,

4829 
	gBFD_RELOC_XC16X_POF
,

4830 
	gBFD_RELOC_XC16X_SEG
,

4831 
	gBFD_RELOC_XC16X_SOF
,

4834 
	gBFD_RELOC_VAX_GLOB_DAT
,

4835 
	gBFD_RELOC_VAX_JMP_SLOT
,

4836 
	gBFD_RELOC_VAX_RELATIVE
,

4839 
	gBFD_RELOC_MT_PC16
,

4842 
	gBFD_RELOC_MT_HI16
,

4845 
	gBFD_RELOC_MT_LO16
,

4848 
	gBFD_RELOC_MT_GNU_VTINHERIT
,

4851 
	gBFD_RELOC_MT_GNU_VTENTRY
,

4854 
	gBFD_RELOC_MT_PCINSN8
,

4857 
	gBFD_RELOC_MSP430_10_PCREL
,

4858 
	gBFD_RELOC_MSP430_16_PCREL
,

4859 
	gBFD_RELOC_MSP430_16
,

4860 
	gBFD_RELOC_MSP430_16_PCREL_BYTE
,

4861 
	gBFD_RELOC_MSP430_16_BYTE
,

4862 
	gBFD_RELOC_MSP430_2X_PCREL
,

4863 
	gBFD_RELOC_MSP430_RL_PCREL
,

4866 
	gBFD_RELOC_IQ2000_OFFSET_16
,

4867 
	gBFD_RELOC_IQ2000_OFFSET_21
,

4868 
	gBFD_RELOC_IQ2000_UHI16
,

4873 
	gBFD_RELOC_XTENSA_RTLD
,

4876 
	gBFD_RELOC_XTENSA_GLOB_DAT
,

4877 
	gBFD_RELOC_XTENSA_JMP_SLOT
,

4878 
	gBFD_RELOC_XTENSA_RELATIVE
,

4882 
	gBFD_RELOC_XTENSA_PLT
,

4890 
	gBFD_RELOC_XTENSA_DIFF8
,

4891 
	gBFD_RELOC_XTENSA_DIFF16
,

4892 
	gBFD_RELOC_XTENSA_DIFF32
,

4898 
	gBFD_RELOC_XTENSA_SLOT0_OP
,

4899 
	gBFD_RELOC_XTENSA_SLOT1_OP
,

4900 
	gBFD_RELOC_XTENSA_SLOT2_OP
,

4901 
	gBFD_RELOC_XTENSA_SLOT3_OP
,

4902 
	gBFD_RELOC_XTENSA_SLOT4_OP
,

4903 
	gBFD_RELOC_XTENSA_SLOT5_OP
,

4904 
	gBFD_RELOC_XTENSA_SLOT6_OP
,

4905 
	gBFD_RELOC_XTENSA_SLOT7_OP
,

4906 
	gBFD_RELOC_XTENSA_SLOT8_OP
,

4907 
	gBFD_RELOC_XTENSA_SLOT9_OP
,

4908 
	gBFD_RELOC_XTENSA_SLOT10_OP
,

4909 
	gBFD_RELOC_XTENSA_SLOT11_OP
,

4910 
	gBFD_RELOC_XTENSA_SLOT12_OP
,

4911 
	gBFD_RELOC_XTENSA_SLOT13_OP
,

4912 
	gBFD_RELOC_XTENSA_SLOT14_OP
,

4916 
	gBFD_RELOC_XTENSA_SLOT0_ALT
,

4917 
	gBFD_RELOC_XTENSA_SLOT1_ALT
,

4918 
	gBFD_RELOC_XTENSA_SLOT2_ALT
,

4919 
	gBFD_RELOC_XTENSA_SLOT3_ALT
,

4920 
	gBFD_RELOC_XTENSA_SLOT4_ALT
,

4921 
	gBFD_RELOC_XTENSA_SLOT5_ALT
,

4922 
	gBFD_RELOC_XTENSA_SLOT6_ALT
,

4923 
	gBFD_RELOC_XTENSA_SLOT7_ALT
,

4924 
	gBFD_RELOC_XTENSA_SLOT8_ALT
,

4925 
	gBFD_RELOC_XTENSA_SLOT9_ALT
,

4926 
	gBFD_RELOC_XTENSA_SLOT10_ALT
,

4927 
	gBFD_RELOC_XTENSA_SLOT11_ALT
,

4928 
	gBFD_RELOC_XTENSA_SLOT12_ALT
,

4929 
	gBFD_RELOC_XTENSA_SLOT13_ALT
,

4930 
	gBFD_RELOC_XTENSA_SLOT14_ALT
,

4934 
	gBFD_RELOC_XTENSA_OP0
,

4935 
	gBFD_RELOC_XTENSA_OP1
,

4936 
	gBFD_RELOC_XTENSA_OP2
,

4941 
	gBFD_RELOC_XTENSA_ASM_EXPAND
,

4947 
	gBFD_RELOC_XTENSA_ASM_SIMPLIFY
,

4950 
	gBFD_RELOC_XTENSA_TLSDESC_FN
,

4951 
	gBFD_RELOC_XTENSA_TLSDESC_ARG
,

4952 
	gBFD_RELOC_XTENSA_TLS_DTPOFF
,

4953 
	gBFD_RELOC_XTENSA_TLS_TPOFF
,

4954 
	gBFD_RELOC_XTENSA_TLS_FUNC
,

4955 
	gBFD_RELOC_XTENSA_TLS_ARG
,

4956 
	gBFD_RELOC_XTENSA_TLS_CALL
,

4959 
	gBFD_RELOC_Z80_DISP8
,

4962 
	gBFD_RELOC_Z8K_DISP7
,

4965 
	gBFD_RELOC_Z8K_CALLR
,

4968 
	gBFD_RELOC_Z8K_IMM4L
,

4971 
	gBFD_RELOC_LM32_CALL
,

4972 
	gBFD_RELOC_LM32_BRANCH
,

4973 
	gBFD_RELOC_LM32_16_GOT
,

4974 
	gBFD_RELOC_LM32_GOTOFF_HI16
,

4975 
	gBFD_RELOC_LM32_GOTOFF_LO16
,

4976 
	gBFD_RELOC_LM32_COPY
,

4977 
	gBFD_RELOC_LM32_GLOB_DAT
,

4978 
	gBFD_RELOC_LM32_JMP_SLOT
,

4979 
	gBFD_RELOC_LM32_RELATIVE
,

4983 
	gBFD_RELOC_MACH_O_SECTDIFF
,

4986 
	gBFD_RELOC_MACH_O_LOCAL_SECTDIFF
,

4989 
	gBFD_RELOC_MACH_O_PAIR
,

4993 
	gBFD_RELOC_MACH_O_X86_64_BRANCH32
,

4994 
	gBFD_RELOC_MACH_O_X86_64_BRANCH8
,

4997 
	gBFD_RELOC_MACH_O_X86_64_GOT
,

5001 
	gBFD_RELOC_MACH_O_X86_64_GOT_LOAD
,

5004 
	gBFD_RELOC_MACH_O_X86_64_SUBTRACTOR32
,

5007 
	gBFD_RELOC_MACH_O_X86_64_SUBTRACTOR64
,

5010 
	gBFD_RELOC_MACH_O_X86_64_PCREL32_1
,

5013 
	gBFD_RELOC_MACH_O_X86_64_PCREL32_2
,

5016 
	gBFD_RELOC_MACH_O_X86_64_PCREL32_4
,

5020 
	gBFD_RELOC_MICROBLAZE_32_LO
,

5024 
	gBFD_RELOC_MICROBLAZE_32_LO_PCREL
,

5028 
	gBFD_RELOC_MICROBLAZE_32_ROSDA
,

5032 
	gBFD_RELOC_MICROBLAZE_32_RWSDA
,

5036 
	gBFD_RELOC_MICROBLAZE_32_SYM_OP_SYM
,

5041 
	gBFD_RELOC_MICROBLAZE_64_NONE
,

5046 
	gBFD_RELOC_MICROBLAZE_64_GOTPC
,

5051 
	gBFD_RELOC_MICROBLAZE_64_GOT
,

5056 
	gBFD_RELOC_MICROBLAZE_64_PLT
,

5061 
	gBFD_RELOC_MICROBLAZE_64_GOTOFF
,

5065 
	gBFD_RELOC_MICROBLAZE_32_GOTOFF
,

5069 
	gBFD_RELOC_MICROBLAZE_COPY
,

5073 
	gBFD_RELOC_AARCH64_ADD_LO12
,

5078 
	gBFD_RELOC_AARCH64_ADR_GOT_PAGE
,

5082 
	gBFD_RELOC_AARCH64_ADR_HI21_PCREL
,

5087 
	gBFD_RELOC_AARCH64_ADR_HI21_NC_PCREL
,

5090 
	gBFD_RELOC_AARCH64_ADR_LO21_PCREL
,

5095 
	gBFD_RELOC_AARCH64_BRANCH19
,

5100 
	gBFD_RELOC_AARCH64_CALL26
,

5104 
	gBFD_RELOC_AARCH64_GAS_INTERNAL_FIXUP
,

5109 
	gBFD_RELOC_AARCH64_JUMP26
,

5114 
	gBFD_RELOC_AARCH64_LD_LO19_PCREL
,

5119 
	gBFD_RELOC_AARCH64_LD64_GOT_LO12_NC
,

5123 
	gBFD_RELOC_AARCH64_LDST_LO12
,

5127 
	gBFD_RELOC_AARCH64_LDST8_LO12
,

5131 
	gBFD_RELOC_AARCH64_LDST16_LO12
,

5135 
	gBFD_RELOC_AARCH64_LDST32_LO12
,

5139 
	gBFD_RELOC_AARCH64_LDST64_LO12
,

5143 
	gBFD_RELOC_AARCH64_LDST128_LO12
,

5147 
	gBFD_RELOC_AARCH64_MOVW_G0
,

5152 
	gBFD_RELOC_AARCH64_MOVW_G0_S
,

5156 
	gBFD_RELOC_AARCH64_MOVW_G0_NC
,

5160 
	gBFD_RELOC_AARCH64_MOVW_G1
,

5164 
	gBFD_RELOC_AARCH64_MOVW_G1_NC
,

5169 
	gBFD_RELOC_AARCH64_MOVW_G1_S
,

5173 
	gBFD_RELOC_AARCH64_MOVW_G2
,

5177 
	gBFD_RELOC_AARCH64_MOVW_G2_NC
,

5182 
	gBFD_RELOC_AARCH64_MOVW_G2_S
,

5186 
	gBFD_RELOC_AARCH64_MOVW_G3
,

5189 
	gBFD_RELOC_AARCH64_TLSDESC
,

5192 
	gBFD_RELOC_AARCH64_TLSDESC_ADD
,

5195 
	gBFD_RELOC_AARCH64_TLSDESC_ADD_LO12_NC
,

5198 
	gBFD_RELOC_AARCH64_TLSDESC_ADR_PAGE
,

5201 
	gBFD_RELOC_AARCH64_TLSDESC_ADR_PREL21
,

5204 
	gBFD_RELOC_AARCH64_TLSDESC_CALL
,

5207 
	gBFD_RELOC_AARCH64_TLSDESC_LD64_LO12_NC
,

5210 
	gBFD_RELOC_AARCH64_TLSDESC_LD64_PREL19
,

5213 
	gBFD_RELOC_AARCH64_TLSDESC_LDR
,

5216 
	gBFD_RELOC_AARCH64_TLSDESC_OFF_G0_NC
,

5219 
	gBFD_RELOC_AARCH64_TLSDESC_OFF_G1
,

5224 
	gBFD_RELOC_AARCH64_TLSGD_ADD_LO12_NC
,

5230 
	gBFD_RELOC_AARCH64_TLSGD_ADR_PAGE21
,

5233 
	gBFD_RELOC_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
,

5236 
	gBFD_RELOC_AARCH64_TLSIE_LD_GOTTPREL_PREL19
,

5239 
	gBFD_RELOC_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
,

5242 
	gBFD_RELOC_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
,

5245 
	gBFD_RELOC_AARCH64_TLSIE_MOVW_GOTTPREL_G1
,

5248 
	gBFD_RELOC_AARCH64_TLSLE_ADD_TPREL_HI12
,

5251 
	gBFD_RELOC_AARCH64_TLSLE_ADD_TPREL_LO12
,

5254 
	gBFD_RELOC_AARCH64_TLSLE_ADD_TPREL_LO12_NC
,

5257 
	gBFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G0
,

5260 
	gBFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G0_NC
,

5263 
	gBFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G1
,

5266 
	gBFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G1_NC
,

5269 
	gBFD_RELOC_AARCH64_TLSLE_MOVW_TPREL_G2
,

5272 
	gBFD_RELOC_AARCH64_TLS_DTPMOD64
,

5275 
	gBFD_RELOC_AARCH64_TLS_DTPREL64
,

5278 
	gBFD_RELOC_AARCH64_TLS_TPREL64
,

5283 
	gBFD_RELOC_AARCH64_TSTBR14
,

5286 
	gBFD_RELOC_TILEPRO_COPY
,

5287 
	gBFD_RELOC_TILEPRO_GLOB_DAT
,

5288 
	gBFD_RELOC_TILEPRO_JMP_SLOT
,

5289 
	gBFD_RELOC_TILEPRO_RELATIVE
,

5290 
	gBFD_RELOC_TILEPRO_BROFF_X1
,

5291 
	gBFD_RELOC_TILEPRO_JOFFLONG_X1
,

5292 
	gBFD_RELOC_TILEPRO_JOFFLONG_X1_PLT
,

5293 
	gBFD_RELOC_TILEPRO_IMM8_X0
,

5294 
	gBFD_RELOC_TILEPRO_IMM8_Y0
,

5295 
	gBFD_RELOC_TILEPRO_IMM8_X1
,

5296 
	gBFD_RELOC_TILEPRO_IMM8_Y1
,

5297 
	gBFD_RELOC_TILEPRO_DEST_IMM8_X1
,

5298 
	gBFD_RELOC_TILEPRO_MT_IMM15_X1
,

5299 
	gBFD_RELOC_TILEPRO_MF_IMM15_X1
,

5300 
	gBFD_RELOC_TILEPRO_IMM16_X0
,

5301 
	gBFD_RELOC_TILEPRO_IMM16_X1
,

5302 
	gBFD_RELOC_TILEPRO_IMM16_X0_LO
,

5303 
	gBFD_RELOC_TILEPRO_IMM16_X1_LO
,

5304 
	gBFD_RELOC_TILEPRO_IMM16_X0_HI
,

5305 
	gBFD_RELOC_TILEPRO_IMM16_X1_HI
,

5306 
	gBFD_RELOC_TILEPRO_IMM16_X0_HA
,

5307 
	gBFD_RELOC_TILEPRO_IMM16_X1_HA
,

5308 
	gBFD_RELOC_TILEPRO_IMM16_X0_PCREL
,

5309 
	gBFD_RELOC_TILEPRO_IMM16_X1_PCREL
,

5310 
	gBFD_RELOC_TILEPRO_IMM16_X0_LO_PCREL
,

5311 
	gBFD_RELOC_TILEPRO_IMM16_X1_LO_PCREL
,

5312 
	gBFD_RELOC_TILEPRO_IMM16_X0_HI_PCREL
,

5313 
	gBFD_RELOC_TILEPRO_IMM16_X1_HI_PCREL
,

5314 
	gBFD_RELOC_TILEPRO_IMM16_X0_HA_PCREL
,

5315 
	gBFD_RELOC_TILEPRO_IMM16_X1_HA_PCREL
,

5316 
	gBFD_RELOC_TILEPRO_IMM16_X0_GOT
,

5317 
	gBFD_RELOC_TILEPRO_IMM16_X1_GOT
,

5318 
	gBFD_RELOC_TILEPRO_IMM16_X0_GOT_LO
,

5319 
	gBFD_RELOC_TILEPRO_IMM16_X1_GOT_LO
,

5320 
	gBFD_RELOC_TILEPRO_IMM16_X0_GOT_HI
,

5321 
	gBFD_RELOC_TILEPRO_IMM16_X1_GOT_HI
,

5322 
	gBFD_RELOC_TILEPRO_IMM16_X0_GOT_HA
,

5323 
	gBFD_RELOC_TILEPRO_IMM16_X1_GOT_HA
,

5324 
	gBFD_RELOC_TILEPRO_MMSTART_X0
,

5325 
	gBFD_RELOC_TILEPRO_MMEND_X0
,

5326 
	gBFD_RELOC_TILEPRO_MMSTART_X1
,

5327 
	gBFD_RELOC_TILEPRO_MMEND_X1
,

5328 
	gBFD_RELOC_TILEPRO_SHAMT_X0
,

5329 
	gBFD_RELOC_TILEPRO_SHAMT_X1
,

5330 
	gBFD_RELOC_TILEPRO_SHAMT_Y0
,

5331 
	gBFD_RELOC_TILEPRO_SHAMT_Y1
,

5332 
	gBFD_RELOC_TILEPRO_TLS_GD_CALL
,

5333 
	gBFD_RELOC_TILEPRO_IMM8_X0_TLS_GD_ADD
,

5334 
	gBFD_RELOC_TILEPRO_IMM8_X1_TLS_GD_ADD
,

5335 
	gBFD_RELOC_TILEPRO_IMM8_Y0_TLS_GD_ADD
,

5336 
	gBFD_RELOC_TILEPRO_IMM8_Y1_TLS_GD_ADD
,

5337 
	gBFD_RELOC_TILEPRO_TLS_IE_LOAD
,

5338 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_GD
,

5339 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_GD
,

5340 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_GD_LO
,

5341 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_GD_LO
,

5342 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_GD_HI
,

5343 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_GD_HI
,

5344 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_GD_HA
,

5345 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_GD_HA
,

5346 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_IE
,

5347 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_IE
,

5348 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_IE_LO
,

5349 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_IE_LO
,

5350 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_IE_HI
,

5351 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_IE_HI
,

5352 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_IE_HA
,

5353 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_IE_HA
,

5354 
	gBFD_RELOC_TILEPRO_TLS_DTPMOD32
,

5355 
	gBFD_RELOC_TILEPRO_TLS_DTPOFF32
,

5356 
	gBFD_RELOC_TILEPRO_TLS_TPOFF32
,

5357 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_LE
,

5358 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_LE
,

5359 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_LE_LO
,

5360 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_LE_LO
,

5361 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_LE_HI
,

5362 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_LE_HI
,

5363 
	gBFD_RELOC_TILEPRO_IMM16_X0_TLS_LE_HA
,

5364 
	gBFD_RELOC_TILEPRO_IMM16_X1_TLS_LE_HA
,

5367 
	gBFD_RELOC_TILEGX_HW0
,

5368 
	gBFD_RELOC_TILEGX_HW1
,

5369 
	gBFD_RELOC_TILEGX_HW2
,

5370 
	gBFD_RELOC_TILEGX_HW3
,

5371 
	gBFD_RELOC_TILEGX_HW0_LAST
,

5372 
	gBFD_RELOC_TILEGX_HW1_LAST
,

5373 
	gBFD_RELOC_TILEGX_HW2_LAST
,

5374 
	gBFD_RELOC_TILEGX_COPY
,

5375 
	gBFD_RELOC_TILEGX_GLOB_DAT
,

5376 
	gBFD_RELOC_TILEGX_JMP_SLOT
,

5377 
	gBFD_RELOC_TILEGX_RELATIVE
,

5378 
	gBFD_RELOC_TILEGX_BROFF_X1
,

5379 
	gBFD_RELOC_TILEGX_JUMPOFF_X1
,

5380 
	gBFD_RELOC_TILEGX_JUMPOFF_X1_PLT
,

5381 
	gBFD_RELOC_TILEGX_IMM8_X0
,

5382 
	gBFD_RELOC_TILEGX_IMM8_Y0
,

5383 
	gBFD_RELOC_TILEGX_IMM8_X1
,

5384 
	gBFD_RELOC_TILEGX_IMM8_Y1
,

5385 
	gBFD_RELOC_TILEGX_DEST_IMM8_X1
,

5386 
	gBFD_RELOC_TILEGX_MT_IMM14_X1
,

5387 
	gBFD_RELOC_TILEGX_MF_IMM14_X1
,

5388 
	gBFD_RELOC_TILEGX_MMSTART_X0
,

5389 
	gBFD_RELOC_TILEGX_MMEND_X0
,

5390 
	gBFD_RELOC_TILEGX_SHAMT_X0
,

5391 
	gBFD_RELOC_TILEGX_SHAMT_X1
,

5392 
	gBFD_RELOC_TILEGX_SHAMT_Y0
,

5393 
	gBFD_RELOC_TILEGX_SHAMT_Y1
,

5394 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0
,

5395 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0
,

5396 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1
,

5397 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1
,

5398 
	gBFD_RELOC_TILEGX_IMM16_X0_HW2
,

5399 
	gBFD_RELOC_TILEGX_IMM16_X1_HW2
,

5400 
	gBFD_RELOC_TILEGX_IMM16_X0_HW3
,

5401 
	gBFD_RELOC_TILEGX_IMM16_X1_HW3
,

5402 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_LAST
,

5403 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_LAST
,

5404 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1_LAST
,

5405 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1_LAST
,

5406 
	gBFD_RELOC_TILEGX_IMM16_X0_HW2_LAST
,

5407 
	gBFD_RELOC_TILEGX_IMM16_X1_HW2_LAST
,

5408 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_PCREL
,

5409 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_PCREL
,

5410 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1_PCREL
,

5411 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1_PCREL
,

5412 
	gBFD_RELOC_TILEGX_IMM16_X0_HW2_PCREL
,

5413 
	gBFD_RELOC_TILEGX_IMM16_X1_HW2_PCREL
,

5414 
	gBFD_RELOC_TILEGX_IMM16_X0_HW3_PCREL
,

5415 
	gBFD_RELOC_TILEGX_IMM16_X1_HW3_PCREL
,

5416 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_PCREL
,

5417 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_PCREL
,

5418 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_PCREL
,

5419 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_PCREL
,

5420 
	gBFD_RELOC_TILEGX_IMM16_X0_HW2_LAST_PCREL
,

5421 
	gBFD_RELOC_TILEGX_IMM16_X1_HW2_LAST_PCREL
,

5422 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_GOT
,

5423 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_GOT
,

5424 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_GOT
,

5425 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_GOT
,

5426 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_GOT
,

5427 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_GOT
,

5428 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_TLS_GD
,

5429 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_TLS_GD
,

5430 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_TLS_LE
,

5431 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_TLS_LE
,

5432 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_TLS_LE
,

5433 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_TLS_LE
,

5434 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_TLS_LE
,

5435 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_TLS_LE
,

5436 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_TLS_GD
,

5437 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_TLS_GD
,

5438 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_TLS_GD
,

5439 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_TLS_GD
,

5440 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_TLS_IE
,

5441 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_TLS_IE
,

5442 
	gBFD_RELOC_TILEGX_IMM16_X0_HW0_LAST_TLS_IE
,

5443 
	gBFD_RELOC_TILEGX_IMM16_X1_HW0_LAST_TLS_IE
,

5444 
	gBFD_RELOC_TILEGX_IMM16_X0_HW1_LAST_TLS_IE
,

5445 
	gBFD_RELOC_TILEGX_IMM16_X1_HW1_LAST_TLS_IE
,

5446 
	gBFD_RELOC_TILEGX_TLS_DTPMOD64
,

5447 
	gBFD_RELOC_TILEGX_TLS_DTPOFF64
,

5448 
	gBFD_RELOC_TILEGX_TLS_TPOFF64
,

5449 
	gBFD_RELOC_TILEGX_TLS_DTPMOD32
,

5450 
	gBFD_RELOC_TILEGX_TLS_DTPOFF32
,

5451 
	gBFD_RELOC_TILEGX_TLS_TPOFF32
,

5452 
	gBFD_RELOC_TILEGX_TLS_GD_CALL
,

5453 
	gBFD_RELOC_TILEGX_IMM8_X0_TLS_GD_ADD
,

5454 
	gBFD_RELOC_TILEGX_IMM8_X1_TLS_GD_ADD
,

5455 
	gBFD_RELOC_TILEGX_IMM8_Y0_TLS_GD_ADD
,

5456 
	gBFD_RELOC_TILEGX_IMM8_Y1_TLS_GD_ADD
,

5457 
	gBFD_RELOC_TILEGX_TLS_IE_LOAD
,

5458 
	gBFD_RELOC_TILEGX_IMM8_X0_TLS_ADD
,

5459 
	gBFD_RELOC_TILEGX_IMM8_X1_TLS_ADD
,

5460 
	gBFD_RELOC_TILEGX_IMM8_Y0_TLS_ADD
,

5461 
	gBFD_RELOC_TILEGX_IMM8_Y1_TLS_ADD
,

5464 
	gBFD_RELOC_EPIPHANY_SIMM8
,

5467 
	gBFD_RELOC_EPIPHANY_SIMM24
,

5470 
	gBFD_RELOC_EPIPHANY_HIGH
,

5473 
	gBFD_RELOC_EPIPHANY_LOW
,

5476 
	gBFD_RELOC_EPIPHANY_SIMM11
,

5479 
	gBFD_RELOC_EPIPHANY_IMM11
,

5482 
	gBFD_RELOC_EPIPHANY_IMM8
,

5483 
	gBFD_RELOC_UNUSED
 };

5484 
bfd_ªloc_code_ªÆ
 
	tbfd_ªloc_code_ªÆ_ty≥
;

5485 
ªloc_howto_ty≥
 *
	gbfd_ªloc_ty≥_lookup


5486 (
bfd
 *
	gabfd
, 
bfd_ªloc_code_ªÆ_ty≥
 
	gcode
);

5487 
ªloc_howto_ty≥
 *
	gbfd_ªloc_«me_lookup


5488 (
bfd
 *
	gabfd
, c⁄° *
	gªloc_«me
);

5490 c⁄° *
bfd_gë_ªloc_code_«me
 (
bfd_ªloc_code_ªÆ_ty≥
 
code
);

5494 
	sbfd_symbﬁ


5505 
bfd
 *
	gthe_bfd
;

5509 c⁄° *
	g«me
;

5514 
symvÆue
 
	gvÆue
;

5517 
	#BSF_NO_FLAGS
 0x00

	)

5521 
	#BSF_LOCAL
 (1 << 0)

	)

5525 
	#BSF_GLOBAL
 (1 << 1)

	)

5529 
	#BSF_EXPORT
 
BSF_GLOBAL


	)

5537 
	#BSF_DEBUGGING
 (1 << 2)

	)

5541 
	#BSF_FUNCTION
 (1 << 3)

	)

5544 
	#BSF_KEEP
 (1 << 5)

	)

5545 
	#BSF_KEEP_G
 (1 << 6)

	)

5549 
	#BSF_WEAK
 (1 << 7)

	)

5553 
	#BSF_SECTION_SYM
 (1 << 8)

	)

5557 
	#BSF_OLD_COMMON
 (1 << 9)

	)

5564 
	#BSF_NOT_AT_END
 (1 << 10)

	)

5567 
	#BSF_CONSTRUCTOR
 (1 << 11)

	)

5573 
	#BSF_WARNING
 (1 << 12)

	)

5577 
	#BSF_INDIRECT
 (1 << 13)

	)

5581 
	#BSF_FILE
 (1 << 14)

	)

5584 
	#BSF_DYNAMIC
 (1 << 15)

	)

5588 
	#BSF_OBJECT
 (1 << 16)

	)

5593 
	#BSF_DEBUGGING_RELOC
 (1 << 17)

	)

5596 
	#BSF_THREAD_LOCAL
 (1 << 18)

	)

5600 
	#BSF_RELC
 (1 << 19)

	)

5604 
	#BSF_SRELC
 (1 << 20)

	)

5607 
	#BSF_SYNTHETIC
 (1 << 21)

	)

5613 
	#BSF_GNU_INDIRECT_FUNCTION
 (1 << 22)

	)

5617 
	#BSF_GNU_UNIQUE
 (1 << 23)

	)

5619 
Êagw‹d
 
	gÊags
;

5624 
bfd_£˘i⁄
 *
	g£˘i⁄
;

5629 *
	gp
;

5630 
bfd_vma
 
	gi
;

5632 
	gud©a
;

5634 
	tasymbﬁ
;

5636 
	#bfd_gë_symèb_uµî_bound
(
abfd
) \

5637 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_symèb_uµî_bound
, (abfd))

	)

5639 
bfd_boﬁón
 
bfd_is_loˇl_œbñ
 (
bfd
 *
abfd
, 
asymbﬁ
 *
sym
);

5641 
bfd_boﬁón
 
bfd_is_loˇl_œbñ_«me
 (
bfd
 *
abfd
, c⁄° *
«me
);

5643 
	#bfd_is_loˇl_œbñ_«me
(
abfd
, 
«me
) \

5644 
	`BFD_SEND
 (
abfd
, 
_bfd_is_loˇl_œbñ_«me
, (abfd, 
«me
))

	)

5646 
bfd_boﬁón
 
bfd_is_èrgë_•ecül_symbﬁ
 (
bfd
 *
abfd
, 
asymbﬁ
 *
sym
);

5648 
	#bfd_is_èrgë_•ecül_symbﬁ
(
abfd
, 
sym
) \

5649 
	`BFD_SEND
 (
abfd
, 
_bfd_is_èrgë_•ecül_symbﬁ
, (abfd, 
sym
))

	)

5651 
	#bfd_ˇn⁄iˇlize_symèb
(
abfd
, 
loˇti⁄
) \

5652 
	`BFD_SEND
 (
abfd
, 
_bfd_ˇn⁄iˇlize_symèb
, (abfd, 
loˇti⁄
))

	)

5654 
bfd_boﬁón
 
	gbfd_£t_symèb


5655 (
bfd
 *
	gabfd
, 
asymbﬁ
 **
	gloˇti⁄
, 
	gcou¡
);

5657 
bfd_¥öt_symbﬁ_v™df
 (
bfd
 *
abfd
, *
fûe
, 
asymbﬁ
 *
symbﬁ
);

5659 
	#bfd_make_em±y_symbﬁ
(
abfd
) \

5660 
	`BFD_SEND
 (
abfd
, 
_bfd_make_em±y_symbﬁ
, (abfd))

	)

5662 
asymbﬁ
 *
_bfd_gíîic_make_em±y_symbﬁ
 (
bfd
 *);

5664 
	#bfd_make_debug_symbﬁ
(
abfd
,
±r
,
size
) \

5665 
	`BFD_SEND
 (
abfd
, 
_bfd_make_debug_symbﬁ
, (abfd, 
±r
, 
size
))

	)

5667 
bfd_decode_sym˛ass
 (
asymbﬁ
 *
symbﬁ
);

5669 
bfd_boﬁón
 
bfd_is_undeföed_sym˛ass
 (
sym˛ass
);

5671 
bfd_symbﬁ_öfo
 (
asymbﬁ
 *
symbﬁ
, 
symbﬁ_öfo
 *
ªt
);

5673 
bfd_boﬁón
 
	gbfd_c›y_¥iv©e_symbﬁ_d©a


5674 (
bfd
 *
	gibfd
, 
asymbﬁ
 *
	gisym
, bfd *
	gobfd
,ásymbﬁ *
	gosym
);

5676 
	#bfd_c›y_¥iv©e_symbﬁ_d©a
(
ibfd
, 
isymbﬁ
, 
obfd
, 
osymbﬁ
) \

5677 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_symbﬁ_d©a
, \

5678 (
ibfd
, 
isymbﬁ
, 
obfd
, 
osymbﬁ
))

	)

5681 
	ebfd_dúe˘i⁄


5683 
	gno_dúe˘i⁄
 = 0,

5684 
	gªad_dúe˘i⁄
 = 1,

5685 
	gwrôe_dúe˘i⁄
 = 2,

5686 
	gbŸh_dúe˘i⁄
 = 3

5689 
	sbfd


5692 
	gid
;

5695 c⁄° *
	gfûíame
;

5698 c⁄° 
bfd_èrgë
 *
	gxvec
;

5702 *
	gio°ªam
;

5703 c⁄° 
bfd_iovec
 *
	giovec
;

5707 
bfd
 *
	gÃu_¥ev
, *
	gÃu_√xt
;

5711 
ufûe_±r
 
	gwhîe
;

5714 
	gmtime
;

5717 
	gifd
;

5720 
bfd_f‹m©
 
	gf‹m©
;

5723 
bfd_dúe˘i⁄
 
	gdúe˘i⁄
;

5726 
Êagw‹d
 
	gÊags
;

5735 
	#BFD_NO_FLAGS
 0x00

	)

5738 
	#HAS_RELOC
 0x01

	)

5741 
	#EXEC_P
 0x02

	)

5745 
	#HAS_LINENO
 0x04

	)

5748 
	#HAS_DEBUG
 0x08

	)

5751 
	#HAS_SYMS
 0x10

	)

5755 
	#HAS_LOCALS
 0x20

	)

5758 
	#DYNAMIC
 0x40

	)

5763 
	#WP_TEXT
 0x80

	)

5767 
	#D_PAGED
 0x100

	)

5772 
	#BFD_IS_RELAXABLE
 0x200

	)

5778 
	#BFD_TRADITIONAL_FORMAT
 0x400

	)

5783 
	#BFD_IN_MEMORY
 0x800

	)

5786 
	#HAS_LOAD_PAGE
 0x1000

	)

5790 
	#BFD_LINKER_CREATED
 0x2000

	)

5795 
	#BFD_DETERMINISTIC_OUTPUT
 0x4000

	)

5798 
	#BFD_COMPRESS
 0x8000

	)

5801 
	#BFD_DECOMPRESS
 0x10000

	)

5804 
	#BFD_PLUGIN
 0x20000

	)

5807 
	#BFD_FLAGS_SAVED
 \

5808 (
BFD_IN_MEMORY
 | 
BFD_COMPRESS
 | 
BFD_DECOMPRESS
 | 
BFD_PLUGIN
)

	)

5811 
	#BFD_FLAGS_FOR_BFD_USE_MASK
 \

5812 (
BFD_IN_MEMORY
 | 
BFD_COMPRESS
 | 
BFD_DECOMPRESS
 | 
BFD_LINKER_CREATED
 \

5813 | 
BFD_PLUGIN
 | 
BFD_TRADITIONAL_FORMAT
 | 
BFD_DETERMINISTIC_OUTPUT
)

	)

5818 
ufûe_±r
 
	g‹igö
;

5825 
ufûe_±r
 
	g¥oxy_‹igö
;

5828 
bfd_hash_èbÀ
 
	g£˘i⁄_hèb
;

5831 
bfd_£˘i⁄
 *
	g£˘i⁄s
;

5834 
bfd_£˘i⁄
 *
	g£˘i⁄_œ°
;

5837 
	g£˘i⁄_cou¡
;

5841 
bfd_vma
 
	g°¨t_addªss
;

5844 
	gsymcou¡
;

5848 
bfd_symbﬁ
 **
	goutsymbﬁs
;

5851 
	gdynsymcou¡
;

5854 c⁄° 
bfd_¨ch_öfo
 *
	g¨ch_öfo
;

5857 *
	g¨ñt_d©a
;

5858 
bfd
 *
	gmy_¨chive
;

5859 
bfd
 *
	g¨chive_√xt
;

5860 
bfd
 *
	g¨chive_hód
;

5861 
bfd
 *
	g√°ed_¨chives
;

5865 
bfd
 *
	glök_√xt
;

5869 
	g¨chive_∑ss
;

5874 
aout_d©a_°ru˘
 *
	gaout_d©a
;

5875 
¨td©a
 *
	gaout_¨_d©a
;

5876 
_ﬂsys_d©a
 *
	gﬂsys_obj_d©a
;

5877 
_ﬂsys_¨_d©a
 *
	gﬂsys_¨_d©a
;

5878 
coff_td©a
 *
	gcoff_obj_d©a
;

5879 
≥_td©a
 *
	g≥_obj_d©a
;

5880 
xcoff_td©a
 *
	gxcoff_obj_d©a
;

5881 
ecoff_td©a
 *
	gecoff_obj_d©a
;

5882 
õì_d©a_°ru˘
 *
	gõì_d©a
;

5883 
õì_¨_d©a_°ru˘
 *
	gõì_¨_d©a
;

5884 
§ec_d©a_°ru˘
 *
	g§ec_d©a
;

5885 
vîûog_d©a_°ru˘
 *
	gvîûog_d©a
;

5886 
ihex_d©a_°ru˘
 *
	gihex_d©a
;

5887 
ãkhex_d©a_°ru˘
 *
	gãkhex_d©a
;

5888 
ñf_obj_td©a
 *
	gñf_obj_d©a
;

5889 
∆m_obj_td©a
 *
	g∆m_obj_d©a
;

5890 
bout_d©a_°ru˘
 *
	gbout_d©a
;

5891 
mmo_d©a_°ru˘
 *
	gmmo_d©a
;

5892 
sun_c‹e_°ru˘
 *
	gsun_c‹e_d©a
;

5893 
sco5_c‹e_°ru˘
 *
	gsco5_c‹e_d©a
;

5894 
åad_c‹e_°ru˘
 *
	gåad_c‹e_d©a
;

5895 
som_d©a_°ru˘
 *
	gsom_d©a
;

5896 
hpux_c‹e_°ru˘
 *
	ghpux_c‹e_d©a
;

5897 
hµabsd_c‹e_°ru˘
 *
	ghµabsd_c‹e_d©a
;

5898 
sgi_c‹e_°ru˘
 *
	gsgi_c‹e_d©a
;

5899 
lynx_c‹e_°ru˘
 *
	glynx_c‹e_d©a
;

5900 
osf_c‹e_°ru˘
 *
	gosf_c‹e_d©a
;

5901 
cisco_c‹e_°ru˘
 *
	gcisco_c‹e_d©a
;

5902 
vîßdos_d©a_°ru˘
 *
	gvîßdos_d©a
;

5903 
√tbsd_c‹e_°ru˘
 *
	g√tbsd_c‹e_d©a
;

5904 
mach_o_d©a_°ru˘
 *
	gmach_o_d©a
;

5905 
mach_o_Át_d©a_°ru˘
 *
	gmach_o_Át_d©a
;

5906 
∂ugö_d©a_°ru˘
 *
	g∂ugö_d©a
;

5907 
bfd_≥f_d©a_°ru˘
 *
	g≥f_d©a
;

5908 
bfd_≥f_xlib_d©a_°ru˘
 *
	g≥f_xlib_d©a
;

5909 
bfd_sym_d©a_°ru˘
 *
	gsym_d©a
;

5910 *
	g™y
;

5912 
	gtd©a
;

5915 *
	gu§d©a
;

5920 *
	gmem‹y
;

5924 
	gˇchóbÀ
 : 1;

5929 
	gèrgë_deÁu…ed
 : 1;

5932 
	g›íed_⁄˚
 : 1;

5936 
	gmtime_£t
 : 1;

5939 
	gno_exp‹t
 : 1;

5943 
	gouçut_has_begun
 : 1;

5946 
	ghas_¨m≠
 : 1;

5949 
	gis_thö_¨chive
 : 1;

5953 
	g£À˘ive_£¨ch
 : 1;

5956 
	ebfd_îr‹


5958 
	gbfd_îr‹_no_îr‹
 = 0,

5959 
	gbfd_îr‹_sy°em_ˇŒ
,

5960 
	gbfd_îr‹_övÆid_èrgë
,

5961 
	gbfd_îr‹_wr⁄g_f‹m©
,

5962 
	gbfd_îr‹_wr⁄g_obje˘_f‹m©
,

5963 
	gbfd_îr‹_övÆid_›î©i⁄
,

5964 
	gbfd_îr‹_no_mem‹y
,

5965 
	gbfd_îr‹_no_symbﬁs
,

5966 
	gbfd_îr‹_no_¨m≠
,

5967 
	gbfd_îr‹_no_m‹e_¨chived_fûes
,

5968 
	gbfd_îr‹_mÆf‹med_¨chive
,

5969 
	gbfd_îr‹_fûe_nŸ_ªcognized
,

5970 
	gbfd_îr‹_fûe_ambiguou¶y_ªcognized
,

5971 
	gbfd_îr‹_no_c⁄ã¡s
,

5972 
	gbfd_îr‹_n⁄ª¥e£¡abÀ_£˘i⁄
,

5973 
	gbfd_îr‹_no_debug_£˘i⁄
,

5974 
	gbfd_îr‹_bad_vÆue
,

5975 
	gbfd_îr‹_fûe_åunˇãd
,

5976 
	gbfd_îr‹_fûe_too_big
,

5977 
	gbfd_îr‹_⁄_öput
,

5978 
	gbfd_îr‹_övÆid_îr‹_code


5980 
	tbfd_îr‹_ty≥
;

5982 
bfd_îr‹_ty≥
 
bfd_gë_îr‹
 ();

5984 
bfd_£t_îr‹
 (
bfd_îr‹_ty≥
 
îr‹_èg
, ...);

5986 c⁄° *
bfd_îrmsg
 (
bfd_îr‹_ty≥
 
îr‹_èg
);

5988 
bfd_≥º‹
 (c⁄° *
mesßge
);

5990 (*
	gbfd_îr‹_h™dÀr_ty≥
) (const *, ...);

5992 
bfd_îr‹_h™dÀr_ty≥
 
bfd_£t_îr‹_h™dÀr
 (bfd_error_handler_type);

5994 
bfd_£t_îr‹_¥ogøm_«me
 (const *);

5996 
bfd_îr‹_h™dÀr_ty≥
 
bfd_gë_îr‹_h™dÀr
 ();

5998 (*
	gbfd_as£π_h™dÀr_ty≥
Ë(c⁄° *
	tbfd_f‹m©msg
,

5999 c⁄° *
	tbfd_vîsi⁄
,

6000 c⁄° *
	tbfd_fûe
,

6001 
	tbfd_löe
);

6003 
bfd_as£π_h™dÀr_ty≥
 
bfd_£t_as£π_h™dÀr
 (bfd_assert_handler_type);

6005 
bfd_as£π_h™dÀr_ty≥
 
bfd_gë_as£π_h™dÀr
 ();

6007 
bfd_gë_ªloc_uµî_bound
 (
bfd
 *
abfd
, 
a£˘i⁄
 *
£˘
);

6009 
	gbfd_ˇn⁄iˇlize_ªloc


6010 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
¨ñít
 **
	gloc
, 
asymbﬁ
 **
	gsyms
);

6012 
	gbfd_£t_ªloc


6013 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
¨ñít
 **
	gªl
, 
	gcou¡
);

6015 
bfd_boﬁón
 
bfd_£t_fûe_Êags
 (
bfd
 *
abfd
, 
Êagw‹d
 
Êags
);

6017 
bfd_gë_¨ch_size
 (
bfd
 *
abfd
);

6019 
bfd_gë_sign_exãnd_vma
 (
bfd
 *
abfd
);

6021 
bfd_boﬁón
 
bfd_£t_°¨t_addªss
 (
bfd
 *
abfd
, 
bfd_vma
 
vma
);

6023 
bfd_gë_gp_size
 (
bfd
 *
abfd
);

6025 
bfd_£t_gp_size
 (
bfd
 *
abfd
, 
i
);

6027 
bfd_vma
 
bfd_sˇn_vma
 (c⁄° *
°rög
, c⁄° **
íd
, 
ba£
);

6029 
bfd_boﬁón
 
bfd_c›y_¥iv©e_hódî_d©a
 (
bfd
 *
ibfd
, bfd *
obfd
);

6031 
	#bfd_c›y_¥iv©e_hódî_d©a
(
ibfd
, 
obfd
) \

6032 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_hódî_d©a
, \

6033 (
ibfd
, 
obfd
))

	)

6034 
bfd_boﬁón
 
bfd_c›y_¥iv©e_bfd_d©a
 (
bfd
 *
ibfd
, bfd *
obfd
);

6036 
	#bfd_c›y_¥iv©e_bfd_d©a
(
ibfd
, 
obfd
) \

6037 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_bfd_d©a
, \

6038 (
ibfd
, 
obfd
))

	)

6039 
bfd_boﬁón
 
bfd_mîge_¥iv©e_bfd_d©a
 (
bfd
 *
ibfd
, bfd *
obfd
);

6041 
	#bfd_mîge_¥iv©e_bfd_d©a
(
ibfd
, 
obfd
) \

6042 
	`BFD_SEND
 (
obfd
, 
_bfd_mîge_¥iv©e_bfd_d©a
, \

6043 (
ibfd
, 
obfd
))

	)

6044 
bfd_boﬁón
 
bfd_£t_¥iv©e_Êags
 (
bfd
 *
abfd
, 
Êagw‹d
 
Êags
);

6046 
	#bfd_£t_¥iv©e_Êags
(
abfd
, 
Êags
) \

6047 
	`BFD_SEND
 (
abfd
, 
_bfd_£t_¥iv©e_Êags
, (abfd, 
Êags
))

	)

6048 
	#bfd_sizeof_hódîs
(
abfd
, 
öfo
) \

6049 
	`BFD_SEND
 (
abfd
, 
_bfd_sizeof_hódîs
, (abfd, 
öfo
))

	)

6051 
	#bfd_föd_√¨e°_löe
(
abfd
, 
£c
, 
syms
, 
off
, 
fûe
, 
func
, 
löe
) \

6052 
	`BFD_SEND
 (
abfd
, 
_bfd_föd_√¨e°_löe
, \

6053 (
abfd
, 
£c
, 
syms
, 
off
, 
fûe
, 
func
, 
löe
))

	)

6055 
	#bfd_föd_√¨e°_löe_dis¸imö©‹
(
abfd
, 
£c
, 
syms
, 
off
, 
fûe
, 
func
, \

6056 
löe
, 
disc
) \

6057 
	`BFD_SEND
 (
abfd
, 
_bfd_föd_√¨e°_löe_dis¸imö©‹
, \

6058 (
abfd
, 
£c
, 
syms
, 
off
, 
fûe
, 
func
, 
löe
, 
disc
))

	)

6060 
	#bfd_föd_löe
(
abfd
, 
syms
, 
sym
, 
fûe
, 
löe
) \

6061 
	`BFD_SEND
 (
abfd
, 
_bfd_föd_löe
, \

6062 (
abfd
, 
syms
, 
sym
, 
fûe
, 
löe
))

	)

6064 
	#bfd_föd_ölöî_öfo
(
abfd
, 
fûe
, 
func
, 
löe
) \

6065 
	`BFD_SEND
 (
abfd
, 
_bfd_föd_ölöî_öfo
, \

6066 (
abfd
, 
fûe
, 
func
, 
löe
))

	)

6068 
	#bfd_debug_öfo_°¨t
(
abfd
) \

6069 
	`BFD_SEND
 (
abfd
, 
_bfd_debug_öfo_°¨t
, (abfd))

	)

6071 
	#bfd_debug_öfo_íd
(
abfd
) \

6072 
	`BFD_SEND
 (
abfd
, 
_bfd_debug_öfo_íd
, (abfd))

	)

6074 
	#bfd_debug_öfo_accumuœã
(
abfd
, 
£˘i⁄
) \

6075 
	`BFD_SEND
 (
abfd
, 
_bfd_debug_öfo_accumuœã
, (abfd, 
£˘i⁄
))

	)

6077 
	#bfd_°©_¨ch_ñt
(
abfd
, 
°©
) \

6078 
	`BFD_SEND
 (
abfd
, 
_bfd_°©_¨ch_ñt
,◊bfd, 
°©
))

	)

6080 
	#bfd_upd©e_¨m≠_time°amp
(
abfd
) \

6081 
	`BFD_SEND
 (
abfd
, 
_bfd_upd©e_¨m≠_time°amp
, (abfd))

	)

6083 
	#bfd_£t_¨ch_mach
(
abfd
, 
¨ch
, 
mach
)\

6084 
	`BFD_SEND
 ( 
abfd
, 
_bfd_£t_¨ch_mach
, (abfd, 
¨ch
, 
mach
))

	)

6086 
	#bfd_ªœx_£˘i⁄
(
abfd
, 
£˘i⁄
, 
lök_öfo
, 
agaö
) \

6087 
	`BFD_SEND
 (
abfd
, 
_bfd_ªœx_£˘i⁄
, (abfd, 
£˘i⁄
, 
lök_öfo
, 
agaö
))

	)

6089 
	#bfd_gc_£˘i⁄s
(
abfd
, 
lök_öfo
) \

6090 
	`BFD_SEND
 (
abfd
, 
_bfd_gc_£˘i⁄s
, (abfd, 
lök_öfo
))

	)

6092 
	#bfd_lookup_£˘i⁄_Êags
(
lök_öfo
, 
Êag_öfo
, 
£˘i⁄
) \

6093 
	`BFD_SEND
 (
abfd
, 
_bfd_lookup_£˘i⁄_Êags
, (
lök_öfo
, 
Êag_öfo
, 
£˘i⁄
))

	)

6095 
	#bfd_mîge_£˘i⁄s
(
abfd
, 
lök_öfo
) \

6096 
	`BFD_SEND
 (
abfd
, 
_bfd_mîge_£˘i⁄s
, (abfd, 
lök_öfo
))

	)

6098 
	#bfd_is_group_£˘i⁄
(
abfd
, 
£c
) \

6099 
	`BFD_SEND
 (
abfd
, 
_bfd_is_group_£˘i⁄
, (abfd, 
£c
))

	)

6101 
	#bfd_disˇrd_group
(
abfd
, 
£c
) \

6102 
	`BFD_SEND
 (
abfd
, 
_bfd_disˇrd_group
, (abfd, 
£c
))

	)

6104 
	#bfd_lök_hash_èbÀ_¸óã
(
abfd
) \

6105 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_hash_èbÀ_¸óã
, (abfd))

	)

6107 
	#bfd_lök_hash_èbÀ_‰ì
(
abfd
, 
hash
) \

6108 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_hash_èbÀ_‰ì
, (
hash
))

	)

6110 
	#bfd_lök_add_symbﬁs
(
abfd
, 
öfo
) \

6111 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_add_symbﬁs
, (abfd, 
öfo
))

	)

6113 
	#bfd_lök_ju°_syms
(
abfd
, 
£c
, 
öfo
) \

6114 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_ju°_syms
, (
£c
, 
öfo
))

	)

6116 
	#bfd_föÆ_lök
(
abfd
, 
öfo
) \

6117 
	`BFD_SEND
 (
abfd
, 
_bfd_föÆ_lök
, (abfd, 
öfo
))

	)

6119 
	#bfd_‰ì_ˇched_öfo
(
abfd
) \

6120 
	`BFD_SEND
 (
abfd
, 
_bfd_‰ì_ˇched_öfo
, (abfd))

	)

6122 
	#bfd_gë_dy«mic_symèb_uµî_bound
(
abfd
) \

6123 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_dy«mic_symèb_uµî_bound
, (abfd))

	)

6125 
	#bfd_¥öt_¥iv©e_bfd_d©a
(
abfd
, 
fûe
)\

6126 
	`BFD_SEND
 (
abfd
, 
_bfd_¥öt_¥iv©e_bfd_d©a
, (abfd, 
fûe
))

	)

6128 
	#bfd_ˇn⁄iˇlize_dy«mic_symèb
(
abfd
, 
asymbﬁs
) \

6129 
	`BFD_SEND
 (
abfd
, 
_bfd_ˇn⁄iˇlize_dy«mic_symèb
, (abfd, 
asymbﬁs
))

	)

6131 
	#bfd_gë_sy¡hëic_symèb
(
abfd
, 
cou¡
, 
syms
, 
dyncou¡
, 
dynsyms
, 
ªt
) \

6132 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_sy¡hëic_symèb
, (abfd, 
cou¡
, 
syms
, \

6133 
dyncou¡
, 
dynsyms
, 
ªt
))

	)

6135 
	#bfd_gë_dy«mic_ªloc_uµî_bound
(
abfd
) \

6136 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_dy«mic_ªloc_uµî_bound
, (abfd))

	)

6138 
	#bfd_ˇn⁄iˇlize_dy«mic_ªloc
(
abfd
, 
¨ñs
, 
asyms
) \

6139 
	`BFD_SEND
 (
abfd
, 
_bfd_ˇn⁄iˇlize_dy«mic_ªloc
, (abfd, 
¨ñs
, 
asyms
))

	)

6141 
bfd_byã
 *
bfd_gë_ªloˇãd_£˘i⁄_c⁄ã¡s


6142 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_‹dî
 *, 
bfd_byã
 *,

6143 
bfd_boﬁón
, 
asymbﬁ
 **);

6145 
bfd_boﬁón
 
bfd_Æt_mach_code
 (
bfd
 *
abfd
, 
Æã∫©ive
);

6147 
	sbfd_¥e£rve


6149 *
	gm¨kî
;

6150 *
	gtd©a
;

6151 
Êagw‹d
 
	gÊags
;

6152 c⁄° 
bfd_¨ch_öfo
 *
	g¨ch_öfo
;

6153 
bfd_£˘i⁄
 *
	g£˘i⁄s
;

6154 
bfd_£˘i⁄
 *
	g£˘i⁄_œ°
;

6155 
	g£˘i⁄_cou¡
;

6156 
bfd_hash_èbÀ
 
	g£˘i⁄_hèb
;

6159 
bfd_boﬁón
 
bfd_¥e£rve_ßve
 (
bfd
 *, 
bfd_¥e£rve
 *);

6161 
bfd_¥e£rve_ª°‹e
 (
bfd
 *, 
bfd_¥e£rve
 *);

6163 
bfd_¥e£rve_föish
 (
bfd
 *, 
bfd_¥e£rve
 *);

6165 
bfd_vma
 
bfd_emul_gë_max∑gesize
 (const *);

6167 
bfd_emul_£t_max∑gesize
 (c⁄° *, 
bfd_vma
);

6169 
bfd_vma
 
bfd_emul_gë_comm⁄∑gesize
 (const *);

6171 
bfd_emul_£t_comm⁄∑gesize
 (c⁄° *, 
bfd_vma
);

6173 *
bfd_dem™gÀ
 (
bfd
 *, const *, );

6176 
symödex
 
	gbfd_gë_√xt_m≠ít


6177 (
bfd
 *
	gabfd
, 
symödex
 
	g¥evious
, 
ˇrsym
 **
	gsym
);

6179 
bfd_boﬁón
 
bfd_£t_¨chive_hód
 (
bfd
 *
ouçut
, bfd *
√w_hód
);

6181 
bfd
 *
bfd_›ír_√xt_¨chived_fûe
 (bfd *
¨chive
, bfd *
¥evious
);

6184 c⁄° *
bfd_c‹e_fûe_Áûög_comm™d
 (
bfd
 *
abfd
);

6186 
bfd_c‹e_fûe_Áûög_sig«l
 (
bfd
 *
abfd
);

6188 
bfd_c‹e_fûe_pid
 (
bfd
 *
abfd
);

6190 
bfd_boﬁón
 
	gc‹e_fûe_m©ches_execuèbÀ_p


6191 (
bfd
 *
	gc‹e_bfd
, bfd *
	gexec_bfd
);

6193 
bfd_boﬁón
 
	ggíîic_c‹e_fûe_m©ches_execuèbÀ_p


6194 (
bfd
 *
	gc‹e_bfd
, bfd *
	gexec_bfd
);

6197 
	#BFD_SEND
(
bfd
, 
mesßge
, 
¨gli°
) \

6198 ((*((
bfd
)->
xvec
->
mesßge
)Ë
¨gli°
)

	)

6200 #ifde‡
DEBUG_BFD_SEND


6201 #unde‡
BFD_SEND


6202 
	#BFD_SEND
(
bfd
, 
mesßge
, 
¨gli°
) \

6203 (((
bfd
Ë&& (bfd)->
xvec
 && (bfd)->xvec->
mesßge
) ? \

6204 ((*((
bfd
)->
xvec
->
mesßge
)Ë
¨gli°
) : \

6205 (
	`bfd_as£π
 (
__FILE__
,
__LINE__
), 
NULL
))

	)

6207 
	#BFD_SEND_FMT
(
bfd
, 
mesßge
, 
¨gli°
) \

6208 (((
bfd
)->
xvec
->
mesßge
[(Ë((bfd)->
f‹m©
)]Ë
¨gli°
)

	)

6210 #ifde‡
DEBUG_BFD_SEND


6211 #unde‡
BFD_SEND_FMT


6212 
	#BFD_SEND_FMT
(
bfd
, 
mesßge
, 
¨gli°
) \

6213 (((
bfd
Ë&& (bfd)->
xvec
 && (bfd)->xvec->
mesßge
) ? \

6214 (((
bfd
)->
xvec
->
mesßge
[(Ë((bfd)->
f‹m©
)]Ë
¨gli°
) : \

6215 (
	`bfd_as£π
 (
__FILE__
,
__LINE__
), 
NULL
))

	)

6218 
	ebfd_Êavour


6220 
	gbfd_èrgë_unknown_Êavour
,

6221 
	gbfd_èrgë_aout_Êavour
,

6222 
	gbfd_èrgë_coff_Êavour
,

6223 
	gbfd_èrgë_ecoff_Êavour
,

6224 
	gbfd_èrgë_xcoff_Êavour
,

6225 
	gbfd_èrgë_ñf_Êavour
,

6226 
	gbfd_èrgë_õì_Êavour
,

6227 
	gbfd_èrgë_∆m_Êavour
,

6228 
	gbfd_èrgë_ﬂsys_Êavour
,

6229 
	gbfd_èrgë_ãkhex_Êavour
,

6230 
	gbfd_èrgë_§ec_Êavour
,

6231 
	gbfd_èrgë_vîûog_Êavour
,

6232 
	gbfd_èrgë_ihex_Êavour
,

6233 
	gbfd_èrgë_som_Êavour
,

6234 
	gbfd_èrgë_os9k_Êavour
,

6235 
	gbfd_èrgë_vîßdos_Êavour
,

6236 
	gbfd_èrgë_msdos_Êavour
,

6237 
	gbfd_èrgë_ovax_Êavour
,

6238 
	gbfd_èrgë_evax_Êavour
,

6239 
	gbfd_èrgë_mmo_Êavour
,

6240 
	gbfd_èrgë_mach_o_Êavour
,

6241 
	gbfd_èrgë_≥f_Êavour
,

6242 
	gbfd_èrgë_≥f_xlib_Êavour
,

6243 
	gbfd_èrgë_sym_Êavour


6246 
	ebfd_ídün
 { 
	gBFD_ENDIAN_BIG
, 
	gBFD_ENDIAN_LITTLE
, 
	gBFD_ENDIAN_UNKNOWN
 };

6249 
bfd_lök_öfo
 
	t_bfd_lök_öfo
;

6252 
Êag_öfo
 
	tÊag_öfo
;

6254 
	sbfd_èrgë


6257 *
	g«me
;

6261 
bfd_Êavour
 
	gÊavour
;

6264 
bfd_ídün
 
	gbyã‹dî
;

6267 
bfd_ídün
 
	ghódî_byã‹dî
;

6271 
Êagw‹d
 
	gobje˘_Êags
;

6275 
Êagw‹d
 
	g£˘i⁄_Êags
;

6279 
	gsymbﬁ_Àadög_ch¨
;

6282 
	g¨_∑d_ch¨
;

6285 
	g¨_max_«mñí
;

6289 
	gm©ch_¥i‹ôy
;

6294 
bfd_uöt64_t
 (*
bfd_gëx64
) (const *);

6295 
bfd_öt64_t
 (*
bfd_gëx_sig√d_64
) (const *);

6296 (*
	gbfd_putx64
Ë(
	gbfd_uöt64_t
, *);

6297 
bfd_vma
 (*
bfd_gëx32
) (const *);

6298 
bfd_sig√d_vma
 (*
bfd_gëx_sig√d_32
) (const *);

6299 (*
	gbfd_putx32
Ë(
	gbfd_vma
, *);

6300 
bfd_vma
 (*
bfd_gëx16
) (const *);

6301 
bfd_sig√d_vma
 (*
bfd_gëx_sig√d_16
) (const *);

6302 (*
	gbfd_putx16
Ë(
	gbfd_vma
, *);

6305 
bfd_uöt64_t
 (*
bfd_h_gëx64
) (const *);

6306 
bfd_öt64_t
 (*
bfd_h_gëx_sig√d_64
) (const *);

6307 (*
	gbfd_h_putx64
Ë(
	gbfd_uöt64_t
, *);

6308 
bfd_vma
 (*
bfd_h_gëx32
) (const *);

6309 
bfd_sig√d_vma
 (*
bfd_h_gëx_sig√d_32
) (const *);

6310 (*
	gbfd_h_putx32
Ë(
	gbfd_vma
, *);

6311 
bfd_vma
 (*
bfd_h_gëx16
) (const *);

6312 
bfd_sig√d_vma
 (*
bfd_h_gëx_sig√d_16
) (const *);

6313 (*
	gbfd_h_putx16
Ë(
	gbfd_vma
, *);

6319 c⁄° 
	gbfd_èrgë
 *(*
	g_bfd_check_f‹m©
[
bfd_ty≥_íd
]Ë(
	gbfd
 *);

6322 
bfd_boﬁón
 (*
_bfd_£t_f‹m©
[
bfd_ty≥_íd
]Ë(
	gbfd
 *);

6325 
bfd_boﬁón
 (*
_bfd_wrôe_c⁄ã¡s
[
bfd_ty≥_íd
]Ë(
	gbfd
 *);

6329 
	#BFD_JUMP_TABLE_GENERIC
(
NAME
) \

6330 
NAME
##
_˛o£_™d_˛ónup
, \

6331 
NAME
##
_bfd_‰ì_ˇched_öfo
, \

6332 
NAME
##
_√w_£˘i⁄_hook
, \

6333 
NAME
##
_gë_£˘i⁄_c⁄ã¡s
, \

6334 
NAME
##
_gë_£˘i⁄_c⁄ã¡s_ö_wödow


	)

6337 
bfd_boﬁón
 (*
_˛o£_™d_˛ónup
Ë(
	gbfd
 *);

6339 
bfd_boﬁón
 (*
_bfd_‰ì_ˇched_öfo
Ë(
	gbfd
 *);

6341 
bfd_boﬁón
 (*
_√w_£˘i⁄_hook
Ë(
	gbfd
 *, 
	g£c_±r
);

6343 
bfd_boﬁón
 (*
_bfd_gë_£˘i⁄_c⁄ã¡s
)

6344 (
	gbfd
 *, 
	g£c_±r
, *, 
	gfûe_±r
, 
	gbfd_size_ty≥
);

6345 
bfd_boﬁón
 (*
_bfd_gë_£˘i⁄_c⁄ã¡s_ö_wödow
)

6346 (
	gbfd
 *, 
	g£c_±r
, 
	gbfd_wödow
 *, 
	gfûe_±r
, 
	gbfd_size_ty≥
);

6349 
	#BFD_JUMP_TABLE_COPY
(
NAME
) \

6350 
NAME
##
_bfd_c›y_¥iv©e_bfd_d©a
, \

6351 
NAME
##
_bfd_mîge_¥iv©e_bfd_d©a
, \

6352 
_bfd_gíîic_öô_¥iv©e_£˘i⁄_d©a
, \

6353 
NAME
##
_bfd_c›y_¥iv©e_£˘i⁄_d©a
, \

6354 
NAME
##
_bfd_c›y_¥iv©e_symbﬁ_d©a
, \

6355 
NAME
##
_bfd_c›y_¥iv©e_hódî_d©a
, \

6356 
NAME
##
_bfd_£t_¥iv©e_Êags
, \

6357 
NAME
##
_bfd_¥öt_¥iv©e_bfd_d©a


	)

6361 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_bfd_d©a
Ë(
	gbfd
 *, bfd *);

6364 
bfd_boﬁón
 (*
_bfd_mîge_¥iv©e_bfd_d©a
Ë(
	gbfd
 *, bfd *);

6367 
	#bfd_öô_¥iv©e_£˘i⁄_d©a
(
ibfd
, 
i£c
, 
obfd
, 
o£c
, 
lök_öfo
) \

6368 
	`BFD_SEND
 (
obfd
, 
_bfd_öô_¥iv©e_£˘i⁄_d©a
, (
ibfd
, 
i£c
, obfd, 
o£c
, 
lök_öfo
))

	)

6369 
bfd_boﬁón
 (*
_bfd_öô_¥iv©e_£˘i⁄_d©a
)

6370 (
	gbfd
 *, 
	g£c_±r
, bfd *, sec_±r, 
	gbfd_lök_öfo
 *);

6373 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_£˘i⁄_d©a
)

6374 (
	gbfd
 *, 
	g£c_±r
, bfd *, sec_ptr);

6377 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_symbﬁ_d©a
)

6378 (
	gbfd
 *, 
	gasymbﬁ
 *, bfd *,ásymbol *);

6381 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_hódî_d©a
)

6382 (
	gbfd
 *, bfd *);

6384 
bfd_boﬁón
 (*
_bfd_£t_¥iv©e_Êags
Ë(
	gbfd
 *, 
	gÊagw‹d
);

6387 
bfd_boﬁón
 (*
_bfd_¥öt_¥iv©e_bfd_d©a
Ë(
	gbfd
 *, *);

6390 
	#BFD_JUMP_TABLE_CORE
(
NAME
) \

6391 
NAME
##
_c‹e_fûe_Áûög_comm™d
, \

6392 
NAME
##
_c‹e_fûe_Áûög_sig«l
, \

6393 
NAME
##
_c‹e_fûe_m©ches_execuèbÀ_p
, \

6394 
NAME
##
_c‹e_fûe_pid


	)

6396 * (*
	g_c‹e_fûe_Áûög_comm™d
Ë(
	gbfd
 *);

6397 (*
	g_c‹e_fûe_Áûög_sig«l
Ë(
	gbfd
 *);

6398 
bfd_boﬁón
 (*
_c‹e_fûe_m©ches_execuèbÀ_p
Ë(
	gbfd
 *, bfd *);

6399 (*
	g_c‹e_fûe_pid
Ë(
	gbfd
 *);

6402 
	#BFD_JUMP_TABLE_ARCHIVE
(
NAME
) \

6403 
NAME
##
_¶uΩ_¨m≠
, \

6404 
NAME
##
_¶uΩ_exãnded_«me_èbÀ
, \

6405 
NAME
##
_c⁄°ru˘_exãnded_«me_èbÀ
, \

6406 
NAME
##
_åunˇã_¨«me
, \

6407 
NAME
##
_wrôe_¨m≠
, \

6408 
NAME
##
_ªad_¨_hdr
, \

6409 
NAME
##
_wrôe_¨_hdr
, \

6410 
NAME
##
_›ír_√xt_¨chived_fûe
, \

6411 
NAME
##
_gë_ñt_©_ödex
, \

6412 
NAME
##
_gíîic_°©_¨ch_ñt
, \

6413 
NAME
##
_upd©e_¨m≠_time°amp


	)

6415 
bfd_boﬁón
 (*
_bfd_¶uΩ_¨m≠
Ë(
	gbfd
 *);

6416 
bfd_boﬁón
 (*
_bfd_¶uΩ_exãnded_«me_èbÀ
Ë(
	gbfd
 *);

6417 
bfd_boﬁón
 (*
_bfd_c⁄°ru˘_exãnded_«me_èbÀ
)

6418 (
	gbfd
 *, **, 
	gbfd_size_ty≥
 *, const **);

6419 (*
	g_bfd_åunˇã_¨«me
Ë(
	gbfd
 *, const *, *);

6420 
bfd_boﬁón
 (*
wrôe_¨m≠
)

6421 (
	gbfd
 *, , 
	g‹l
 *, , );

6422 * (*
	g_bfd_ªad_¨_hdr_‚
Ë(
	gbfd
 *);

6423 
bfd_boﬁón
 (*
_bfd_wrôe_¨_hdr_‚
Ë(
	gbfd
 *, bfd *);

6424 
	gbfd
 * (*
	g›ír_√xt_¨chived_fûe
) (bfd *, bfd *);

6425 
	#bfd_gë_ñt_©_ödex
(
b
,
i
Ë
	`BFD_SEND
 (b, 
_bfd_gë_ñt_©_ödex
, (b,i))

	)

6426 
	gbfd
 * (*
	g_bfd_gë_ñt_©_ödex
Ë(bfd *, 
	gsymödex
);

6427 (*
	g_bfd_°©_¨ch_ñt
Ë(
	gbfd
 *, 
	g°©
 *);

6428 
bfd_boﬁón
 (*
_bfd_upd©e_¨m≠_time°amp
Ë(
	gbfd
 *);

6431 
	#BFD_JUMP_TABLE_SYMBOLS
(
NAME
) \

6432 
NAME
##
_gë_symèb_uµî_bound
, \

6433 
NAME
##
_ˇn⁄iˇlize_symèb
, \

6434 
NAME
##
_make_em±y_symbﬁ
, \

6435 
NAME
##
_¥öt_symbﬁ
, \

6436 
NAME
##
_gë_symbﬁ_öfo
, \

6437 
NAME
##
_bfd_is_loˇl_œbñ_«me
, \

6438 
NAME
##
_bfd_is_èrgë_•ecül_symbﬁ
, \

6439 
NAME
##
_gë_löío
, \

6440 
NAME
##
_föd_√¨e°_löe
, \

6441 
_bfd_gíîic_föd_√¨e°_löe_dis¸imö©‹
, \

6442 
_bfd_gíîic_föd_löe
, \

6443 
NAME
##
_föd_ölöî_öfo
, \

6444 
NAME
##
_bfd_make_debug_symbﬁ
, \

6445 
NAME
##
_ªad_möisymbﬁs
, \

6446 
NAME
##
_möisymbﬁ_to_symbﬁ


	)

6448 (*
	g_bfd_gë_symèb_uµî_bound
Ë(
	gbfd
 *);

6449 (*
	g_bfd_ˇn⁄iˇlize_symèb
)

6450 (
	gbfd
 *, 
	gbfd_symbﬁ
 **);

6451 
	gbfd_symbﬁ
 *

6452 (*
	g_bfd_make_em±y_symbﬁ
Ë(
	gbfd
 *);

6453 (*
	g_bfd_¥öt_symbﬁ
)

6454 (
	gbfd
 *, *, 
	gbfd_symbﬁ
 *, 
	gbfd_¥öt_symbﬁ_ty≥
);

6455 
	#bfd_¥öt_symbﬁ
(
b
,
p
,
s
,
e
Ë
	`BFD_SEND
 (b, 
_bfd_¥öt_symbﬁ
, (b,p,s,e))

	)

6456 (*
	g_bfd_gë_symbﬁ_öfo
)

6457 (
	gbfd
 *, 
	gbfd_symbﬁ
 *, 
	gsymbﬁ_öfo
 *);

6458 
	#bfd_gë_symbﬁ_öfo
(
b
,
p
,
e
Ë
	`BFD_SEND
 (b, 
_bfd_gë_symbﬁ_öfo
, (b,p,e))

	)

6459 
bfd_boﬁón
 (*
_bfd_is_loˇl_œbñ_«me
Ë(
	gbfd
 *, const *);

6460 
bfd_boﬁón
 (*
_bfd_is_èrgë_•ecül_symbﬁ
Ë(
	gbfd
 *, 
	gasymbﬁ
 *);

6461 
	gÆít
 * (*
	g_gë_löío
Ë(
	gbfd
 *, 
	gbfd_symbﬁ
 *);

6462 
bfd_boﬁón
 (*
_bfd_föd_√¨e°_löe
)

6463 (
	gbfd
 *, 
	gbfd_£˘i⁄
 *, 
	gbfd_symbﬁ
 **, 
	gbfd_vma
,

6465 
bfd_boﬁón
 (*
_bfd_föd_√¨e°_löe_dis¸imö©‹
)

6466 (
	gbfd
 *, 
	gbfd_£˘i⁄
 *, 
	gbfd_symbﬁ
 **, 
	gbfd_vma
,

6468 
bfd_boﬁón
 (*
_bfd_föd_löe
)

6469 (
	gbfd
 *, 
	gbfd_symbﬁ
 **, bfd_symbol *,

6471 
bfd_boﬁón
 (*
_bfd_föd_ölöî_öfo
)

6472 (
	gbfd
 *, const **, const **, *);

6476 
	gasymbﬁ
 * (*
	g_bfd_make_debug_symbﬁ
)

6477 (
	gbfd
 *, *, 
	gsize
);

6478 
	#bfd_ªad_möisymbﬁs
(
b
, 
d
, 
m
, 
s
) \

6479 
	`BFD_SEND
 (
b
, 
_ªad_möisymbﬁs
, (b, 
d
, 
m
, 
s
))

	)

6480 (*
	g_ªad_möisymbﬁs
)

6481 (
	gbfd
 *, 
	gbfd_boﬁón
, **, *);

6482 
	#bfd_möisymbﬁ_to_symbﬁ
(
b
, 
d
, 
m
, 
f
) \

6483 
	`BFD_SEND
 (
b
, 
_möisymbﬁ_to_symbﬁ
, (b, 
d
, 
m
, 
f
))

	)

6484 
	gasymbﬁ
 * (*
	g_möisymbﬁ_to_symbﬁ
)

6485 (
	gbfd
 *, 
	gbfd_boﬁón
, c⁄° *, 
	gasymbﬁ
 *);

6488 
	#BFD_JUMP_TABLE_RELOCS
(
NAME
) \

6489 
NAME
##
_gë_ªloc_uµî_bound
, \

6490 
NAME
##
_ˇn⁄iˇlize_ªloc
, \

6491 
NAME
##
_bfd_ªloc_ty≥_lookup
, \

6492 
NAME
##
_bfd_ªloc_«me_lookup


	)

6494 (*
	g_gë_ªloc_uµî_bound
Ë(
	gbfd
 *, 
	g£c_±r
);

6495 (*
	g_bfd_ˇn⁄iˇlize_ªloc
)

6496 (
	gbfd
 *, 
	g£c_±r
, 
	g¨ñít
 **, 
	gbfd_symbﬁ
 **);

6498 
	gªloc_howto_ty≥
 *

6499 (*
	gªloc_ty≥_lookup
Ë(
	gbfd
 *, 
	gbfd_ªloc_code_ªÆ_ty≥
);

6500 
	gªloc_howto_ty≥
 *

6501 (*
	gªloc_«me_lookup
Ë(
	gbfd
 *, const *);

6505 
	#BFD_JUMP_TABLE_WRITE
(
NAME
) \

6506 
NAME
##
_£t_¨ch_mach
, \

6507 
NAME
##
_£t_£˘i⁄_c⁄ã¡s


	)

6509 
bfd_boﬁón
 (*
_bfd_£t_¨ch_mach
)

6510 (
	gbfd
 *, 
	gbfd_¨chôe˘uª
, );

6511 
bfd_boﬁón
 (*
_bfd_£t_£˘i⁄_c⁄ã¡s
)

6512 (
	gbfd
 *, 
	g£c_±r
, c⁄° *, 
	gfûe_±r
, 
	gbfd_size_ty≥
);

6515 
	#BFD_JUMP_TABLE_LINK
(
NAME
) \

6516 
NAME
##
_sizeof_hódîs
, \

6517 
NAME
##
_bfd_gë_ªloˇãd_£˘i⁄_c⁄ã¡s
, \

6518 
NAME
##
_bfd_ªœx_£˘i⁄
, \

6519 
NAME
##
_bfd_lök_hash_èbÀ_¸óã
, \

6520 
NAME
##
_bfd_lök_hash_èbÀ_‰ì
, \

6521 
NAME
##
_bfd_lök_add_symbﬁs
, \

6522 
NAME
##
_bfd_lök_ju°_syms
, \

6523 
NAME
##
_bfd_c›y_lök_hash_symbﬁ_ty≥
, \

6524 
NAME
##
_bfd_föÆ_lök
, \

6525 
NAME
##
_bfd_lök_•lô_£˘i⁄
, \

6526 
NAME
##
_bfd_gc_£˘i⁄s
, \

6527 
NAME
##
_bfd_lookup_£˘i⁄_Êags
, \

6528 
NAME
##
_bfd_mîge_£˘i⁄s
, \

6529 
NAME
##
_bfd_is_group_£˘i⁄
, \

6530 
NAME
##
_bfd_disˇrd_group
, \

6531 
NAME
##
_£˘i⁄_Æªady_löked
, \

6532 
NAME
##
_bfd_deföe_comm⁄_symbﬁ


	)

6534 (*
	g_bfd_sizeof_hódîs
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

6535 
	gbfd_byã
 * (*
	g_bfd_gë_ªloˇãd_£˘i⁄_c⁄ã¡s
)

6536 (
	gbfd
 *, 
	gbfd_lök_öfo
 *, 
	gbfd_lök_‹dî
 *,

6537 
	gbfd_byã
 *, 
	gbfd_boﬁón
, 
	gbfd_symbﬁ
 **);

6539 
bfd_boﬁón
 (*
_bfd_ªœx_£˘i⁄
)

6540 (
	gbfd
 *, 
	gbfd_£˘i⁄
 *, 
	gbfd_lök_öfo
 *, 
	gbfd_boﬁón
 *);

6544 
	gbfd_lök_hash_èbÀ
 *

6545 (*
	g_bfd_lök_hash_èbÀ_¸óã
Ë(
	gbfd
 *);

6548 (*
	g_bfd_lök_hash_èbÀ_‰ì
Ë(
	gbfd_lök_hash_èbÀ
 *);

6551 
bfd_boﬁón
 (*
_bfd_lök_add_symbﬁs
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

6554 (*
	g_bfd_lök_ju°_syms
Ë(
	ga£˘i⁄
 *, 
	gbfd_lök_öfo
 *);

6557 
	#bfd_c›y_lök_hash_symbﬁ_ty≥
(
b
, 
t
, 
f
) \

6558 
	`BFD_SEND
 (
b
, 
_bfd_c›y_lök_hash_symbﬁ_ty≥
, (b, 
t
, 
f
))

	)

6559 (*
	g_bfd_c›y_lök_hash_symbﬁ_ty≥
)

6560 (
	gbfd
 *, 
	gbfd_lök_hash_íåy
 *, bfd_link_hash_entry *);

6564 
bfd_boﬁón
 (*
_bfd_föÆ_lök
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

6567 
bfd_boﬁón
 (*
_bfd_lök_•lô_£˘i⁄
Ë(
	gbfd
 *, 
	gbfd_£˘i⁄
 *);

6570 
bfd_boﬁón
 (*
_bfd_gc_£˘i⁄s
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

6573 
bfd_boﬁón
 (*
_bfd_lookup_£˘i⁄_Êags
Ë(
	gbfd_lök_öfo
 *,

6574 
	gÊag_öfo
 *,

6575 
	ga£˘i⁄
 *);

6578 
bfd_boﬁón
 (*
_bfd_mîge_£˘i⁄s
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

6581 
bfd_boﬁón
 (*
_bfd_is_group_£˘i⁄
Ë(
	gbfd
 *, c⁄° 
	gbfd_£˘i⁄
 *);

6584 
bfd_boﬁón
 (*
_bfd_disˇrd_group
Ë(
	gbfd
 *, 
	gbfd_£˘i⁄
 *);

6588 
bfd_boﬁón
 (*
_£˘i⁄_Æªady_löked
Ë(
	gbfd
 *, 
	ga£˘i⁄
 *,

6589 
	gbfd_lök_öfo
 *);

6592 
bfd_boﬁón
 (*
_bfd_deföe_comm⁄_symbﬁ
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *,

6593 
	gbfd_lök_hash_íåy
 *);

6596 
	#BFD_JUMP_TABLE_DYNAMIC
(
NAME
) \

6597 
NAME
##
_gë_dy«mic_symèb_uµî_bound
, \

6598 
NAME
##
_ˇn⁄iˇlize_dy«mic_symèb
, \

6599 
NAME
##
_gë_sy¡hëic_symèb
, \

6600 
NAME
##
_gë_dy«mic_ªloc_uµî_bound
, \

6601 
NAME
##
_ˇn⁄iˇlize_dy«mic_ªloc


	)

6604 (*
	g_bfd_gë_dy«mic_symèb_uµî_bound
Ë(
	gbfd
 *);

6606 (*
	g_bfd_ˇn⁄iˇlize_dy«mic_symèb
)

6607 (
	gbfd
 *, 
	gbfd_symbﬁ
 **);

6609 (*
	g_bfd_gë_sy¡hëic_symèb
)

6610 (
	gbfd
 *, , 
	gbfd_symbﬁ
 **, , bfd_symbol **,

6611 
	gbfd_symbﬁ
 **);

6613 (*
	g_bfd_gë_dy«mic_ªloc_uµî_bound
Ë(
	gbfd
 *);

6615 (*
	g_bfd_ˇn⁄iˇlize_dy«mic_ªloc
)

6616 (
	gbfd
 *, 
	g¨ñít
 **, 
	gbfd_symbﬁ
 **);

6619 c⁄° 
bfd_èrgë
 * 
	gÆã∫©ive_èrgë
;

6623 c⁄° *
	gbackíd_d©a
;

6625 } 
	tbfd_èrgë
;

6627 
bfd_boﬁón
 
bfd_£t_deÁu…_èrgë
 (c⁄° *
«me
);

6629 c⁄° 
bfd_èrgë
 *
bfd_föd_èrgë
 (c⁄° *
èrgë_«me
, 
bfd
 *
abfd
);

6631 c⁄° 
bfd_èrgë
 *
bfd_gë_èrgë_öfo
 (c⁄° *
èrgë_«me
,

6632 
bfd
 *
abfd
,

6633 
bfd_boﬁón
 *
is_bigídün
,

6634 *
undîsc‹ög
,

6635 c⁄° **
def_èrgë_¨ch
);

6636 c⁄° ** 
bfd_èrgë_li°
 ();

6638 c⁄° 
bfd_èrgë
 *
	gbfd_£¨ch_f‹_èrgë


6639 ((*
	g£¨ch_func
Ë(c⁄° 
	gbfd_èrgë
 *, *),

6643 
bfd_boﬁón
 
bfd_check_f‹m©
 (
bfd
 *
abfd
, 
bfd_f‹m©
 
f‹m©
);

6645 
bfd_boﬁón
 
	gbfd_check_f‹m©_m©ches


6646 (
bfd
 *
	gabfd
, 
bfd_f‹m©
 
	gf‹m©
, ***
	gm©chög
);

6648 
bfd_boﬁón
 
bfd_£t_f‹m©
 (
bfd
 *
abfd
, 
bfd_f‹m©
 
f‹m©
);

6650 c⁄° *
bfd_f‹m©_°rög
 (
bfd_f‹m©
 
f‹m©
);

6653 
bfd_boﬁón
 
bfd_lök_•lô_£˘i⁄
 (
bfd
 *
abfd
, 
a£˘i⁄
 *
£c
);

6655 
	#bfd_lök_•lô_£˘i⁄
(
abfd
, 
£c
) \

6656 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_•lô_£˘i⁄
, (abfd, 
£c
))

	)

6658 
bfd_boﬁón
 
bfd_£˘i⁄_Æªady_löked
 (
bfd
 *
abfd
,

6659 
a£˘i⁄
 *
£c
,

6660 
bfd_lök_öfo
 *
öfo
);

6662 
	#bfd_£˘i⁄_Æªady_löked
(
abfd
, 
£c
, 
öfo
) \

6663 
	`BFD_SEND
 (
abfd
, 
_£˘i⁄_Æªady_löked
, (abfd, 
£c
, 
öfo
))

	)

6665 
bfd_boﬁón
 
	gbfd_gíîic_deföe_comm⁄_symbﬁ


6666 (
bfd
 *
	gouçut_bfd
, 
bfd_lök_öfo
 *
	göfo
,

6667 
bfd_lök_hash_íåy
 *
	gh
);

6669 
	#bfd_deföe_comm⁄_symbﬁ
(
ouçut_bfd
, 
öfo
, 
h
) \

6670 
	`BFD_SEND
 (
ouçut_bfd
, 
_bfd_deföe_comm⁄_symbﬁ
, (ouçut_bfd, 
öfo
, 
h
))

	)

6672 
bfd_ñf_vîsi⁄_åì
 * 
	gbfd_föd_vîsi⁄_f‹_sym


6673 (
bfd_ñf_vîsi⁄_åì
 *
	gvîdefs
,

6674 c⁄° *
	gsym_«me
, 
bfd_boﬁón
 *
	ghide
);

6676 
bfd_boﬁón
 
	gbfd_hide_sym_by_vîsi⁄


6677 (
bfd_ñf_vîsi⁄_åì
 *
	gvîdefs
, c⁄° *
	gsym_«me
);

6680 
bfd_byã
 *
	gbfd_sim∂e_gë_ªloˇãd_£˘i⁄_c⁄ã¡s


6681 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
bfd_byã
 *
	goutbuf
, 
asymbﬁ
 **
	gsymbﬁ_èbÀ
);

6684 
bfd_boﬁón
 
	gbfd_com¥ess_£˘i⁄_c⁄ã¡s


6685 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, 
bfd_byã
 *
	guncom¥es£d_buf„r
,

6686 
bfd_size_ty≥
 
	guncom¥es£d_size
);

6688 
bfd_boﬁón
 
	gbfd_gë_fuŒ_£˘i⁄_c⁄ã¡s


6689 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, 
bfd_byã
 **
	g±r
);

6691 
bfd_boﬁón
 
	gbfd_is_£˘i⁄_com¥es£d


6692 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
);

6694 
bfd_boﬁón
 
	gbfd_öô_£˘i⁄_decom¥ess_°©us


6695 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
);

6697 
bfd_boﬁón
 
	gbfd_öô_£˘i⁄_com¥ess_°©us


6698 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
);

6700 #ifde‡
__˝lu•lus


	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

146 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


148 #i‡
__WORDSIZE
 == 64

149 
	#__INT64_C
(
c
Ë¯## 
L


	)

150 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

152 
	#__INT64_C
(
c
Ë¯## 
LL


	)

153 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

159 
	#INT8_MIN
 (-128)

	)

160 
	#INT16_MIN
 (-32767-1)

	)

161 
	#INT32_MIN
 (-2147483647-1)

	)

162 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

164 
	#INT8_MAX
 (127)

	)

165 
	#INT16_MAX
 (32767)

	)

166 
	#INT32_MAX
 (2147483647)

	)

167 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

170 
	#UINT8_MAX
 (255)

	)

171 
	#UINT16_MAX
 (65535)

	)

172 
	#UINT32_MAX
 (4294967295U)

	)

173 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

177 
	#INT_LEAST8_MIN
 (-128)

	)

178 
	#INT_LEAST16_MIN
 (-32767-1)

	)

179 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

180 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

182 
	#INT_LEAST8_MAX
 (127)

	)

183 
	#INT_LEAST16_MAX
 (32767)

	)

184 
	#INT_LEAST32_MAX
 (2147483647)

	)

185 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

188 
	#UINT_LEAST8_MAX
 (255)

	)

189 
	#UINT_LEAST16_MAX
 (65535)

	)

190 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

191 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

195 
	#INT_FAST8_MIN
 (-128)

	)

196 #i‡
__WORDSIZE
 == 64

197 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

198 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

200 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

201 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

203 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

205 
	#INT_FAST8_MAX
 (127)

	)

206 #i‡
__WORDSIZE
 == 64

207 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

208 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

210 
	#INT_FAST16_MAX
 (2147483647)

	)

211 
	#INT_FAST32_MAX
 (2147483647)

	)

213 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

216 
	#UINT_FAST8_MAX
 (255)

	)

217 #i‡
__WORDSIZE
 == 64

218 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

219 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

221 
	#UINT_FAST16_MAX
 (4294967295U)

	)

222 
	#UINT_FAST32_MAX
 (4294967295U)

	)

224 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

228 #i‡
__WORDSIZE
 == 64

229 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

230 
	#INTPTR_MAX
 (9223372036854775807L)

	)

231 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

233 
	#INTPTR_MIN
 (-2147483647-1)

	)

234 
	#INTPTR_MAX
 (2147483647)

	)

235 
	#UINTPTR_MAX
 (4294967295U)

	)

240 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

242 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

245 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

251 #i‡
__WORDSIZE
 == 64

252 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

253 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

255 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

256 
	#PTRDIFF_MAX
 (2147483647)

	)

260 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

261 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#SIZE_MAX
 (18446744073709551615UL)

	)

267 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

286 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


289 
	#INT8_C
(
c
Ë
	)
c

290 
	#INT16_C
(
c
Ë
	)
c

291 
	#INT32_C
(
c
Ë
	)
c

292 #i‡
__WORDSIZE
 == 64

293 
	#INT64_C
(
c
Ë¯## 
L


	)

295 
	#INT64_C
(
c
Ë¯## 
LL


	)

299 
	#UINT8_C
(
c
Ë
	)
c

300 
	#UINT16_C
(
c
Ë
	)
c

301 
	#UINT32_C
(
c
Ë¯## 
U


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#UINT64_C
(
c
Ë¯## 
UL


	)

305 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

309 #i‡
__WORDSIZE
 == 64

310 
	#INTMAX_C
(
c
Ë¯## 
L


	)

311 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

313 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

314 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

329 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

330 #i‡
_FORTIFY_SOURCE
 > 1

331 
	#__USE_FORTIFY_LEVEL
 2

	)

333 
	#__USE_FORTIFY_LEVEL
 1

	)

336 
	#__USE_FORTIFY_LEVEL
 0

	)

341 
	~<°dc-¥edef.h
>

349 #unde‡
__GNU_LIBRARY__


350 
	#__GNU_LIBRARY__
 6

	)

354 
	#__GLIBC__
 2

	)

355 
	#__GLIBC_MINOR__
 17

	)

357 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

358 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

361 #i‡
deföed
 
__GNUC__
 \

362 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

363 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

364 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

365 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

369 #i‚de‡
__ASSEMBLER__


370 #i‚de‡
_SYS_CDEFS_H


371 
	~<sys/cdefs.h
>

376 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


377 
	#__USE_LARGEFILE
 1

	)

378 
	#__USE_LARGEFILE64
 1

	)

384 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

385 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

386 && 
deföed
 
	g__exã∫_ölöe


387 
	#__USE_EXTERN_INLINES
 1

	)

395 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	~<bôs/¥edefs.h
>

34 
	#__STDC_ISO_10646__
 201103L

	)

37 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
26
472
Analysis.h
CodeInfoStruct.h
ELFStruct.h
Exeformat.h
MyString.cpp
MyString.h
PEStruct.h
WPStruct.h
datatype.h
or.h
/usr/include/ctype.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
